

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 22 19:40:31 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	functab,global,class=ENTRY,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0088                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0098                     	;# 
   312  0099                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0000                     	;# 
   444  0001                     	;# 
   445  0002                     	;# 
   446  0003                     	;# 
   447  0004                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  0007                     	;# 
   451  0008                     	;# 
   452  0009                     	;# 
   453  000A                     	;# 
   454  000B                     	;# 
   455  000C                     	;# 
   456  000D                     	;# 
   457  000E                     	;# 
   458  000E                     	;# 
   459  000F                     	;# 
   460  0010                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0013                     	;# 
   464  0014                     	;# 
   465  0015                     	;# 
   466  0015                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001D                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  0081                     	;# 
   479  0085                     	;# 
   480  0086                     	;# 
   481  0087                     	;# 
   482  0088                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0094                     	;# 
   491  0098                     	;# 
   492  0099                     	;# 
   493  009C                     	;# 
   494  009D                     	;# 
   495  009E                     	;# 
   496  009F                     	;# 
   497  010C                     	;# 
   498  010D                     	;# 
   499  010E                     	;# 
   500  010F                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  000E                     	;# 
   519  000F                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0013                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001D                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  0081                     	;# 
   539  0085                     	;# 
   540  0086                     	;# 
   541  0087                     	;# 
   542  0088                     	;# 
   543  0089                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0094                     	;# 
   551  0098                     	;# 
   552  0099                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0088                     	;# 
   603  0089                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  009F                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  018C                     	;# 
   622  018D                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  000E                     	;# 
   639  000F                     	;# 
   640  0010                     	;# 
   641  0011                     	;# 
   642  0012                     	;# 
   643  0013                     	;# 
   644  0014                     	;# 
   645  0015                     	;# 
   646  0015                     	;# 
   647  0016                     	;# 
   648  0017                     	;# 
   649  0018                     	;# 
   650  0019                     	;# 
   651  001A                     	;# 
   652  001B                     	;# 
   653  001B                     	;# 
   654  001C                     	;# 
   655  001D                     	;# 
   656  001E                     	;# 
   657  001F                     	;# 
   658  0081                     	;# 
   659  0085                     	;# 
   660  0086                     	;# 
   661  0087                     	;# 
   662  0088                     	;# 
   663  0089                     	;# 
   664  008C                     	;# 
   665  008D                     	;# 
   666  008E                     	;# 
   667  0091                     	;# 
   668  0092                     	;# 
   669  0093                     	;# 
   670  0094                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009C                     	;# 
   674  009D                     	;# 
   675  009E                     	;# 
   676  009F                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010F                     	;# 
   681  018C                     	;# 
   682  018D                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000D                     	;# 
   697  000E                     	;# 
   698  000E                     	;# 
   699  000F                     	;# 
   700  0010                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0013                     	;# 
   704  0014                     	;# 
   705  0015                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  001D                     	;# 
   716  001E                     	;# 
   717  001F                     	;# 
   718  0081                     	;# 
   719  0085                     	;# 
   720  0086                     	;# 
   721  0087                     	;# 
   722  0088                     	;# 
   723  0089                     	;# 
   724  008C                     	;# 
   725  008D                     	;# 
   726  008E                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0093                     	;# 
   730  0094                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009C                     	;# 
   734  009D                     	;# 
   735  009E                     	;# 
   736  009F                     	;# 
   737  010C                     	;# 
   738  010D                     	;# 
   739  010E                     	;# 
   740  010F                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  0000                     	;# 
   744  0001                     	;# 
   745  0002                     	;# 
   746  0003                     	;# 
   747  0004                     	;# 
   748  0005                     	;# 
   749  0006                     	;# 
   750  0007                     	;# 
   751  0008                     	;# 
   752  0009                     	;# 
   753  000A                     	;# 
   754  000B                     	;# 
   755  000C                     	;# 
   756  000D                     	;# 
   757  000E                     	;# 
   758  000E                     	;# 
   759  000F                     	;# 
   760  0010                     	;# 
   761  0011                     	;# 
   762  0012                     	;# 
   763  0013                     	;# 
   764  0014                     	;# 
   765  0015                     	;# 
   766  0015                     	;# 
   767  0016                     	;# 
   768  0017                     	;# 
   769  0018                     	;# 
   770  0019                     	;# 
   771  001A                     	;# 
   772  001B                     	;# 
   773  001B                     	;# 
   774  001C                     	;# 
   775  001D                     	;# 
   776  001E                     	;# 
   777  001F                     	;# 
   778  0081                     	;# 
   779  0085                     	;# 
   780  0086                     	;# 
   781  0087                     	;# 
   782  0088                     	;# 
   783  0089                     	;# 
   784  008C                     	;# 
   785  008D                     	;# 
   786  008E                     	;# 
   787  0091                     	;# 
   788  0092                     	;# 
   789  0093                     	;# 
   790  0094                     	;# 
   791  0098                     	;# 
   792  0099                     	;# 
   793  009C                     	;# 
   794  009D                     	;# 
   795  009E                     	;# 
   796  009F                     	;# 
   797  010C                     	;# 
   798  010D                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  0000                     	;# 
   804  0001                     	;# 
   805  0002                     	;# 
   806  0003                     	;# 
   807  0004                     	;# 
   808  0005                     	;# 
   809  0006                     	;# 
   810  0007                     	;# 
   811  0008                     	;# 
   812  0009                     	;# 
   813  000A                     	;# 
   814  000B                     	;# 
   815  000C                     	;# 
   816  000D                     	;# 
   817  000E                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0014                     	;# 
   825  0015                     	;# 
   826  0015                     	;# 
   827  0016                     	;# 
   828  0017                     	;# 
   829  0018                     	;# 
   830  0019                     	;# 
   831  001A                     	;# 
   832  001B                     	;# 
   833  001B                     	;# 
   834  001C                     	;# 
   835  001D                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  0081                     	;# 
   839  0085                     	;# 
   840  0086                     	;# 
   841  0087                     	;# 
   842  0088                     	;# 
   843  0089                     	;# 
   844  008C                     	;# 
   845  008D                     	;# 
   846  008E                     	;# 
   847  0091                     	;# 
   848  0092                     	;# 
   849  0093                     	;# 
   850  0094                     	;# 
   851  0098                     	;# 
   852  0099                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  009F                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  018C                     	;# 
   862  018D                     	;# 
   863  0000                     	;# 
   864  0001                     	;# 
   865  0002                     	;# 
   866  0003                     	;# 
   867  0004                     	;# 
   868  0005                     	;# 
   869  0006                     	;# 
   870  0007                     	;# 
   871  0008                     	;# 
   872  0009                     	;# 
   873  000A                     	;# 
   874  000B                     	;# 
   875  000C                     	;# 
   876  000D                     	;# 
   877  000E                     	;# 
   878  000E                     	;# 
   879  000F                     	;# 
   880  0010                     	;# 
   881  0011                     	;# 
   882  0012                     	;# 
   883  0013                     	;# 
   884  0014                     	;# 
   885  0015                     	;# 
   886  0015                     	;# 
   887  0016                     	;# 
   888  0017                     	;# 
   889  0018                     	;# 
   890  0019                     	;# 
   891  001A                     	;# 
   892  001B                     	;# 
   893  001B                     	;# 
   894  001C                     	;# 
   895  001D                     	;# 
   896  001E                     	;# 
   897  001F                     	;# 
   898  0081                     	;# 
   899  0085                     	;# 
   900  0086                     	;# 
   901  0087                     	;# 
   902  0088                     	;# 
   903  0089                     	;# 
   904  008C                     	;# 
   905  008D                     	;# 
   906  008E                     	;# 
   907  0091                     	;# 
   908  0092                     	;# 
   909  0093                     	;# 
   910  0094                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  009F                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  010E                     	;# 
   920  010F                     	;# 
   921  018C                     	;# 
   922  018D                     	;# 
   923                           
   924                           	psect	strings
   925  0600                     __pstrings:
   926  0600                     stringtab:
   927  0600                     __stringtab:
   928  0600                     stringcode:	
   929                           ;	String table - string pointers are 1 byte each
   930                           
   931  0600                     stringdir:
   932  0600  3006               	movlw	high stringdir
   933  0601  008A               	movwf	10
   934  0602  0804               	movf	4,w
   935  0603  0A84               	incf	4,f
   936  0604  0782               	addwf	2,f
   937  0605                     __stringbase:
   938  0605  3400               	retlw	0
   939  0606                     __end_of__stringtab:
   940  0606                     _Tasks:
   941  0606  3405               	retlw	5
   942  0607  3400               	retlw	0
   943  0608  3407               	retlw	low (fp__Scheduler_Task1-i1fpbase)
   944  0609  3414               	retlw	20
   945  060A  3400               	retlw	0
   946  060B  340A               	retlw	low (fp__Scheduler_Task2-i1fpbase)
   947  060C  34E8               	retlw	232
   948  060D  3403               	retlw	3
   949  060E  3404               	retlw	low (fp__Scheduler_Task3-i1fpbase)
   950  060F                     __end_of_Tasks:
   951  060F                     _Interrupt_CbStruct:
   952  060F  340D               	retlw	low (fp__Timer0_CB-i1fpbase)
   953  0610  3401               	retlw	low (fp__EXTI_SettingButton_CB-i1fpbase)
   954  0611                     __end_of_Interrupt_CbStruct:
   955  0008                     _PORTD	set	8
   956  0005                     _PORTA	set	5
   957  0006                     _PORTB	set	6
   958  000B                     _INTCONbits	set	11
   959  0001                     _TMR0	set	1
   960  005A                     _TMR0IF	set	90
   961  0088                     _TRISD	set	136
   962  0085                     _TRISA	set	133
   963  0086                     _TRISB	set	134
   964  0081                     _OPTION_REGbits	set	129
   965  040E                     _INTEDG	set	1038
   966                           
   967                           	psect	cinit
   968  0015                     start_initialization:	
   969                           ; #config settings
   970                           
   971  0015                     __initialization:
   972                           
   973                           ; Clear objects allocated to COMMON
   974  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   975  0016  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   976                           
   977                           ; Clear objects allocated to BANK0
   978  0017  1383               	bcf	3,7	;select IRP bank0
   979  0018  3020               	movlw	low __pbssBANK0
   980  0019  0084               	movwf	4
   981  001A  303B               	movlw	low (__pbssBANK0+27)
   982  001B  120A  118A  263A  120A  118A  	fcall	clear_ram0
   983  0020                     end_of_initialization:	
   984                           ;End of C runtime variable initialization code
   985                           
   986  0020                     __end_of__initialization:
   987  0020  0183               	clrf	3
   988  0021  120A  118A  2CAA   	ljmp	_main	;jump to C main() function
   989                           
   990                           	psect	bssCOMMON
   991  007C                     __pbssCOMMON:
   992  007C                     _Enable_Minutes:
   993  007C                     	ds	1
   994  007D                     _ButtonsFlag:
   995  007D                     	ds	1
   996                           
   997                           	psect	bssBANK0
   998  0020                     __pbssBANK0:
   999  0020                     _Tick:
  1000  0020                     	ds	4
  1001  0024                     _Clock:
  1002  0024                     	ds	3
  1003  0027                     Display_Blink@Counter:
  1004  0027                     	ds	2
  1005  0029                     _Digit4:
  1006  0029                     	ds	1
  1007  002A                     _Digit3:
  1008  002A                     	ds	1
  1009  002B                     _Digit2:
  1010  002B                     	ds	1
  1011  002C                     _Digit1:
  1012  002C                     	ds	1
  1013  002D                     _Enable_Hours:
  1014  002D                     	ds	1
  1015  002E                     _DigitSelector:
  1016  002E                     	ds	1
  1017  002F                     Buttons_Update@Debounce_Counter:
  1018  002F                     	ds	1
  1019  0030                     _Display:
  1020  0030                     	ds	1
  1021  0031                     _MODE:
  1022  0031                     	ds	1
  1023  0032                     _Debounce_DownButton:
  1024  0032                     	ds	3
  1025  0035                     _Debounce_UpButton:
  1026  0035                     	ds	3
  1027  0038                     _Task_Flag:
  1028  0038                     	ds	3
  1029                           
  1030                           	psect	clrtext
  1031  063A                     clear_ram0:	
  1032                           ;	Called with FSR containing the base address, and
  1033                           ;	W with the last address+1
  1034                           
  1035  063A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1036  063B                     clrloop0:
  1037  063B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1038  063C  0A84               	incf	4,f	;increment pointer
  1039  063D  0604               	xorwf	4,w	;XOR with final address
  1040  063E  1903               	btfsc	3,2	;have we reached the end yet?
  1041  063F  3400               	retlw	0	;all done for this memory range, return
  1042  0640  0604               	xorwf	4,w	;XOR again to restore value
  1043  0641  2E3B               	goto	clrloop0	;do the next byte
  1044                           
  1045                           	psect	cstackCOMMON
  1046  0070                     __pcstackCOMMON:
  1047  0070                     ?_GPIO_Init:
  1048  0070                     ?_Display_Init:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0070                     ?_Clock_Init:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0070                     ?_ModeManager_Init:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  0070                     ?_Buttons_Init:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  0070                     ?_Timer_Init:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063  0070                     ?_Scheduler_Init:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066  0070                     ?_Timer_Start:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0070                     ?_Display_Normal:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0070                     ??_Display_Normal:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0070                     ?_SSD_DigitSelector:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ?_Scheduler_Task1:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     ?_Scheduler_Task2:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084  0070                     ?_Scheduler_Task3:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0070                     ?_Clock_Update:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090  0070                     ?_Clock_Normal:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093  0070                     ??_Clock_Normal:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096  0070                     ?_Clock_Hour_Setting:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099  0070                     ??_Clock_Hour_Setting:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102  0070                     ?_Clock_Minutes_Setting:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0070                     ??_Clock_Minutes_Setting:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0070                     ?_SSD_Display:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0070                     ??_SSD_Display:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0070                     ?_main:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0070                     ?_Scheduler_Update:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0070                     ?_Timer0_CB:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ?_Buttons_Update:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ?_EXTI_SettingButton_CB:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ??_EXTI_SettingButton_CB:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0070                     ?_Display_Update:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0070                     ?_ModeManager_Update:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ??_ModeManager_Update:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_ISR:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?___bmul:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?___wmul:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?___awdiv:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153  0070                     ?___awmod:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156  0070                     ___bmul@multiplicand:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159  0070                     ___wmul@multiplier:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ___awdiv@divisor:	
  1163                           ; 2 bytes @ 0x0
  1164                           
  1165  0070                     ___awmod@divisor:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168                           
  1169                           ; 2 bytes @ 0x0
  1170  0070                     	ds	1
  1171  0071                     ??___bmul:
  1172  0071                     ___bmul@product:	
  1173                           ; 1 bytes @ 0x1
  1174                           
  1175                           
  1176                           ; 1 bytes @ 0x1
  1177  0071                     	ds	1
  1178  0072                     SSD_Display@Number:
  1179  0072                     ___bmul@multiplier:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182  0072                     ___wmul@multiplicand:	
  1183                           ; 1 bytes @ 0x2
  1184                           
  1185  0072                     ___awdiv@dividend:	
  1186                           ; 2 bytes @ 0x2
  1187                           
  1188  0072                     ___awmod@dividend:	
  1189                           ; 2 bytes @ 0x2
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x2
  1193  0072                     	ds	1
  1194  0073                     ??_SSD_DigitSelector:
  1195  0073                     ?___llmod:	
  1196                           ; 1 bytes @ 0x3
  1197                           
  1198  0073                     ___llmod@divisor:	
  1199                           ; 4 bytes @ 0x3
  1200                           
  1201                           
  1202                           ; 4 bytes @ 0x3
  1203  0073                     	ds	1
  1204  0074                     ??___wmul:
  1205  0074                     ??___awdiv:	
  1206                           ; 1 bytes @ 0x4
  1207                           
  1208  0074                     ??___awmod:	
  1209                           ; 1 bytes @ 0x4
  1210                           
  1211  0074                     ___awdiv@counter:	
  1212                           ; 1 bytes @ 0x4
  1213                           
  1214  0074                     ___awmod@counter:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217  0074                     ___wmul@product:	
  1218                           ; 1 bytes @ 0x4
  1219                           
  1220                           
  1221                           ; 2 bytes @ 0x4
  1222  0074                     	ds	1
  1223  0075                     ___awdiv@sign:
  1224  0075                     ___awmod@sign:	
  1225                           ; 1 bytes @ 0x5
  1226                           
  1227                           
  1228                           ; 1 bytes @ 0x5
  1229  0075                     	ds	1
  1230  0076                     ?_Display_Blink:
  1231  0076                     ??_Scheduler_Task2:	
  1232                           ; 1 bytes @ 0x6
  1233                           
  1234  0076                     ??_Buttons_Update:	
  1235                           ; 1 bytes @ 0x6
  1236                           
  1237  0076                     Display_Blink@Times_Ms:	
  1238                           ; 1 bytes @ 0x6
  1239                           
  1240  0076                     ___awdiv@quotient:	
  1241                           ; 2 bytes @ 0x6
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x6
  1245  0076                     	ds	1
  1246  0077                     ___llmod@dividend:
  1247                           
  1248                           ; 4 bytes @ 0x7
  1249  0077                     	ds	1
  1250  0078                     ??_Clock_Update:
  1251  0078                     Display_Blink@_MODE_:	
  1252                           ; 1 bytes @ 0x8
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x8
  1256  0078                     	ds	1
  1257  0079                     ??_Display_Blink:
  1258  0079                     ??_Display_Update:	
  1259                           ; 1 bytes @ 0x9
  1260                           
  1261                           
  1262                           ; 1 bytes @ 0x9
  1263  0079                     	ds	1
  1264  007A                     ??_Scheduler_Task3:
  1265                           
  1266                           ; 1 bytes @ 0xA
  1267  007A                     	ds	1
  1268  007B                     ??_Scheduler_Task1:
  1269  007B                     ??___llmod:	
  1270                           ; 1 bytes @ 0xB
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0xB
  1274  007B                     	ds	1
  1275  007C                     ??_Timer0_CB:
  1276                           
  1277                           	psect	cstackBANK0
  1278  003B                     __pcstackBANK0:	
  1279                           ; 1 bytes @ 0xC
  1280                           
  1281  003B                     ___llmod@counter:
  1282                           
  1283                           ; 1 bytes @ 0x0
  1284  003B                     	ds	1
  1285  003C                     ??_Scheduler_Update:
  1286                           
  1287                           ; 1 bytes @ 0x1
  1288  003C                     	ds	6
  1289  0042                     Scheduler_Update@i:
  1290                           
  1291                           ; 1 bytes @ 0x7
  1292  0042                     	ds	1
  1293  0043                     ??_ISR:
  1294                           
  1295                           ; 1 bytes @ 0x8
  1296  0043                     	ds	4
  1297  0047                     ??_GPIO_Init:
  1298  0047                     ??_Display_Init:	
  1299                           ; 1 bytes @ 0xC
  1300                           
  1301  0047                     ??_Clock_Init:	
  1302                           ; 1 bytes @ 0xC
  1303                           
  1304  0047                     ??_ModeManager_Init:	
  1305                           ; 1 bytes @ 0xC
  1306                           
  1307  0047                     ??_Timer_Init:	
  1308                           ; 1 bytes @ 0xC
  1309                           
  1310  0047                     ??_Timer_Start:	
  1311                           ; 1 bytes @ 0xC
  1312                           
  1313  0047                     ?_memset:	
  1314                           ; 1 bytes @ 0xC
  1315                           
  1316  0047                     memset@c:	
  1317                           ; 1 bytes @ 0xC
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0xC
  1321  0047                     	ds	2
  1322  0049                     memset@n:
  1323                           
  1324                           ; 2 bytes @ 0xE
  1325  0049                     	ds	2
  1326  004B                     ??_memset:
  1327  004B                     memset@p:	
  1328                           ; 1 bytes @ 0x10
  1329                           
  1330                           
  1331                           ; 1 bytes @ 0x10
  1332  004B                     	ds	1
  1333  004C                     memset@p1:
  1334                           
  1335                           ; 1 bytes @ 0x11
  1336  004C                     	ds	1
  1337  004D                     ??_Buttons_Init:
  1338  004D                     ??_Scheduler_Init:	
  1339                           ; 1 bytes @ 0x12
  1340                           
  1341  004D                     ??_main:	
  1342                           ; 1 bytes @ 0x12
  1343                           
  1344                           
  1345                           	psect	maintext
  1346  04AA                     __pmaintext:	
  1347                           ; 1 bytes @ 0x12
  1348 ;;
  1349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1350 ;;
  1351 ;; *************** function _main *****************
  1352 ;; Defined at:
  1353 ;;		line 18 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : B00/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0
  1370 ;;      Totals:         0       0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels required when called:    9
  1373 ;; This function calls:
  1374 ;;		_Buttons_Init
  1375 ;;		_Clock_Init
  1376 ;;		_Display_Init
  1377 ;;		_GPIO_Init
  1378 ;;		_ModeManager_Init
  1379 ;;		_Scheduler_Init
  1380 ;;		_Timer_Init
  1381 ;;		_Timer_Start
  1382 ;; This function is called by:
  1383 ;;		Startup code after reset
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _main
  1389  04AA                     _main:
  1390  04AA                     l2208:	
  1391                           ;incstack = 0
  1392 ;; hardware stack exceeded
  1393                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394                           
  1395                           
  1396                           ;main.c: 19:     GPIO_Init();
  1397  04AA  120A  118A  256B  120A  118A  	fcall	_GPIO_Init
  1398                           
  1399                           ;main.c: 20:     Display_Init();
  1400  04AF  120A  118A  25B0  120A  118A  	fcall	_Display_Init
  1401  04B4                     l2210:
  1402                           
  1403                           ;main.c: 21:     Clock_Init();
  1404  04B4  120A  118A  2649  120A  118A  	fcall	_Clock_Init
  1405  04B9                     l2212:
  1406                           
  1407                           ;main.c: 22:     ModeManager_Init();
  1408  04B9  120A  118A  265B  120A  118A  	fcall	_ModeManager_Init
  1409  04BE                     l2214:
  1410                           
  1411                           ;main.c: 23:     Buttons_Init();
  1412  04BE  120A  118A  24D6  120A  118A  	fcall	_Buttons_Init
  1413  04C3                     l2216:
  1414                           
  1415                           ;main.c: 24:     Timer_Init();
  1416  04C3  120A  118A  2621  120A  118A  	fcall	_Timer_Init
  1417  04C8                     l2218:
  1418                           
  1419                           ;main.c: 25:     Scheduler_Init();
  1420  04C8  120A  118A  2611  120A  118A  	fcall	_Scheduler_Init
  1421  04CD                     l2220:
  1422                           
  1423                           ;main.c: 26:     Timer_Start();
  1424  04CD  120A  118A  265F  120A  118A  	fcall	_Timer_Start
  1425  04D2                     l29:	
  1426                           ;main.c: 27:     while(1);
  1427                           
  1428  04D2                     l30:
  1429  04D2  2CD2               	goto	l29
  1430  04D3  120A  118A  2812   	ljmp	start
  1431  04D6                     __end_of_main:
  1432                           
  1433                           	psect	text1
  1434  065F                     __ptext1:	
  1435 ;; *************** function _Timer_Start *****************
  1436 ;; Defined at:
  1437 ;;		line 33 in file "Timer/Timer.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		None
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    7
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _Timer_Start
  1467  065F                     _Timer_Start:
  1468  065F                     l2006:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _Timer_Start: []
  1471                           
  1472                           
  1473                           ;Timer/Timer.c: 35:     INTCONbits.TMR0IE=1;
  1474  065F  168B               	bsf	11,5	;volatile
  1475  0660                     l67:
  1476  0660  0008               	return
  1477  0661                     __end_of_Timer_Start:
  1478                           
  1479                           	psect	text2
  1480  0621                     __ptext2:	
  1481 ;; *************** function _Timer_Init *****************
  1482 ;; Defined at:
  1483 ;;		line 14 in file "Timer/Timer.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    7
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           
  1512                           ;psect for function _Timer_Init
  1513  0621                     _Timer_Init:
  1514  0621                     l1996:	
  1515                           ;incstack = 0
  1516                           ; Regs used in _Timer_Init: [wreg]
  1517                           
  1518                           
  1519                           ;Timer/Timer.c: 16:     OPTION_REGbits.T0CS=0;
  1520  0621  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0622  1303               	bcf	3,6	;RP1=0, select bank1
  1522  0623  1281               	bcf	1,5	;volatile
  1523                           
  1524                           ;Timer/Timer.c: 17:     OPTION_REGbits.PSA=0;
  1525  0624  1181               	bcf	1,3	;volatile
  1526                           
  1527                           ;Timer/Timer.c: 19:     OPTION_REGbits.PS0=0;
  1528  0625  1001               	bcf	1,0	;volatile
  1529                           
  1530                           ;Timer/Timer.c: 20:     OPTION_REGbits.PS1=0;
  1531  0626  1081               	bcf	1,1	;volatile
  1532                           
  1533                           ;Timer/Timer.c: 21:     OPTION_REGbits.PS2=1;
  1534  0627  1501               	bsf	1,2	;volatile
  1535  0628                     l1998:
  1536                           
  1537                           ;Timer/Timer.c: 23:     TMR0=100;
  1538  0628  3064               	movlw	100
  1539  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1540  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1541  062B  0081               	movwf	1	;volatile
  1542  062C                     l2000:
  1543                           
  1544                           ;Timer/Timer.c: 24:     INTCONbits.GIE=1;
  1545  062C  178B               	bsf	11,7	;volatile
  1546  062D                     l2002:
  1547                           
  1548                           ;Timer/Timer.c: 25:     INTCONbits.PEIE=1;
  1549  062D  170B               	bsf	11,6	;volatile
  1550  062E                     l64:
  1551  062E  0008               	return
  1552  062F                     __end_of_Timer_Init:
  1553                           
  1554                           	psect	text3
  1555  0611                     __ptext3:	
  1556 ;; *************** function _Scheduler_Init *****************
  1557 ;; Defined at:
  1558 ;;		line 11 in file "Scheduler/Scheduler.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0
  1575 ;;      Totals:         0       0       0       0       0
  1576 ;;Total ram usage:        0 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    8
  1579 ;; This function calls:
  1580 ;;		_memset
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _Scheduler_Init
  1588  0611                     _Scheduler_Init:
  1589  0611                     l2202:	
  1590                           ;incstack = 0
  1591 ;; hardware stack exceeded
  1592                           ; Regs used in _Scheduler_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1593                           
  1594                           
  1595                           ;Scheduler/Scheduler.c: 13:     memset(Task_Flag,0,sizeof(Task_Flag));
  1596  0611  3000               	movlw	0
  1597  0612  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0613  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0614  00C7               	movwf	memset@c
  1600  0615  00C8               	movwf	memset@c+1
  1601  0616  3003               	movlw	3
  1602  0617  00C9               	movwf	memset@n
  1603  0618  3000               	movlw	0
  1604  0619  00CA               	movwf	memset@n+1
  1605  061A  3038               	movlw	(low (_Task_Flag| 0))& (0+255)
  1606  061B  120A  118A  258E  120A  118A  	fcall	_memset
  1607  0620                     l43:
  1608  0620  0008               	return
  1609  0621                     __end_of_Scheduler_Init:
  1610                           
  1611                           	psect	text4
  1612  065B                     __ptext4:	
  1613 ;; *************** function _ModeManager_Init *****************
  1614 ;; Defined at:
  1615 ;;		line 11 in file "ModeManger/ModeManager.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    7
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _ModeManager_Init
  1645  065B                     _ModeManager_Init:
  1646  065B                     l1986:	
  1647                           ;incstack = 0
  1648                           ; Regs used in _ModeManager_Init: [status,2]
  1649                           
  1650                           
  1651                           ;ModeManger/ModeManager.c: 13:   MODE=Normal_Mode;
  1652  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1653  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1654  065D  01B1               	clrf	_MODE
  1655  065E                     l219:
  1656  065E  0008               	return
  1657  065F                     __end_of_ModeManager_Init:
  1658                           
  1659                           	psect	text5
  1660  056B                     __ptext5:	
  1661 ;; *************** function _GPIO_Init *****************
  1662 ;; Defined at:
  1663 ;;		line 9 in file "gpio/gpio.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, btemp+1
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0
  1680 ;;      Totals:         0       0       0       0       0
  1681 ;;Total ram usage:        0 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    7
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _GPIO_Init
  1693  056B                     _GPIO_Init:
  1694  056B                     l1954:	
  1695                           ;incstack = 0
  1696                           ; Regs used in _GPIO_Init: [wreg+status,2+status,0+btemp+1]
  1697                           
  1698  056B                     l109:	
  1699                           ;gpio/gpio.c: 11:     (1==0)? ((TRISB&=~(1<<2))) :((TRISB|=(1<<2)));
  1700                           
  1701  056B  1683               	bsf	3,5	;RP0=1, select bank1
  1702  056C  1303               	bcf	3,6	;RP1=0, select bank1
  1703  056D  1506               	bsf	6,2	;volatile
  1704  056E                     l113:
  1705  056E  1486               	bsf	6,1	;volatile
  1706  056F                     l117:
  1707  056F  1406               	bsf	6,0	;volatile
  1708  0570                     l1962:
  1709  0570  30FB               	movlw	251
  1710  0571  00FF               	movwf	btemp+1
  1711  0572  087F               	movf	btemp+1,w
  1712  0573  0585               	andwf	5,f	;volatile
  1713  0574                     l1964:
  1714  0574  30F7               	movlw	247
  1715  0575  00FF               	movwf	btemp+1
  1716  0576  087F               	movf	btemp+1,w
  1717  0577  0585               	andwf	5,f	;volatile
  1718  0578                     l1966:
  1719  0578  30EF               	movlw	239
  1720  0579  00FF               	movwf	btemp+1
  1721  057A  087F               	movf	btemp+1,w
  1722  057B  0585               	andwf	5,f	;volatile
  1723  057C                     l1968:
  1724  057C  30DF               	movlw	223
  1725  057D  00FF               	movwf	btemp+1
  1726  057E  087F               	movf	btemp+1,w
  1727  057F  0585               	andwf	5,f	;volatile
  1728  0580                     l1970:
  1729  0580  307F               	movlw	127
  1730  0581  00FF               	movwf	btemp+1
  1731  0582  087F               	movf	btemp+1,w
  1732  0583  0588               	andwf	8,f	;volatile
  1733  0584                     l1972:
  1734  0584  0188               	clrf	8	;volatile
  1735  0585                     l1976:
  1736  0585  30EF               	movlw	239
  1737  0586  00FF               	movwf	btemp+1
  1738  0587  087F               	movf	btemp+1,w
  1739  0588  0586               	andwf	6,f	;volatile
  1740  0589                     l1978:
  1741  0589  30F7               	movlw	247
  1742  058A  00FF               	movwf	btemp+1
  1743  058B  087F               	movf	btemp+1,w
  1744  058C  0586               	andwf	6,f	;volatile
  1745  058D                     l152:
  1746  058D  0008               	return
  1747  058E                     __end_of_GPIO_Init:
  1748                           
  1749                           	psect	text6
  1750  05B0                     __ptext6:	
  1751 ;; *************** function _Display_Init *****************
  1752 ;; Defined at:
  1753 ;;		line 20 in file "Display/Display.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, btemp+1
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    7
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _Display_Init
  1783  05B0                     _Display_Init:
  1784  05B0                     l1980:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _Display_Init: [wreg+status,2+status,0+btemp+1]
  1787                           
  1788                           
  1789                           ;Display/Display.c: 22:     Enable_Minutes=1;
  1790  05B0  01FC               	clrf	_Enable_Minutes
  1791  05B1  0AFC               	incf	_Enable_Minutes,f
  1792                           
  1793                           ;Display/Display.c: 23:     Enable_Hours=1;
  1794  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1795  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1796  05B4  01AD               	clrf	_Enable_Hours
  1797  05B5  0AAD               	incf	_Enable_Hours,f
  1798  05B6                     l1982:
  1799                           
  1800                           ;Display/Display.c: 25:     (PORTA&=~(1<<2));
  1801  05B6  30FB               	movlw	251
  1802  05B7  00FF               	movwf	btemp+1
  1803  05B8  087F               	movf	btemp+1,w
  1804  05B9  0585               	andwf	5,f	;volatile
  1805                           
  1806                           ;Display/Display.c: 26:     (PORTA&=~(1<<3));
  1807  05BA  30F7               	movlw	247
  1808  05BB  00FF               	movwf	btemp+1
  1809  05BC  087F               	movf	btemp+1,w
  1810  05BD  0585               	andwf	5,f	;volatile
  1811                           
  1812                           ;Display/Display.c: 27:     (PORTA&=~(1<<4));
  1813  05BE  30EF               	movlw	239
  1814  05BF  00FF               	movwf	btemp+1
  1815  05C0  087F               	movf	btemp+1,w
  1816  05C1  0585               	andwf	5,f	;volatile
  1817                           
  1818                           ;Display/Display.c: 28:     (PORTA&=~(1<<5));
  1819  05C2  30DF               	movlw	223
  1820  05C3  00FF               	movwf	btemp+1
  1821  05C4  087F               	movf	btemp+1,w
  1822  05C5  0585               	andwf	5,f	;volatile
  1823                           
  1824                           ;Display/Display.c: 29:     (PORTD&=~(1<<7));
  1825  05C6  307F               	movlw	127
  1826  05C7  00FF               	movwf	btemp+1
  1827  05C8  087F               	movf	btemp+1,w
  1828  05C9  0588               	andwf	8,f	;volatile
  1829  05CA                     l177:
  1830  05CA  0008               	return
  1831  05CB                     __end_of_Display_Init:
  1832                           
  1833                           	psect	text7
  1834  0649                     __ptext7:	
  1835 ;; *************** function _Clock_Init *****************
  1836 ;; Defined at:
  1837 ;;		line 23 in file "Clock/Clock.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		status,2
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    7
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _Clock_Init
  1867  0649                     _Clock_Init:
  1868  0649                     l1984:	
  1869                           ;incstack = 0
  1870                           ; Regs used in _Clock_Init: [status,2]
  1871                           
  1872                           
  1873                           ;Clock/Clock.c: 25:     Clock.Second=0;
  1874  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1875  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1876  064B  01A4               	clrf	_Clock
  1877                           
  1878                           ;Clock/Clock.c: 26:     Clock.Minutes=0;
  1879  064C  01A5               	clrf	_Clock+1
  1880                           
  1881                           ;Clock/Clock.c: 27:     Clock.Hours=0;
  1882  064D  01A6               	clrf	_Clock+2
  1883  064E                     l301:
  1884  064E  0008               	return
  1885  064F                     __end_of_Clock_Init:
  1886                           
  1887                           	psect	text8
  1888  04D6                     __ptext8:	
  1889 ;; *************** function _Buttons_Init *****************
  1890 ;; Defined at:
  1891 ;;		line 16 in file "Buttons/Buttons.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    8
  1912 ;; This function calls:
  1913 ;;		_memset
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _Buttons_Init
  1921  04D6                     _Buttons_Init:
  1922  04D6                     l2194:	
  1923                           ;incstack = 0
  1924 ;; hardware stack exceeded
  1925                           ; Regs used in _Buttons_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1926                           
  1927                           
  1928                           ;Buttons/Buttons.c: 18:     memset(Debounce_UpButton,1,sizeof(Debounce_UpButton));
  1929  04D6  3001               	movlw	1
  1930  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1931  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1932  04D9  00C7               	movwf	memset@c
  1933  04DA  3000               	movlw	0
  1934  04DB  00C8               	movwf	memset@c+1
  1935  04DC  3003               	movlw	3
  1936  04DD  00C9               	movwf	memset@n
  1937  04DE  3000               	movlw	0
  1938  04DF  00CA               	movwf	memset@n+1
  1939  04E0  3035               	movlw	(low (_Debounce_UpButton| 0))& (0+255)
  1940  04E1  120A  118A  258E  120A  118A  	fcall	_memset
  1941                           
  1942                           ;Buttons/Buttons.c: 19:     memset(Debounce_DownButton,1,sizeof(Debounce_DownButton));
  1943  04E6  3001               	movlw	1
  1944  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1945  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1946  04E9  00C7               	movwf	memset@c
  1947  04EA  3000               	movlw	0
  1948  04EB  00C8               	movwf	memset@c+1
  1949  04EC  3003               	movlw	3
  1950  04ED  00C9               	movwf	memset@n
  1951  04EE  3000               	movlw	0
  1952  04EF  00CA               	movwf	memset@n+1
  1953  04F0  3032               	movlw	(low (_Debounce_DownButton| 0))& (0+255)
  1954  04F1  120A  118A  258E  120A  118A  	fcall	_memset
  1955  04F6                     l2196:
  1956                           
  1957                           ;Buttons/Buttons.c: 21:     INTEDG=1;
  1958  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  1959  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  1960  04F8  1701               	bsf	1,6	;volatile
  1961  04F9                     l2198:
  1962                           
  1963                           ;Buttons/Buttons.c: 22:     INTCONbits.INTE=1;
  1964  04F9  160B               	bsf	11,4	;volatile
  1965  04FA                     l2200:
  1966                           
  1967                           ;Buttons/Buttons.c: 23:     INTCONbits.INTF=0;
  1968  04FA  108B               	bcf	11,1	;volatile
  1969  04FB                     l89:
  1970  04FB  0008               	return
  1971  04FC                     __end_of_Buttons_Init:
  1972                           
  1973                           	psect	text9
  1974  058E                     __ptext9:	
  1975 ;; *************** function _memset *****************
  1976 ;; Defined at:
  1977 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\memset.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  p1              1    wreg     PTR void 
  1980 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1981 ;;  c               2   12[BANK0 ] int 
  1982 ;;  n               2   14[BANK0 ] unsigned int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  p1              1   17[BANK0 ] PTR void 
  1985 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1986 ;;  p               1   16[BANK0 ] PTR unsigned char 
  1987 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      PTR void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         0       4       0       0       0
  1998 ;;      Locals:         0       2       0       0       0
  1999 ;;      Temps:          0       0       0       0       0
  2000 ;;      Totals:         0       6       0       0       0
  2001 ;;Total ram usage:        6 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    7
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_Scheduler_Init
  2008 ;;		_Buttons_Init
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _memset
  2014  058E                     _memset:
  2015                           
  2016                           ;incstack = 0
  2017 ;; hardware stack exceeded
  2018                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  2019                           ;memset@p1 stored from wreg
  2020  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2021  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0590  00CC               	movwf	memset@p1
  2023  0591                     l2172:
  2024  0591  084C               	movf	memset@p1,w
  2025  0592  00FF               	movwf	btemp+1
  2026  0593  087F               	movf	btemp+1,w
  2027  0594  00CB               	movwf	memset@p
  2028  0595  2DA1               	goto	l2178
  2029  0596                     l2174:
  2030  0596  0847               	movf	memset@c,w
  2031  0597  00FF               	movwf	btemp+1
  2032  0598  084B               	movf	memset@p,w
  2033  0599  0084               	movwf	4
  2034  059A  087F               	movf	btemp+1,w
  2035  059B  1383               	bcf	3,7	;select IRP bank0
  2036  059C  0080               	movwf	0
  2037  059D                     l2176:
  2038  059D  3001               	movlw	1
  2039  059E  00FF               	movwf	btemp+1
  2040  059F  087F               	movf	btemp+1,w
  2041  05A0  07CB               	addwf	memset@p,f
  2042  05A1                     l2178:
  2043  05A1  3001               	movlw	1
  2044  05A2  02C9               	subwf	memset@n,f
  2045  05A3  3000               	movlw	0
  2046  05A4  1C03               	skipc
  2047  05A5  03CA               	decf	memset@n+1,f
  2048  05A6  02CA               	subwf	memset@n+1,f
  2049  05A7  0A49               	incf	memset@n,w
  2050  05A8  1D03               	skipz
  2051  05A9  2DAE               	goto	u1321
  2052  05AA  0A4A               	incf	memset@n+1,w
  2053  05AB  1D03               	btfss	3,2
  2054  05AC  2DAE               	goto	u1321
  2055  05AD  2DAF               	goto	u1320
  2056  05AE                     u1321:
  2057  05AE  2D96               	goto	l2174
  2058  05AF                     u1320:
  2059  05AF                     l928:
  2060  05AF  0008               	return
  2061  05B0                     __end_of_memset:
  2062                           
  2063                           	psect	text10
  2064  0449                     __ptext10:	
  2065 ;; *************** function _ISR *****************
  2066 ;; Defined at:
  2067 ;;		line 10 in file "Interrupt/Interrupt.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0
  2083 ;;      Temps:          0       4       0       0       0
  2084 ;;      Totals:         0       4       0       0       0
  2085 ;;Total ram usage:        4 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    6
  2088 ;; This function calls:
  2089 ;;		_EXTI_SettingButton_CB
  2090 ;;		_Timer0_CB
  2091 ;; This function is called by:
  2092 ;;		Interrupt level 1
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _ISR
  2098  0449                     _ISR:
  2099  0449                     i1l2756:
  2100                           
  2101                           ;Interrupt/Interrupt.c: 12:     if(INTCONbits.TMR0IF)
  2102  0449  1D0B               	btfss	11,2	;volatile
  2103  044A  2C4C               	goto	u203_21
  2104  044B  2C4D               	goto	u203_20
  2105  044C                     u203_21:
  2106  044C  2C5C               	goto	i1l2764
  2107  044D                     u203_20:
  2108  044D                     i1l2758:
  2109                           
  2110                           ;Interrupt/Interrupt.c: 13:     {;Interrupt/Interrupt.c: 15:       TMR0 = 101;
  2111  044D  3065               	movlw	101
  2112  044E  0081               	movwf	1	;volatile
  2113  044F                     i1l2760:
  2114                           
  2115                           ;Interrupt/Interrupt.c: 16:       TMR0IF=0;
  2116  044F  110B               	bcf	11,2	;volatile
  2117  0450                     i1l2762:
  2118                           
  2119                           ;Interrupt/Interrupt.c: 17:       Interrupt_CbStruct.Timer_CB();
  2120  0450  300A               	movlw	low (_Interrupt_CbStruct-__stringbase)
  2121  0451  0084               	movwf	4
  2122  0452  120A  118A  2600  120A  118A  	fcall	stringdir
  2123  0457  120A  118A  2025  120A  118A  	fcall	i1fptable
  2124  045C                     i1l2764:
  2125                           
  2126                           ;Interrupt/Interrupt.c: 20:     if(INTCONbits.INTF)
  2127  045C  1C8B               	btfss	11,1	;volatile
  2128  045D  2C5F               	goto	u204_21
  2129  045E  2C60               	goto	u204_20
  2130  045F                     u204_21:
  2131  045F  2C6D               	goto	i1l245
  2132  0460                     u204_20:
  2133  0460                     i1l2766:
  2134                           
  2135                           ;Interrupt/Interrupt.c: 21:     {;Interrupt/Interrupt.c: 22:       INTCONbits.INTF=0;
  2136  0460  108B               	bcf	11,1	;volatile
  2137  0461                     i1l2768:
  2138                           
  2139                           ;Interrupt/Interrupt.c: 23:       Interrupt_CbStruct.EXTI_CB();
  2140  0461  300B               	movlw	low (((_Interrupt_CbStruct+1)-__stringbase)| (0+32768))
  2141  0462  0084               	movwf	4
  2142  0463  120A  118A  2600  120A  118A  	fcall	stringdir
  2143  0468  120A  118A  2025  120A  118A  	fcall	i1fptable
  2144  046D                     i1l245:
  2145  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2146  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2147  046F  0846               	movf	??_ISR+3,w
  2148  0470  00FF               	movwf	btemp+1
  2149  0471  0845               	movf	??_ISR+2,w
  2150  0472  008A               	movwf	10
  2151  0473  0844               	movf	??_ISR+1,w
  2152  0474  0084               	movwf	4
  2153  0475  0E43               	swapf	??_ISR^0,w
  2154  0476  0083               	movwf	3
  2155  0477  0EFE               	swapf	btemp,f
  2156  0478  0E7E               	swapf	btemp,w
  2157  0479  0009               	retfie
  2158  047A                     __end_of_ISR:
  2159                           
  2160                           	psect	intentry
  2161  0004                     __pintentry:	
  2162                           ;incstack = 0
  2163 ;; hardware stack exceeded
  2164                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2165                           
  2166  0004                     interrupt_function:
  2167  007E                     saved_w	set	btemp
  2168  0004  00FE               	movwf	btemp
  2169  0005  0E03               	swapf	3,w
  2170  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0008  00C3               	movwf	??_ISR
  2173  0009  0804               	movf	4,w
  2174  000A  00C4               	movwf	??_ISR+1
  2175  000B  080A               	movf	10,w
  2176  000C  00C5               	movwf	??_ISR+2
  2177  000D  087F               	movf	btemp+1,w
  2178  000E  00C6               	movwf	??_ISR+3
  2179  000F  120A  118A  2C49   	ljmp	_ISR
  2180                           
  2181                           	psect	text11
  2182  05CB                     __ptext11:	
  2183 ;; *************** function _Timer0_CB *****************
  2184 ;; Defined at:
  2185 ;;		line 38 in file "Timer/Timer.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    5
  2206 ;; This function calls:
  2207 ;;		_Scheduler_Update
  2208 ;; This function is called by:
  2209 ;;		_ISR
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _Timer0_CB
  2215  05CB                     _Timer0_CB:
  2216  05CB                     i1l2752:	
  2217                           ;incstack = 0
  2218 ;; hardware stack exceeded
  2219                           ; Regs used in _Timer0_CB: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2220                           
  2221                           
  2222                           ;Timer/Timer.c: 40:    Tick++;
  2223  05CB  3001               	movlw	1
  2224  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2225  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2226  05CE  07A0               	addwf	_Tick,f
  2227  05CF  3000               	movlw	0
  2228  05D0  1803               	skipnc
  2229  05D1  3001               	movlw	1
  2230  05D2  07A1               	addwf	_Tick+1,f
  2231  05D3  3000               	movlw	0
  2232  05D4  1803               	skipnc
  2233  05D5  3001               	movlw	1
  2234  05D6  07A2               	addwf	_Tick+2,f
  2235  05D7  3000               	movlw	0
  2236  05D8  1803               	skipnc
  2237  05D9  3001               	movlw	1
  2238  05DA  07A3               	addwf	_Tick+3,f
  2239  05DB                     i1l2754:
  2240                           
  2241                           ;Timer/Timer.c: 42:    Scheduler_Update();
  2242  05DB  120A  118A  21A7  120A  118A  	fcall	_Scheduler_Update
  2243  05E0                     i1l70:
  2244  05E0  0008               	return
  2245  05E1                     __end_of_Timer0_CB:
  2246                           
  2247                           	psect	text12
  2248  01A7                     __ptext12:	
  2249 ;; *************** function _Scheduler_Update *****************
  2250 ;; Defined at:
  2251 ;;		line 16 in file "Scheduler/Scheduler.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  i               1    7[BANK0 ] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         0       1       0       0       0
  2267 ;;      Temps:          0       6       0       0       0
  2268 ;;      Totals:         0       7       0       0       0
  2269 ;;Total ram usage:        7 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    4
  2272 ;; This function calls:
  2273 ;;		_Scheduler_Task1
  2274 ;;		_Scheduler_Task2
  2275 ;;		_Scheduler_Task3
  2276 ;;		___bmul
  2277 ;;		___llmod
  2278 ;; This function is called by:
  2279 ;;		_Timer0_CB
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _Scheduler_Update
  2285  01A7                     _Scheduler_Update:
  2286  01A7                     i1l2738:	
  2287                           ;incstack = 0
  2288 ;; hardware stack exceeded
  2289                           ; Regs used in _Scheduler_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2290                           
  2291                           
  2292                           ;Scheduler/Scheduler.c: 19:        for(uint8_t i=0 ;i<(3UL);i++)
  2293  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2294  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2295  01A9  01C2               	clrf	Scheduler_Update@i
  2296  01AA                     i1l2744:
  2297                           
  2298                           ;Scheduler/Scheduler.c: 20:        {;Scheduler/Scheduler.c: 22:            if((Tick%(Tas
      +                          ks[i].Task_Peroid/(1UL))) ? 0:1)
  2299  01AA  3003               	movlw	3
  2300  01AB  00FF               	movwf	btemp+1
  2301  01AC  087F               	movf	btemp+1,w
  2302  01AD  00F0               	movwf	___bmul@multiplicand
  2303  01AE  0842               	movf	Scheduler_Update@i,w
  2304  01AF  120A  118A  25E1  120A  118A  	fcall	___bmul
  2305  01B4  3E01               	addlw	low ((_Tasks-__stringbase)| (0+32768))
  2306  01B5  0084               	movwf	4
  2307  01B6  120A  118A  2600  120A  118A  	fcall	stringdir
  2308  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2309  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2310  01BD  00BC               	movwf	??_Scheduler_Update
  2311  01BE  120A  118A  2600  120A  118A  	fcall	stringdir
  2312  01C3  00BD               	movwf	??_Scheduler_Update+1
  2313  01C4  083C               	movf	??_Scheduler_Update,w
  2314  01C5  00BE               	movwf	??_Scheduler_Update+2
  2315  01C6  083D               	movf	??_Scheduler_Update+1,w
  2316  01C7  00BF               	movwf	??_Scheduler_Update+3
  2317  01C8  01C0               	clrf	??_Scheduler_Update+4
  2318  01C9  01C1               	clrf	??_Scheduler_Update+5
  2319  01CA  0841               	movf	??_Scheduler_Update+5,w
  2320  01CB  00F6               	movwf	___llmod@divisor+3
  2321  01CC  0840               	movf	??_Scheduler_Update+4,w
  2322  01CD  00F5               	movwf	___llmod@divisor+2
  2323  01CE  083F               	movf	??_Scheduler_Update+3,w
  2324  01CF  00F4               	movwf	___llmod@divisor+1
  2325  01D0  083E               	movf	??_Scheduler_Update+2,w
  2326  01D1  00F3               	movwf	___llmod@divisor
  2327  01D2  0823               	movf	_Tick+3,w
  2328  01D3  00FA               	movwf	___llmod@dividend+3
  2329  01D4  0822               	movf	_Tick+2,w
  2330  01D5  00F9               	movwf	___llmod@dividend+2
  2331  01D6  0821               	movf	_Tick+1,w
  2332  01D7  00F8               	movwf	___llmod@dividend+1
  2333  01D8  0820               	movf	_Tick,w
  2334  01D9  00F7               	movwf	___llmod@dividend
  2335  01DA  120A  118A  2325  120A  118A  	fcall	___llmod
  2336  01DF  0876               	movf	?___llmod+3,w
  2337  01E0  0475               	iorwf	?___llmod+2,w
  2338  01E1  0474               	iorwf	?___llmod+1,w
  2339  01E2  0473               	iorwf	?___llmod,w
  2340  01E3  1D03               	skipz
  2341  01E4  29E6               	goto	u201_21
  2342  01E5  29E7               	goto	u201_20
  2343  01E6                     u201_21:
  2344  01E6  29FF               	goto	i1l2748
  2345  01E7                     u201_20:
  2346  01E7                     i1l2746:
  2347                           
  2348                           ;Scheduler/Scheduler.c: 23:             {;Scheduler/Scheduler.c: 24:               Tasks
      +                          [i].Task();
  2349  01E7  3003               	movlw	3
  2350  01E8  00FF               	movwf	btemp+1
  2351  01E9  087F               	movf	btemp+1,w
  2352  01EA  00F0               	movwf	___bmul@multiplicand
  2353  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2354  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2355  01ED  0842               	movf	Scheduler_Update@i,w
  2356  01EE  120A  118A  25E1  120A  118A  	fcall	___bmul
  2357  01F3  3E03               	addlw	low (((_Tasks-__stringbase)| (0+32768)+2))
  2358  01F4  0084               	movwf	4
  2359  01F5  120A  118A  2600  120A  118A  	fcall	stringdir
  2360  01FA  120A  118A  2025  120A  118A  	fcall	i1fptable
  2361  01FF                     i1l2748:
  2362                           
  2363                           ;Scheduler/Scheduler.c: 27:        }
  2364  01FF  3001               	movlw	1
  2365  0200  00FF               	movwf	btemp+1
  2366  0201  087F               	movf	btemp+1,w
  2367  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0204  07C2               	addwf	Scheduler_Update@i,f
  2370  0205                     i1l2750:
  2371  0205  3003               	movlw	3
  2372  0206  0242               	subwf	Scheduler_Update@i,w
  2373  0207  1C03               	skipc
  2374  0208  2A0A               	goto	u202_21
  2375  0209  2A0B               	goto	u202_20
  2376  020A                     u202_21:
  2377  020A  29AA               	goto	i1l2744
  2378  020B                     u202_20:
  2379  020B                     i1l49:
  2380  020B  0008               	return
  2381  020C                     __end_of_Scheduler_Update:
  2382                           
  2383                           	psect	text13
  2384  0325                     __ptext13:	
  2385 ;; *************** function ___llmod *****************
  2386 ;; Defined at:
  2387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  divisor         4    3[COMMON] unsigned long 
  2390 ;;  dividend        4    7[COMMON] unsigned long 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  counter         1    0[BANK0 ] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  4    3[COMMON] unsigned long 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, btemp+1
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         8       0       0       0       0
  2403 ;;      Locals:         0       1       0       0       0
  2404 ;;      Temps:          1       0       0       0       0
  2405 ;;      Totals:         9       1       0       0       0
  2406 ;;Total ram usage:       10 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_Scheduler_Update
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function ___llmod
  2417  0325                     ___llmod:
  2418  0325                     i1l2716:	
  2419                           ;incstack = 0
  2420                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  2421                           
  2422  0325  0876               	movf	___llmod@divisor+3,w
  2423  0326  0475               	iorwf	___llmod@divisor+2,w
  2424  0327  0474               	iorwf	___llmod@divisor+1,w
  2425  0328  0473               	iorwf	___llmod@divisor,w
  2426  0329  1903               	skipnz
  2427  032A  2B2C               	goto	u195_21
  2428  032B  2B2D               	goto	u195_20
  2429  032C                     u195_21:
  2430  032C  2B72               	goto	i1l2734
  2431  032D                     u195_20:
  2432  032D                     i1l2718:
  2433  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2434  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2435  032F  01BB               	clrf	___llmod@counter
  2436  0330  0ABB               	incf	___llmod@counter,f
  2437  0331  2B3F               	goto	i1l2724
  2438  0332                     i1l2720:
  2439  0332  3001               	movlw	1
  2440  0333  00FB               	movwf	??___llmod
  2441  0334                     u196_25:
  2442  0334  1003               	clrc
  2443  0335  0DF3               	rlf	___llmod@divisor,f
  2444  0336  0DF4               	rlf	___llmod@divisor+1,f
  2445  0337  0DF5               	rlf	___llmod@divisor+2,f
  2446  0338  0DF6               	rlf	___llmod@divisor+3,f
  2447  0339  0BFB               	decfsz	??___llmod,f
  2448  033A  2B34               	goto	u196_25
  2449  033B                     i1l2722:
  2450  033B  3001               	movlw	1
  2451  033C  00FF               	movwf	btemp+1
  2452  033D  087F               	movf	btemp+1,w
  2453  033E  07BB               	addwf	___llmod@counter,f
  2454  033F                     i1l2724:
  2455  033F  1FF6               	btfss	___llmod@divisor+3,7
  2456  0340  2B42               	goto	u197_21
  2457  0341  2B43               	goto	u197_20
  2458  0342                     u197_21:
  2459  0342  2B32               	goto	i1l2720
  2460  0343                     u197_20:
  2461  0343                     i1l2726:
  2462  0343  0876               	movf	___llmod@divisor+3,w
  2463  0344  027A               	subwf	___llmod@dividend+3,w
  2464  0345  1D03               	skipz
  2465  0346  2B51               	goto	u198_25
  2466  0347  0875               	movf	___llmod@divisor+2,w
  2467  0348  0279               	subwf	___llmod@dividend+2,w
  2468  0349  1D03               	skipz
  2469  034A  2B51               	goto	u198_25
  2470  034B  0874               	movf	___llmod@divisor+1,w
  2471  034C  0278               	subwf	___llmod@dividend+1,w
  2472  034D  1D03               	skipz
  2473  034E  2B51               	goto	u198_25
  2474  034F  0873               	movf	___llmod@divisor,w
  2475  0350  0277               	subwf	___llmod@dividend,w
  2476  0351                     u198_25:
  2477  0351  1C03               	skipc
  2478  0352  2B54               	goto	u198_21
  2479  0353  2B55               	goto	u198_20
  2480  0354                     u198_21:
  2481  0354  2B63               	goto	i1l2730
  2482  0355                     u198_20:
  2483  0355                     i1l2728:
  2484  0355  0873               	movf	___llmod@divisor,w
  2485  0356  02F7               	subwf	___llmod@dividend,f
  2486  0357  0874               	movf	___llmod@divisor+1,w
  2487  0358  1C03               	skipc
  2488  0359  0F74               	incfsz	___llmod@divisor+1,w
  2489  035A  02F8               	subwf	___llmod@dividend+1,f
  2490  035B  0875               	movf	___llmod@divisor+2,w
  2491  035C  1C03               	skipc
  2492  035D  0F75               	incfsz	___llmod@divisor+2,w
  2493  035E  02F9               	subwf	___llmod@dividend+2,f
  2494  035F  0876               	movf	___llmod@divisor+3,w
  2495  0360  1C03               	skipc
  2496  0361  0F76               	incfsz	___llmod@divisor+3,w
  2497  0362  02FA               	subwf	___llmod@dividend+3,f
  2498  0363                     i1l2730:
  2499  0363  3001               	movlw	1
  2500  0364                     u199_25:
  2501  0364  1003               	clrc
  2502  0365  0CF6               	rrf	___llmod@divisor+3,f
  2503  0366  0CF5               	rrf	___llmod@divisor+2,f
  2504  0367  0CF4               	rrf	___llmod@divisor+1,f
  2505  0368  0CF3               	rrf	___llmod@divisor,f
  2506  0369  3EFF               	addlw	-1
  2507  036A  1D03               	skipz
  2508  036B  2B64               	goto	u199_25
  2509  036C                     i1l2732:
  2510  036C  3001               	movlw	1
  2511  036D  02BB               	subwf	___llmod@counter,f
  2512  036E  1D03               	btfss	3,2
  2513  036F  2B71               	goto	u200_21
  2514  0370  2B72               	goto	u200_20
  2515  0371                     u200_21:
  2516  0371  2B43               	goto	i1l2726
  2517  0372                     u200_20:
  2518  0372                     i1l2734:
  2519  0372  087A               	movf	___llmod@dividend+3,w
  2520  0373  00F6               	movwf	?___llmod+3
  2521  0374  0879               	movf	___llmod@dividend+2,w
  2522  0375  00F5               	movwf	?___llmod+2
  2523  0376  0878               	movf	___llmod@dividend+1,w
  2524  0377  00F4               	movwf	?___llmod+1
  2525  0378  0877               	movf	___llmod@dividend,w
  2526  0379  00F3               	movwf	?___llmod
  2527  037A                     i1l696:
  2528  037A  0008               	return
  2529  037B                     __end_of___llmod:
  2530                           
  2531                           	psect	text14
  2532  05E1                     __ptext14:	
  2533 ;; *************** function ___bmul *****************
  2534 ;; Defined at:
  2535 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  multiplier      1    wreg     unsigned char 
  2538 ;;  multiplicand    1    0[COMMON] unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  multiplier      1    2[COMMON] unsigned char 
  2541 ;;  product         1    1[COMMON] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      unsigned char 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, btemp+1
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         1       0       0       0       0
  2552 ;;      Locals:         2       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         3       0       0       0       0
  2555 ;;Total ram usage:        3 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_Scheduler_Update
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function ___bmul
  2566  05E1                     ___bmul:
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2570                           ;___bmul@multiplier stored from wreg
  2571  05E1  00F2               	movwf	___bmul@multiplier
  2572  05E2                     i1l2700:
  2573  05E2  01F1               	clrf	___bmul@product
  2574  05E3                     i1l2702:
  2575  05E3  1C72               	btfss	___bmul@multiplier,0
  2576  05E4  2DE6               	goto	u193_21
  2577  05E5  2DE7               	goto	u193_20
  2578  05E6                     u193_21:
  2579  05E6  2DEB               	goto	i1l2706
  2580  05E7                     u193_20:
  2581  05E7                     i1l2704:
  2582  05E7  0870               	movf	___bmul@multiplicand,w
  2583  05E8  00FF               	movwf	btemp+1
  2584  05E9  087F               	movf	btemp+1,w
  2585  05EA  07F1               	addwf	___bmul@product,f
  2586  05EB                     i1l2706:
  2587  05EB  1003               	clrc
  2588  05EC  0DF0               	rlf	___bmul@multiplicand,f
  2589  05ED                     i1l2708:
  2590  05ED  1003               	clrc
  2591  05EE  0CF2               	rrf	___bmul@multiplier,f
  2592  05EF                     i1l2710:
  2593  05EF  0872               	movf	___bmul@multiplier,w
  2594  05F0  1D03               	btfss	3,2
  2595  05F1  2DF3               	goto	u194_21
  2596  05F2  2DF4               	goto	u194_20
  2597  05F3                     u194_21:
  2598  05F3  2DE3               	goto	i1l2702
  2599  05F4                     u194_20:
  2600  05F4                     i1l2712:
  2601  05F4  0871               	movf	___bmul@product,w
  2602  05F5                     i1l500:
  2603  05F5  0008               	return
  2604  05F6                     __end_of___bmul:
  2605                           
  2606                           	psect	text15
  2607  062F                     __ptext15:	
  2608 ;; *************** function _Scheduler_Task2 *****************
  2609 ;; Defined at:
  2610 ;;		line 22 in file "Scheduler/Task.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0
  2627 ;;      Totals:         0       0       0       0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    2
  2631 ;; This function calls:
  2632 ;;		_Buttons_Update
  2633 ;;		_ModeManager_Update
  2634 ;; This function is called by:
  2635 ;;		_Scheduler_Update
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function _Scheduler_Task2
  2641  062F                     _Scheduler_Task2:
  2642  062F                     i1l2696:	
  2643                           ;incstack = 0
  2644                           ; Regs used in _Scheduler_Task2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2645                           
  2646                           
  2647                           ;Scheduler/Task.c: 24:   Buttons_Update();
  2648  062F  120A  118A  237B  120A  118A  	fcall	_Buttons_Update
  2649                           
  2650                           ;Scheduler/Task.c: 25:   ModeManager_Update();
  2651  0634  120A  118A  24FC  120A  118A  	fcall	_ModeManager_Update
  2652  0639                     i1l275:
  2653  0639  0008               	return
  2654  063A                     __end_of_Scheduler_Task2:
  2655                           
  2656                           	psect	text16
  2657  064F                     __ptext16:	
  2658 ;; *************** function _Scheduler_Task1 *****************
  2659 ;; Defined at:
  2660 ;;		line 17 in file "Scheduler/Task.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    3
  2681 ;; This function calls:
  2682 ;;		_Display_Update
  2683 ;; This function is called by:
  2684 ;;		_Scheduler_Update
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           
  2689                           ;psect for function _Scheduler_Task1
  2690  064F                     _Scheduler_Task1:
  2691  064F                     i1l2694:	
  2692                           ;incstack = 0
  2693 ;; hardware stack exceeded
  2694                           ; Regs used in _Scheduler_Task1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2695                           
  2696                           
  2697                           ;Scheduler/Task.c: 19:   Display_Update();
  2698  064F  120A  118A  23D1  120A  118A  	fcall	_Display_Update
  2699  0654                     i1l272:
  2700  0654  0008               	return
  2701  0655                     __end_of_Scheduler_Task1:
  2702                           
  2703                           	psect	text17
  2704  0655                     __ptext17:	
  2705 ;; *************** function _Scheduler_Task3 *****************
  2706 ;; Defined at:
  2707 ;;		line 28 in file "Scheduler/Task.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    2
  2728 ;; This function calls:
  2729 ;;		_Clock_Update
  2730 ;; This function is called by:
  2731 ;;		_Scheduler_Update
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _Scheduler_Task3
  2737  0655                     _Scheduler_Task3:
  2738  0655                     i1l2698:	
  2739                           ;incstack = 0
  2740                           ; Regs used in _Scheduler_Task3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2741                           
  2742                           
  2743                           ;Scheduler/Task.c: 30:   Clock_Update();
  2744  0655  120A  118A  20C1  120A  118A  	fcall	_Clock_Update
  2745  065A                     i1l278:
  2746  065A  0008               	return
  2747  065B                     __end_of_Scheduler_Task3:
  2748                           
  2749                           	psect	text18
  2750  00C1                     __ptext18:	
  2751 ;; *************** function _Clock_Update *****************
  2752 ;; Defined at:
  2753 ;;		line 31 in file "Clock/Clock.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;		None
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0
  2769 ;;      Temps:          2       0       0       0       0
  2770 ;;      Totals:         2       0       0       0       0
  2771 ;;Total ram usage:        2 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    1
  2774 ;; This function calls:
  2775 ;;		_Clock_Hour_Setting
  2776 ;;		_Clock_Minutes_Setting
  2777 ;;		_Clock_Normal
  2778 ;;		___awdiv
  2779 ;;		___awmod
  2780 ;; This function is called by:
  2781 ;;		_Scheduler_Task3
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function _Clock_Update
  2787  00C1                     _Clock_Update:
  2788  00C1                     i1l2678:	
  2789                           ;incstack = 0
  2790                           ; Regs used in _Clock_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2791                           
  2792                           
  2793                           ;Clock/Clock.c: 34:     Clock_Normal();
  2794  00C1  120A  118A  2547  120A  118A  	fcall	_Clock_Normal
  2795                           
  2796                           ;Clock/Clock.c: 35:     switch(MODE)
  2797  00C6  28D3               	goto	i1l2686
  2798  00C7                     i1l2680:
  2799                           
  2800                           ;Clock/Clock.c: 38:                               Clock_Hour_Setting();
  2801  00C7  120A  118A  247A  120A  118A  	fcall	_Clock_Hour_Setting
  2802                           
  2803                           ;Clock/Clock.c: 39:                               break;
  2804  00CC  28E5               	goto	i1l2688
  2805  00CD                     i1l2682:
  2806                           
  2807                           ;Clock/Clock.c: 42:                               Clock_Minutes_Setting();
  2808  00CD  120A  118A  2413  120A  118A  	fcall	_Clock_Minutes_Setting
  2809                           
  2810                           ;Clock/Clock.c: 43:                               break;
  2811  00D2  28E5               	goto	i1l2688
  2812  00D3                     i1l2686:
  2813  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  2814  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  2815  00D5  0831               	movf	_MODE,w
  2816  00D6  00F8               	movwf	??_Clock_Update
  2817  00D7  01F9               	clrf	??_Clock_Update+1
  2818                           
  2819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2820                           ; Switch size 1, requested type "simple"
  2821                           ; Number of cases is 1, Range of values is 0 to 0
  2822                           ; switch strategies available:
  2823                           ; Name         Instructions Cycles
  2824                           ; simple_byte            4     3 (average)
  2825                           ; direct_byte           11     8 (fixed)
  2826                           ; jumptable            260     6 (fixed)
  2827                           ;	Chosen strategy is simple_byte
  2828  00D8  0879               	movf	??_Clock_Update+1,w
  2829  00D9  3A00               	xorlw	0	; case 0
  2830  00DA  1903               	skipnz
  2831  00DB  28DD               	goto	i1l2880
  2832  00DC  28E5               	goto	i1l2688
  2833  00DD                     i1l2880:
  2834                           
  2835                           ; Switch size 1, requested type "simple"
  2836                           ; Number of cases is 2, Range of values is 1 to 2
  2837                           ; switch strategies available:
  2838                           ; Name         Instructions Cycles
  2839                           ; simple_byte            7     4 (average)
  2840                           ; direct_byte           17    11 (fixed)
  2841                           ; jumptable            263     9 (fixed)
  2842                           ;	Chosen strategy is simple_byte
  2843  00DD  0878               	movf	??_Clock_Update,w
  2844  00DE  3A01               	xorlw	1	; case 1
  2845  00DF  1903               	skipnz
  2846  00E0  28C7               	goto	i1l2680
  2847  00E1  3A03               	xorlw	3	; case 2
  2848  00E2  1903               	skipnz
  2849  00E3  28CD               	goto	i1l2682
  2850  00E4  28E5               	goto	i1l2688
  2851  00E5                     i1l2688:
  2852                           
  2853                           ;Clock/Clock.c: 45:     Digit1=Clock.Hours/10; Digit2=Clock.Hours%10; Digit3=Clock.Minut
      +                          es/10; Digit4=Clock.Minutes%10;
  2854  00E5  300A               	movlw	10
  2855  00E6  00F0               	movwf	___awdiv@divisor
  2856  00E7  3000               	movlw	0
  2857  00E8  00F1               	movwf	___awdiv@divisor+1
  2858  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  2859  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  2860  00EB  0826               	movf	_Clock+2,w
  2861  00EC  00F8               	movwf	??_Clock_Update
  2862  00ED  01F9               	clrf	??_Clock_Update+1
  2863  00EE  0878               	movf	??_Clock_Update,w
  2864  00EF  00F2               	movwf	___awdiv@dividend
  2865  00F0  0879               	movf	??_Clock_Update+1,w
  2866  00F1  00F3               	movwf	___awdiv@dividend+1
  2867  00F2  120A  118A  2140  120A  118A  	fcall	___awdiv
  2868  00F7  0870               	movf	?___awdiv,w
  2869  00F8  00FF               	movwf	btemp+1
  2870  00F9  087F               	movf	btemp+1,w
  2871  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2872  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2873  00FC  00AC               	movwf	_Digit1
  2874  00FD  300A               	movlw	10
  2875  00FE  00F0               	movwf	___awmod@divisor
  2876  00FF  3000               	movlw	0
  2877  0100  00F1               	movwf	___awmod@divisor+1
  2878  0101  0826               	movf	_Clock+2,w
  2879  0102  00F8               	movwf	??_Clock_Update
  2880  0103  01F9               	clrf	??_Clock_Update+1
  2881  0104  0878               	movf	??_Clock_Update,w
  2882  0105  00F2               	movwf	___awmod@dividend
  2883  0106  0879               	movf	??_Clock_Update+1,w
  2884  0107  00F3               	movwf	___awmod@dividend+1
  2885  0108  120A  118A  22CC  120A  118A  	fcall	___awmod
  2886  010D  0870               	movf	?___awmod,w
  2887  010E  00FF               	movwf	btemp+1
  2888  010F  087F               	movf	btemp+1,w
  2889  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0112  00AB               	movwf	_Digit2
  2892  0113  300A               	movlw	10
  2893  0114  00F0               	movwf	___awdiv@divisor
  2894  0115  3000               	movlw	0
  2895  0116  00F1               	movwf	___awdiv@divisor+1
  2896  0117  0825               	movf	_Clock+1,w
  2897  0118  00F8               	movwf	??_Clock_Update
  2898  0119  01F9               	clrf	??_Clock_Update+1
  2899  011A  0878               	movf	??_Clock_Update,w
  2900  011B  00F2               	movwf	___awdiv@dividend
  2901  011C  0879               	movf	??_Clock_Update+1,w
  2902  011D  00F3               	movwf	___awdiv@dividend+1
  2903  011E  120A  118A  2140  120A  118A  	fcall	___awdiv
  2904  0123  0870               	movf	?___awdiv,w
  2905  0124  00FF               	movwf	btemp+1
  2906  0125  087F               	movf	btemp+1,w
  2907  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0127  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0128  00AA               	movwf	_Digit3
  2910  0129  300A               	movlw	10
  2911  012A  00F0               	movwf	___awmod@divisor
  2912  012B  3000               	movlw	0
  2913  012C  00F1               	movwf	___awmod@divisor+1
  2914  012D  0825               	movf	_Clock+1,w
  2915  012E  00F8               	movwf	??_Clock_Update
  2916  012F  01F9               	clrf	??_Clock_Update+1
  2917  0130  0878               	movf	??_Clock_Update,w
  2918  0131  00F2               	movwf	___awmod@dividend
  2919  0132  0879               	movf	??_Clock_Update+1,w
  2920  0133  00F3               	movwf	___awmod@dividend+1
  2921  0134  120A  118A  22CC  120A  118A  	fcall	___awmod
  2922  0139  0870               	movf	?___awmod,w
  2923  013A  00FF               	movwf	btemp+1
  2924  013B  087F               	movf	btemp+1,w
  2925  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2926  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2927  013E  00A9               	movwf	_Digit4
  2928  013F                     i1l308:
  2929  013F  0008               	return
  2930  0140                     __end_of_Clock_Update:
  2931                           
  2932                           	psect	text19
  2933  0140                     __ptext19:	
  2934 ;; *************** function ___awdiv *****************
  2935 ;; Defined at:
  2936 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  divisor         2    0[COMMON] int 
  2939 ;;  dividend        2    2[COMMON] int 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  quotient        2    6[COMMON] int 
  2942 ;;  sign            1    5[COMMON] unsigned char 
  2943 ;;  counter         1    4[COMMON] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2    0[COMMON] int 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, btemp+1
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         4       0       0       0       0
  2954 ;;      Locals:         4       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         8       0       0       0       0
  2957 ;;Total ram usage:        8 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_Clock_Update
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function ___awdiv
  2968  0140                     ___awdiv:
  2969  0140                     i1l2538:	
  2970                           ;incstack = 0
  2971                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2972                           
  2973  0140  01F5               	clrf	___awdiv@sign
  2974  0141                     i1l2540:
  2975  0141  1FF1               	btfss	___awdiv@divisor+1,7
  2976  0142  2944               	goto	u167_21
  2977  0143  2945               	goto	u167_20
  2978  0144                     u167_21:
  2979  0144  294C               	goto	i1l2546
  2980  0145                     u167_20:
  2981  0145                     i1l2542:
  2982  0145  09F0               	comf	___awdiv@divisor,f
  2983  0146  09F1               	comf	___awdiv@divisor+1,f
  2984  0147  0AF0               	incf	___awdiv@divisor,f
  2985  0148  1903               	skipnz
  2986  0149  0AF1               	incf	___awdiv@divisor+1,f
  2987  014A                     i1l2544:
  2988  014A  01F5               	clrf	___awdiv@sign
  2989  014B  0AF5               	incf	___awdiv@sign,f
  2990  014C                     i1l2546:
  2991  014C  1FF3               	btfss	___awdiv@dividend+1,7
  2992  014D  294F               	goto	u168_21
  2993  014E  2950               	goto	u168_20
  2994  014F                     u168_21:
  2995  014F  2959               	goto	i1l2552
  2996  0150                     u168_20:
  2997  0150                     i1l2548:
  2998  0150  09F2               	comf	___awdiv@dividend,f
  2999  0151  09F3               	comf	___awdiv@dividend+1,f
  3000  0152  0AF2               	incf	___awdiv@dividend,f
  3001  0153  1903               	skipnz
  3002  0154  0AF3               	incf	___awdiv@dividend+1,f
  3003  0155                     i1l2550:
  3004  0155  3001               	movlw	1
  3005  0156  00FF               	movwf	btemp+1
  3006  0157  087F               	movf	btemp+1,w
  3007  0158  06F5               	xorwf	___awdiv@sign,f
  3008  0159                     i1l2552:
  3009  0159  01F6               	clrf	___awdiv@quotient
  3010  015A  01F7               	clrf	___awdiv@quotient+1
  3011  015B                     i1l2554:
  3012  015B  0870               	movf	___awdiv@divisor,w
  3013  015C  0471               	iorwf	___awdiv@divisor+1,w
  3014  015D  1903               	btfsc	3,2
  3015  015E  2960               	goto	u169_21
  3016  015F  2961               	goto	u169_20
  3017  0160                     u169_21:
  3018  0160  2998               	goto	i1l2574
  3019  0161                     u169_20:
  3020  0161                     i1l2556:
  3021  0161  01F4               	clrf	___awdiv@counter
  3022  0162  0AF4               	incf	___awdiv@counter,f
  3023  0163  296F               	goto	i1l2562
  3024  0164                     i1l2558:
  3025  0164  3001               	movlw	1
  3026  0165                     u170_25:
  3027  0165  1003               	clrc
  3028  0166  0DF0               	rlf	___awdiv@divisor,f
  3029  0167  0DF1               	rlf	___awdiv@divisor+1,f
  3030  0168  3EFF               	addlw	-1
  3031  0169  1D03               	skipz
  3032  016A  2965               	goto	u170_25
  3033  016B                     i1l2560:
  3034  016B  3001               	movlw	1
  3035  016C  00FF               	movwf	btemp+1
  3036  016D  087F               	movf	btemp+1,w
  3037  016E  07F4               	addwf	___awdiv@counter,f
  3038  016F                     i1l2562:
  3039  016F  1FF1               	btfss	___awdiv@divisor+1,7
  3040  0170  2972               	goto	u171_21
  3041  0171  2973               	goto	u171_20
  3042  0172                     u171_21:
  3043  0172  2964               	goto	i1l2558
  3044  0173                     u171_20:
  3045  0173                     i1l2564:
  3046  0173  3001               	movlw	1
  3047  0174                     u172_25:
  3048  0174  1003               	clrc
  3049  0175  0DF6               	rlf	___awdiv@quotient,f
  3050  0176  0DF7               	rlf	___awdiv@quotient+1,f
  3051  0177  3EFF               	addlw	-1
  3052  0178  1D03               	skipz
  3053  0179  2974               	goto	u172_25
  3054  017A  0871               	movf	___awdiv@divisor+1,w
  3055  017B  0273               	subwf	___awdiv@dividend+1,w
  3056  017C  1D03               	skipz
  3057  017D  2980               	goto	u173_25
  3058  017E  0870               	movf	___awdiv@divisor,w
  3059  017F  0272               	subwf	___awdiv@dividend,w
  3060  0180                     u173_25:
  3061  0180  1C03               	skipc
  3062  0181  2983               	goto	u173_21
  3063  0182  2984               	goto	u173_20
  3064  0183                     u173_21:
  3065  0183  298B               	goto	i1l2570
  3066  0184                     u173_20:
  3067  0184                     i1l2566:
  3068  0184  0870               	movf	___awdiv@divisor,w
  3069  0185  02F2               	subwf	___awdiv@dividend,f
  3070  0186  0871               	movf	___awdiv@divisor+1,w
  3071  0187  1C03               	skipc
  3072  0188  03F3               	decf	___awdiv@dividend+1,f
  3073  0189  02F3               	subwf	___awdiv@dividend+1,f
  3074  018A                     i1l2568:
  3075  018A  1476               	bsf	___awdiv@quotient,0
  3076  018B                     i1l2570:
  3077  018B  3001               	movlw	1
  3078  018C                     u174_25:
  3079  018C  1003               	clrc
  3080  018D  0CF1               	rrf	___awdiv@divisor+1,f
  3081  018E  0CF0               	rrf	___awdiv@divisor,f
  3082  018F  3EFF               	addlw	-1
  3083  0190  1D03               	skipz
  3084  0191  298C               	goto	u174_25
  3085  0192                     i1l2572:
  3086  0192  3001               	movlw	1
  3087  0193  02F4               	subwf	___awdiv@counter,f
  3088  0194  1D03               	btfss	3,2
  3089  0195  2997               	goto	u175_21
  3090  0196  2998               	goto	u175_20
  3091  0197                     u175_21:
  3092  0197  2973               	goto	i1l2564
  3093  0198                     u175_20:
  3094  0198                     i1l2574:
  3095  0198  0875               	movf	___awdiv@sign,w
  3096  0199  1903               	btfsc	3,2
  3097  019A  299C               	goto	u176_21
  3098  019B  299D               	goto	u176_20
  3099  019C                     u176_21:
  3100  019C  29A2               	goto	i1l2578
  3101  019D                     u176_20:
  3102  019D                     i1l2576:
  3103  019D  09F6               	comf	___awdiv@quotient,f
  3104  019E  09F7               	comf	___awdiv@quotient+1,f
  3105  019F  0AF6               	incf	___awdiv@quotient,f
  3106  01A0  1903               	skipnz
  3107  01A1  0AF7               	incf	___awdiv@quotient+1,f
  3108  01A2                     i1l2578:
  3109  01A2  0877               	movf	___awdiv@quotient+1,w
  3110  01A3  00F1               	movwf	?___awdiv+1
  3111  01A4  0876               	movf	___awdiv@quotient,w
  3112  01A5  00F0               	movwf	?___awdiv
  3113  01A6                     i1l627:
  3114  01A6  0008               	return
  3115  01A7                     __end_of___awdiv:
  3116                           
  3117                           	psect	text20
  3118  0547                     __ptext20:	
  3119 ;; *************** function _Clock_Normal *****************
  3120 ;; Defined at:
  3121 ;;		line 50 in file "Clock/Clock.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, btemp+1
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0
  3138 ;;      Totals:         0       0       0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_Clock_Update
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function _Clock_Normal
  3150  0547                     _Clock_Normal:
  3151  0547                     i1l2472:	
  3152                           ;incstack = 0
  3153                           ; Regs used in _Clock_Normal: [wreg+status,2+status,0+btemp+1]
  3154                           
  3155                           
  3156                           ;Clock/Clock.c: 53:     Clock.Second++;
  3157  0547  3001               	movlw	1
  3158  0548  00FF               	movwf	btemp+1
  3159  0549  087F               	movf	btemp+1,w
  3160  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3161  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3162  054C  07A4               	addwf	_Clock,f
  3163  054D                     i1l2474:
  3164                           
  3165                           ;Clock/Clock.c: 55:     if(Clock.Second==60)
  3166  054D  303C               	movlw	60
  3167  054E  0624               	xorwf	_Clock,w
  3168  054F  1D03               	btfss	3,2
  3169  0550  2D52               	goto	u152_21
  3170  0551  2D53               	goto	u152_20
  3171  0552                     u152_21:
  3172  0552  2D58               	goto	i1l2480
  3173  0553                     u152_20:
  3174  0553                     i1l2476:
  3175                           
  3176                           ;Clock/Clock.c: 56:     {;Clock/Clock.c: 57:       Clock.Minutes++;
  3177  0553  3001               	movlw	1
  3178  0554  00FF               	movwf	btemp+1
  3179  0555  087F               	movf	btemp+1,w
  3180  0556  07A5               	addwf	_Clock+1,f
  3181  0557                     i1l2478:
  3182                           
  3183                           ;Clock/Clock.c: 58:       Clock.Second=0;
  3184  0557  01A4               	clrf	_Clock
  3185  0558                     i1l2480:
  3186                           
  3187                           ;Clock/Clock.c: 61:     if(Clock.Minutes==60)
  3188  0558  303C               	movlw	60
  3189  0559  0625               	xorwf	_Clock+1,w
  3190  055A  1D03               	btfss	3,2
  3191  055B  2D5D               	goto	u153_21
  3192  055C  2D5E               	goto	u153_20
  3193  055D                     u153_21:
  3194  055D  2D63               	goto	i1l2486
  3195  055E                     u153_20:
  3196  055E                     i1l2482:
  3197                           
  3198                           ;Clock/Clock.c: 62:     {;Clock/Clock.c: 63:       Clock.Hours++;
  3199  055E  3001               	movlw	1
  3200  055F  00FF               	movwf	btemp+1
  3201  0560  087F               	movf	btemp+1,w
  3202  0561  07A6               	addwf	_Clock+2,f
  3203  0562                     i1l2484:
  3204                           
  3205                           ;Clock/Clock.c: 64:       Clock.Minutes=0;
  3206  0562  01A5               	clrf	_Clock+1
  3207  0563                     i1l2486:
  3208                           
  3209                           ;Clock/Clock.c: 66:     if(Clock.Hours==24)
  3210  0563  3018               	movlw	24
  3211  0564  0626               	xorwf	_Clock+2,w
  3212  0565  1D03               	btfss	3,2
  3213  0566  2D68               	goto	u154_21
  3214  0567  2D69               	goto	u154_20
  3215  0568                     u154_21:
  3216  0568  2D6A               	goto	i1l314
  3217  0569                     u154_20:
  3218  0569                     i1l2488:
  3219                           
  3220                           ;Clock/Clock.c: 67:     {;Clock/Clock.c: 68:       Clock.Hours=0;
  3221  0569  01A6               	clrf	_Clock+2
  3222  056A                     i1l314:
  3223  056A  0008               	return
  3224  056B                     __end_of_Clock_Normal:
  3225                           
  3226                           	psect	text21
  3227  0413                     __ptext21:	
  3228 ;; *************** function _Clock_Minutes_Setting *****************
  3229 ;; Defined at:
  3230 ;;		line 105 in file "Clock/Clock.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, btemp+1
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_Clock_Update
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _Clock_Minutes_Setting
  3259  0413                     _Clock_Minutes_Setting:
  3260  0413                     i1l2512:	
  3261                           ;incstack = 0
  3262                           ; Regs used in _Clock_Minutes_Setting: [wreg+status,2+status,0+btemp+1]
  3263                           
  3264                           
  3265                           ;Clock/Clock.c: 107:   if(ButtonsFlag.UpButton_Flag&&!ButtonsFlag.DownButton_Flag)
  3266  0413  1C7D               	btfss	_ButtonsFlag,0
  3267  0414  2C16               	goto	u161_21
  3268  0415  2C17               	goto	u161_20
  3269  0416                     u161_21:
  3270  0416  2C2F               	goto	i1l327
  3271  0417                     u161_20:
  3272  0417                     i1l2514:
  3273  0417  18FD               	btfsc	_ButtonsFlag,1
  3274  0418  2C1A               	goto	u162_21
  3275  0419  2C1B               	goto	u162_20
  3276  041A                     u162_21:
  3277  041A  2C2F               	goto	i1l327
  3278  041B                     u162_20:
  3279  041B                     i1l2516:
  3280                           
  3281                           ;Clock/Clock.c: 108:     {;Clock/Clock.c: 109:         if(Clock.Minutes==59)
  3282  041B  303B               	movlw	59
  3283  041C  1283               	bcf	3,5	;RP0=0, select bank0
  3284  041D  1303               	bcf	3,6	;RP1=0, select bank0
  3285  041E  0625               	xorwf	_Clock+1,w
  3286  041F  1D03               	btfss	3,2
  3287  0420  2C22               	goto	u163_21
  3288  0421  2C23               	goto	u163_20
  3289  0422                     u163_21:
  3290  0422  2C29               	goto	i1l2522
  3291  0423                     u163_20:
  3292  0423                     i1l2518:
  3293                           
  3294                           ;Clock/Clock.c: 110:         {;Clock/Clock.c: 111:             Clock.Hours++;
  3295  0423  3001               	movlw	1
  3296  0424  00FF               	movwf	btemp+1
  3297  0425  087F               	movf	btemp+1,w
  3298  0426  07A6               	addwf	_Clock+2,f
  3299  0427                     i1l2520:
  3300                           
  3301                           ;Clock/Clock.c: 112:             Clock.Minutes=0;
  3302  0427  01A5               	clrf	_Clock+1
  3303                           
  3304                           ;Clock/Clock.c: 113:         }
  3305  0428  2C2D               	goto	i1l2524
  3306  0429                     i1l2522:
  3307                           
  3308                           ;Clock/Clock.c: 115:         {;Clock/Clock.c: 116:             Clock.Minutes++;
  3309  0429  3001               	movlw	1
  3310  042A  00FF               	movwf	btemp+1
  3311  042B  087F               	movf	btemp+1,w
  3312  042C  07A5               	addwf	_Clock+1,f
  3313  042D                     i1l2524:
  3314                           
  3315                           ;Clock/Clock.c: 118:         ButtonsFlag.UpButton_Flag=0;
  3316  042D  107D               	bcf	_ButtonsFlag,0
  3317                           
  3318                           ;Clock/Clock.c: 119:     }
  3319  042E  2C48               	goto	i1l334
  3320  042F                     i1l327:	
  3321                           ;Clock/Clock.c: 120:     else if(ButtonsFlag.DownButton_Flag&&!ButtonsFlag.UpButton_Flag
      +                          )
  3322                           
  3323  042F  1CFD               	btfss	_ButtonsFlag,1
  3324  0430  2C32               	goto	u164_21
  3325  0431  2C33               	goto	u164_20
  3326  0432                     u164_21:
  3327  0432  2C48               	goto	i1l334
  3328  0433                     u164_20:
  3329  0433                     i1l2526:
  3330  0433  187D               	btfsc	_ButtonsFlag,0
  3331  0434  2C36               	goto	u165_21
  3332  0435  2C37               	goto	u165_20
  3333  0436                     u165_21:
  3334  0436  2C48               	goto	i1l334
  3335  0437                     u165_20:
  3336  0437                     i1l2528:
  3337                           
  3338                           ;Clock/Clock.c: 121:     {;Clock/Clock.c: 122:         if(Clock.Minutes==0)
  3339  0437  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0438  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0439  0825               	movf	_Clock+1,w
  3342  043A  1D03               	btfss	3,2
  3343  043B  2C3D               	goto	u166_21
  3344  043C  2C3E               	goto	u166_20
  3345  043D                     u166_21:
  3346  043D  2C45               	goto	i1l2534
  3347  043E                     u166_20:
  3348  043E                     i1l2530:
  3349                           
  3350                           ;Clock/Clock.c: 123:         {;Clock/Clock.c: 124:             Clock.Hours--;
  3351  043E  3001               	movlw	1
  3352  043F  02A6               	subwf	_Clock+2,f
  3353  0440                     i1l2532:
  3354                           
  3355                           ;Clock/Clock.c: 125:             Clock.Minutes=59;
  3356  0440  303B               	movlw	59
  3357  0441  00FF               	movwf	btemp+1
  3358  0442  087F               	movf	btemp+1,w
  3359  0443  00A5               	movwf	_Clock+1
  3360                           
  3361                           ;Clock/Clock.c: 126:         }
  3362  0444  2C47               	goto	i1l2536
  3363  0445                     i1l2534:
  3364                           
  3365                           ;Clock/Clock.c: 128:         {;Clock/Clock.c: 129:             Clock.Minutes--;
  3366  0445  3001               	movlw	1
  3367  0446  02A5               	subwf	_Clock+1,f
  3368  0447                     i1l2536:
  3369                           
  3370                           ;Clock/Clock.c: 131:         ButtonsFlag.DownButton_Flag=0;
  3371  0447  10FD               	bcf	_ButtonsFlag,1
  3372  0448                     i1l334:
  3373  0448  0008               	return
  3374  0449                     __end_of_Clock_Minutes_Setting:
  3375                           
  3376                           	psect	text22
  3377  047A                     __ptext22:	
  3378 ;; *************** function _Clock_Hour_Setting *****************
  3379 ;; Defined at:
  3380 ;;		line 74 in file "Clock/Clock.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, btemp+1
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3394 ;;      Params:         0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_Clock_Update
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _Clock_Hour_Setting
  3409  047A                     _Clock_Hour_Setting:
  3410  047A                     i1l2490:	
  3411                           ;incstack = 0
  3412                           ; Regs used in _Clock_Hour_Setting: [wreg+status,2+status,0+btemp+1]
  3413                           
  3414                           
  3415                           ;Clock/Clock.c: 76:     if(ButtonsFlag.UpButton_Flag&&!ButtonsFlag.DownButton_Flag)
  3416  047A  1C7D               	btfss	_ButtonsFlag,0
  3417  047B  2C7D               	goto	u155_21
  3418  047C  2C7E               	goto	u155_20
  3419  047D                     u155_21:
  3420  047D  2C92               	goto	i1l317
  3421  047E                     u155_20:
  3422  047E                     i1l2492:
  3423  047E  18FD               	btfsc	_ButtonsFlag,1
  3424  047F  2C81               	goto	u156_21
  3425  0480  2C82               	goto	u156_20
  3426  0481                     u156_21:
  3427  0481  2C92               	goto	i1l317
  3428  0482                     u156_20:
  3429  0482                     i1l2494:
  3430                           
  3431                           ;Clock/Clock.c: 77:     {;Clock/Clock.c: 78:         if(Clock.Hours==23)
  3432  0482  3017               	movlw	23
  3433  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0485  0626               	xorwf	_Clock+2,w
  3436  0486  1D03               	btfss	3,2
  3437  0487  2C89               	goto	u157_21
  3438  0488  2C8A               	goto	u157_20
  3439  0489                     u157_21:
  3440  0489  2C8C               	goto	i1l2498
  3441  048A                     u157_20:
  3442  048A                     i1l2496:
  3443                           
  3444                           ;Clock/Clock.c: 79:         {;Clock/Clock.c: 80:             Clock.Hours=0;
  3445  048A  01A6               	clrf	_Clock+2
  3446                           
  3447                           ;Clock/Clock.c: 81:         }
  3448  048B  2C90               	goto	i1l2500
  3449  048C                     i1l2498:
  3450                           
  3451                           ;Clock/Clock.c: 83:         {;Clock/Clock.c: 84:             Clock.Hours++;
  3452  048C  3001               	movlw	1
  3453  048D  00FF               	movwf	btemp+1
  3454  048E  087F               	movf	btemp+1,w
  3455  048F  07A6               	addwf	_Clock+2,f
  3456  0490                     i1l2500:
  3457                           
  3458                           ;Clock/Clock.c: 86:         ButtonsFlag.UpButton_Flag=0;
  3459  0490  107D               	bcf	_ButtonsFlag,0
  3460                           
  3461                           ;Clock/Clock.c: 87:     }
  3462  0491  2CA9               	goto	i1l324
  3463  0492                     i1l317:	
  3464                           ;Clock/Clock.c: 88:     else if(ButtonsFlag.DownButton_Flag&&!ButtonsFlag.UpButton_Flag)
  3465                           
  3466  0492  1CFD               	btfss	_ButtonsFlag,1
  3467  0493  2C95               	goto	u158_21
  3468  0494  2C96               	goto	u158_20
  3469  0495                     u158_21:
  3470  0495  2CA9               	goto	i1l324
  3471  0496                     u158_20:
  3472  0496                     i1l2502:
  3473  0496  187D               	btfsc	_ButtonsFlag,0
  3474  0497  2C99               	goto	u159_21
  3475  0498  2C9A               	goto	u159_20
  3476  0499                     u159_21:
  3477  0499  2CA9               	goto	i1l324
  3478  049A                     u159_20:
  3479  049A                     i1l2504:
  3480                           
  3481                           ;Clock/Clock.c: 89:     {;Clock/Clock.c: 90:          if(Clock.Hours==0)
  3482  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3483  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3484  049C  0826               	movf	_Clock+2,w
  3485  049D  1D03               	btfss	3,2
  3486  049E  2CA0               	goto	u160_21
  3487  049F  2CA1               	goto	u160_20
  3488  04A0                     u160_21:
  3489  04A0  2CA6               	goto	i1l2508
  3490  04A1                     u160_20:
  3491  04A1                     i1l2506:
  3492                           
  3493                           ;Clock/Clock.c: 91:         {;Clock/Clock.c: 92:             Clock.Hours=23;
  3494  04A1  3017               	movlw	23
  3495  04A2  00FF               	movwf	btemp+1
  3496  04A3  087F               	movf	btemp+1,w
  3497  04A4  00A6               	movwf	_Clock+2
  3498                           
  3499                           ;Clock/Clock.c: 93:         }
  3500  04A5  2CA8               	goto	i1l2510
  3501  04A6                     i1l2508:
  3502                           
  3503                           ;Clock/Clock.c: 95:         {;Clock/Clock.c: 96:          Clock.Hours--;
  3504  04A6  3001               	movlw	1
  3505  04A7  02A6               	subwf	_Clock+2,f
  3506  04A8                     i1l2510:
  3507                           
  3508                           ;Clock/Clock.c: 98:         ButtonsFlag.DownButton_Flag=0;
  3509  04A8  10FD               	bcf	_ButtonsFlag,1
  3510  04A9                     i1l324:
  3511  04A9  0008               	return
  3512  04AA                     __end_of_Clock_Hour_Setting:
  3513                           
  3514                           	psect	text23
  3515  04FC                     __ptext23:	
  3516 ;; *************** function _ModeManager_Update *****************
  3517 ;; Defined at:
  3518 ;;		line 17 in file "ModeManger/ModeManager.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0
  3534 ;;      Temps:          2       0       0       0       0
  3535 ;;      Totals:         2       0       0       0       0
  3536 ;;Total ram usage:        2 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_Scheduler_Task2
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function _ModeManager_Update
  3547  04FC                     _ModeManager_Update:
  3548  04FC                     i1l2662:	
  3549                           ;incstack = 0
  3550                           ; Regs used in _ModeManager_Update: [wreg-fsr0h+status,2+status,0+btemp+1]
  3551                           
  3552                           
  3553                           ;ModeManger/ModeManager.c: 20:     if(ButtonsFlag.SettingButton_Flag)
  3554  04FC  1D7D               	btfss	_ButtonsFlag,2
  3555  04FD  2CFF               	goto	u192_21
  3556  04FE  2D00               	goto	u192_20
  3557  04FF                     u192_21:
  3558  04FF  2D21               	goto	i1l228
  3559  0500                     u192_20:
  3560  0500  2D0B               	goto	i1l2672
  3561  0501                     i1l224:	
  3562                           ;ModeManger/ModeManager.c: 24:         {;ModeManger/ModeManager.c: 25:             case 
      +                          Normal_Mode:
  3563                           
  3564                           
  3565                           ;ModeManger/ModeManager.c: 26:                          MODE=Hours_Mode;
  3566  0501  01B1               	clrf	_MODE
  3567  0502  0AB1               	incf	_MODE,f
  3568                           
  3569                           ;ModeManger/ModeManager.c: 27:                          break;
  3570  0503  2D20               	goto	i1l225
  3571  0504                     i1l2666:
  3572                           
  3573                           ;ModeManger/ModeManager.c: 30:                          MODE=Minutes_Mode;
  3574  0504  3002               	movlw	2
  3575  0505  00FF               	movwf	btemp+1
  3576  0506  087F               	movf	btemp+1,w
  3577  0507  00B1               	movwf	_MODE
  3578                           
  3579                           ;ModeManger/ModeManager.c: 31:                          break;
  3580  0508  2D20               	goto	i1l225
  3581  0509                     i1l2668:
  3582                           
  3583                           ;ModeManger/ModeManager.c: 34:                          MODE=Normal_Mode;
  3584  0509  01B1               	clrf	_MODE
  3585                           
  3586                           ;ModeManger/ModeManager.c: 35:                          break;
  3587  050A  2D20               	goto	i1l225
  3588  050B                     i1l2672:
  3589  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3590  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3591  050D  0831               	movf	_MODE,w
  3592  050E  00F0               	movwf	??_ModeManager_Update
  3593  050F  01F1               	clrf	??_ModeManager_Update+1
  3594                           
  3595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3596                           ; Switch size 1, requested type "simple"
  3597                           ; Number of cases is 1, Range of values is 0 to 0
  3598                           ; switch strategies available:
  3599                           ; Name         Instructions Cycles
  3600                           ; simple_byte            4     3 (average)
  3601                           ; direct_byte           11     8 (fixed)
  3602                           ; jumptable            260     6 (fixed)
  3603                           ;	Chosen strategy is simple_byte
  3604  0510  0871               	movf	??_ModeManager_Update+1,w
  3605  0511  3A00               	xorlw	0	; case 0
  3606  0512  1903               	skipnz
  3607  0513  2D15               	goto	i1l2882
  3608  0514  2D20               	goto	i1l225
  3609  0515                     i1l2882:
  3610                           
  3611                           ; Switch size 1, requested type "simple"
  3612                           ; Number of cases is 3, Range of values is 0 to 2
  3613                           ; switch strategies available:
  3614                           ; Name         Instructions Cycles
  3615                           ; simple_byte           10     6 (average)
  3616                           ; direct_byte           17     8 (fixed)
  3617                           ; jumptable            260     6 (fixed)
  3618                           ;	Chosen strategy is simple_byte
  3619  0515  0870               	movf	??_ModeManager_Update,w
  3620  0516  3A00               	xorlw	0	; case 0
  3621  0517  1903               	skipnz
  3622  0518  2D01               	goto	i1l224
  3623  0519  3A01               	xorlw	1	; case 1
  3624  051A  1903               	skipnz
  3625  051B  2D04               	goto	i1l2666
  3626  051C  3A03               	xorlw	3	; case 2
  3627  051D  1903               	skipnz
  3628  051E  2D09               	goto	i1l2668
  3629  051F  2D20               	goto	i1l225
  3630  0520                     i1l225:
  3631                           
  3632                           ;ModeManger/ModeManager.c: 37:         ButtonsFlag.SettingButton_Flag=0;
  3633  0520  117D               	bcf	_ButtonsFlag,2
  3634  0521                     i1l228:
  3635  0521  0008               	return
  3636  0522                     __end_of_ModeManager_Update:
  3637                           
  3638                           	psect	text24
  3639  037B                     __ptext24:	
  3640 ;; *************** function _Buttons_Update *****************
  3641 ;; Defined at:
  3642 ;;		line 27 in file "Buttons/Buttons.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3656 ;;      Params:         0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0
  3659 ;;      Totals:         0       0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    1
  3663 ;; This function calls:
  3664 ;;		___awmod
  3665 ;; This function is called by:
  3666 ;;		_Scheduler_Task2
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           
  3671                           ;psect for function _Buttons_Update
  3672  037B                     _Buttons_Update:
  3673  037B                     i1l2620:	
  3674                           ;incstack = 0
  3675                           ; Regs used in _Buttons_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3676                           
  3677                           
  3678                           ;Buttons/Buttons.c: 29:     static uint8_t Debounce_Counter=0;;Buttons/Buttons.c: 30:   
      +                            Debounce_UpButton[Debounce_Counter]=(PORTB&(1<<2));
  3679  037B  1283               	bcf	3,5	;RP0=0, select bank0
  3680  037C  1303               	bcf	3,6	;RP1=0, select bank0
  3681  037D  0806               	movf	6,w	;volatile
  3682  037E  3904               	andlw	4
  3683  037F  00FF               	movwf	btemp+1
  3684  0380  082F               	movf	Buttons_Update@Debounce_Counter,w
  3685  0381  3E35               	addlw	(low (_Debounce_UpButton| 0))& (0+255)
  3686  0382  0084               	movwf	4
  3687  0383  087F               	movf	btemp+1,w
  3688  0384  1383               	bcf	3,7	;select IRP bank0
  3689  0385  0080               	movwf	0
  3690                           
  3691                           ;Buttons/Buttons.c: 31:     Debounce_DownButton[Debounce_Counter]=(PORTB&(1<<1));
  3692  0386  0806               	movf	6,w	;volatile
  3693  0387  3902               	andlw	2
  3694  0388  00FF               	movwf	btemp+1
  3695  0389  082F               	movf	Buttons_Update@Debounce_Counter,w
  3696  038A  3E32               	addlw	(low (_Debounce_DownButton| 0))& (0+255)
  3697  038B  0084               	movwf	4
  3698  038C  087F               	movf	btemp+1,w
  3699  038D  0080               	movwf	0
  3700  038E                     i1l2622:
  3701                           
  3702                           ;Buttons/Buttons.c: 33:     Debounce_Counter=(Debounce_Counter+1)%3;
  3703  038E  3003               	movlw	3
  3704  038F  00F0               	movwf	___awmod@divisor
  3705  0390  3000               	movlw	0
  3706  0391  00F1               	movwf	___awmod@divisor+1
  3707  0392  082F               	movf	Buttons_Update@Debounce_Counter,w
  3708  0393  3E01               	addlw	1
  3709  0394  00F2               	movwf	___awmod@dividend
  3710  0395  3000               	movlw	0
  3711  0396  1803               	skipnc
  3712  0397  3001               	movlw	1
  3713  0398  00F3               	movwf	___awmod@dividend+1
  3714  0399  120A  118A  22CC  120A  118A  	fcall	___awmod
  3715  039E  0870               	movf	?___awmod,w
  3716  039F  00FF               	movwf	btemp+1
  3717  03A0  087F               	movf	btemp+1,w
  3718  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  3719  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  3720  03A3  00AF               	movwf	Buttons_Update@Debounce_Counter
  3721  03A4                     i1l2624:
  3722                           
  3723                           ;Buttons/Buttons.c: 34:     if(Debounce_UpButton[0]==0 &&Debounce_UpButton[1]==0 &&Debou
      +                          nce_UpButton[2]==0 )
  3724  03A4  0835               	movf	_Debounce_UpButton,w
  3725  03A5  1D03               	btfss	3,2
  3726  03A6  2BA8               	goto	u186_21
  3727  03A7  2BA9               	goto	u186_20
  3728  03A8                     u186_21:
  3729  03A8  2BBA               	goto	i1l2632
  3730  03A9                     u186_20:
  3731  03A9                     i1l2626:
  3732  03A9  0836               	movf	_Debounce_UpButton+1,w
  3733  03AA  1D03               	btfss	3,2
  3734  03AB  2BAD               	goto	u187_21
  3735  03AC  2BAE               	goto	u187_20
  3736  03AD                     u187_21:
  3737  03AD  2BBA               	goto	i1l2632
  3738  03AE                     u187_20:
  3739  03AE                     i1l2628:
  3740  03AE  0837               	movf	_Debounce_UpButton+2,w
  3741  03AF  1D03               	btfss	3,2
  3742  03B0  2BB2               	goto	u188_21
  3743  03B1  2BB3               	goto	u188_20
  3744  03B2                     u188_21:
  3745  03B2  2BBA               	goto	i1l2632
  3746  03B3                     u188_20:
  3747  03B3                     i1l2630:
  3748                           
  3749                           ;Buttons/Buttons.c: 35:     {;Buttons/Buttons.c: 36:         ButtonsFlag.UpButton_Flag=1
      +                          ;
  3750  03B3  147D               	bsf	_ButtonsFlag,0
  3751                           
  3752                           ;Buttons/Buttons.c: 38:         Debounce_UpButton[0]=1 ;Debounce_UpButton[1]=1 ;Debounce
      +                          _UpButton[2]=1 ;
  3753  03B4  01B5               	clrf	_Debounce_UpButton
  3754  03B5  0AB5               	incf	_Debounce_UpButton,f
  3755  03B6  01B6               	clrf	_Debounce_UpButton+1
  3756  03B7  0AB6               	incf	_Debounce_UpButton+1,f
  3757  03B8  01B7               	clrf	_Debounce_UpButton+2
  3758  03B9  0AB7               	incf	_Debounce_UpButton+2,f
  3759  03BA                     i1l2632:
  3760                           
  3761                           ;Buttons/Buttons.c: 41:     if(Debounce_DownButton[0]==0 &&Debounce_DownButton[1]==0 &&D
      +                          ebounce_DownButton[2]==0 )
  3762  03BA  0832               	movf	_Debounce_DownButton,w
  3763  03BB  1D03               	btfss	3,2
  3764  03BC  2BBE               	goto	u189_21
  3765  03BD  2BBF               	goto	u189_20
  3766  03BE                     u189_21:
  3767  03BE  2BD0               	goto	i1l96
  3768  03BF                     u189_20:
  3769  03BF                     i1l2634:
  3770  03BF  0833               	movf	_Debounce_DownButton+1,w
  3771  03C0  1D03               	btfss	3,2
  3772  03C1  2BC3               	goto	u190_21
  3773  03C2  2BC4               	goto	u190_20
  3774  03C3                     u190_21:
  3775  03C3  2BD0               	goto	i1l96
  3776  03C4                     u190_20:
  3777  03C4                     i1l2636:
  3778  03C4  0834               	movf	_Debounce_DownButton+2,w
  3779  03C5  1D03               	btfss	3,2
  3780  03C6  2BC8               	goto	u191_21
  3781  03C7  2BC9               	goto	u191_20
  3782  03C8                     u191_21:
  3783  03C8  2BD0               	goto	i1l96
  3784  03C9                     u191_20:
  3785  03C9                     i1l2638:
  3786                           
  3787                           ;Buttons/Buttons.c: 42:     {;Buttons/Buttons.c: 43:         ButtonsFlag.DownButton_Flag
      +                          =1;
  3788  03C9  14FD               	bsf	_ButtonsFlag,1
  3789                           
  3790                           ;Buttons/Buttons.c: 45:         Debounce_DownButton[0]=1 ;Debounce_DownButton[1]=1 ;Debo
      +                          unce_DownButton[2]=1 ;
  3791  03CA  01B2               	clrf	_Debounce_DownButton
  3792  03CB  0AB2               	incf	_Debounce_DownButton,f
  3793  03CC  01B3               	clrf	_Debounce_DownButton+1
  3794  03CD  0AB3               	incf	_Debounce_DownButton+1,f
  3795  03CE  01B4               	clrf	_Debounce_DownButton+2
  3796  03CF  0AB4               	incf	_Debounce_DownButton+2,f
  3797  03D0                     i1l96:
  3798  03D0  0008               	return
  3799  03D1                     __end_of_Buttons_Update:
  3800                           
  3801                           	psect	text25
  3802  02CC                     __ptext25:	
  3803 ;; *************** function ___awmod *****************
  3804 ;; Defined at:
  3805 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  divisor         2    0[COMMON] int 
  3808 ;;  dividend        2    2[COMMON] int 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  sign            1    5[COMMON] unsigned char 
  3811 ;;  counter         1    4[COMMON] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  2    0[COMMON] int 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, btemp+1
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         4       0       0       0       0
  3822 ;;      Locals:         2       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0
  3824 ;;      Totals:         6       0       0       0       0
  3825 ;;Total ram usage:        6 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_Buttons_Update
  3831 ;;		_Clock_Update
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function ___awmod
  3837  02CC                     ___awmod:
  3838  02CC                     i1l2582:	
  3839                           ;incstack = 0
  3840                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3841                           
  3842  02CC  01F5               	clrf	___awmod@sign
  3843  02CD                     i1l2584:
  3844  02CD  1FF3               	btfss	___awmod@dividend+1,7
  3845  02CE  2AD0               	goto	u177_21
  3846  02CF  2AD1               	goto	u177_20
  3847  02D0                     u177_21:
  3848  02D0  2AD8               	goto	i1l2590
  3849  02D1                     u177_20:
  3850  02D1                     i1l2586:
  3851  02D1  09F2               	comf	___awmod@dividend,f
  3852  02D2  09F3               	comf	___awmod@dividend+1,f
  3853  02D3  0AF2               	incf	___awmod@dividend,f
  3854  02D4  1903               	skipnz
  3855  02D5  0AF3               	incf	___awmod@dividend+1,f
  3856  02D6                     i1l2588:
  3857  02D6  01F5               	clrf	___awmod@sign
  3858  02D7  0AF5               	incf	___awmod@sign,f
  3859  02D8                     i1l2590:
  3860  02D8  1FF1               	btfss	___awmod@divisor+1,7
  3861  02D9  2ADB               	goto	u178_21
  3862  02DA  2ADC               	goto	u178_20
  3863  02DB                     u178_21:
  3864  02DB  2AE1               	goto	i1l2594
  3865  02DC                     u178_20:
  3866  02DC                     i1l2592:
  3867  02DC  09F0               	comf	___awmod@divisor,f
  3868  02DD  09F1               	comf	___awmod@divisor+1,f
  3869  02DE  0AF0               	incf	___awmod@divisor,f
  3870  02DF  1903               	skipnz
  3871  02E0  0AF1               	incf	___awmod@divisor+1,f
  3872  02E1                     i1l2594:
  3873  02E1  0870               	movf	___awmod@divisor,w
  3874  02E2  0471               	iorwf	___awmod@divisor+1,w
  3875  02E3  1903               	btfsc	3,2
  3876  02E4  2AE6               	goto	u179_21
  3877  02E5  2AE7               	goto	u179_20
  3878  02E6                     u179_21:
  3879  02E6  2B16               	goto	i1l2612
  3880  02E7                     u179_20:
  3881  02E7                     i1l2596:
  3882  02E7  01F4               	clrf	___awmod@counter
  3883  02E8  0AF4               	incf	___awmod@counter,f
  3884  02E9  2AF5               	goto	i1l2602
  3885  02EA                     i1l2598:
  3886  02EA  3001               	movlw	1
  3887  02EB                     u180_25:
  3888  02EB  1003               	clrc
  3889  02EC  0DF0               	rlf	___awmod@divisor,f
  3890  02ED  0DF1               	rlf	___awmod@divisor+1,f
  3891  02EE  3EFF               	addlw	-1
  3892  02EF  1D03               	skipz
  3893  02F0  2AEB               	goto	u180_25
  3894  02F1                     i1l2600:
  3895  02F1  3001               	movlw	1
  3896  02F2  00FF               	movwf	btemp+1
  3897  02F3  087F               	movf	btemp+1,w
  3898  02F4  07F4               	addwf	___awmod@counter,f
  3899  02F5                     i1l2602:
  3900  02F5  1FF1               	btfss	___awmod@divisor+1,7
  3901  02F6  2AF8               	goto	u181_21
  3902  02F7  2AF9               	goto	u181_20
  3903  02F8                     u181_21:
  3904  02F8  2AEA               	goto	i1l2598
  3905  02F9                     u181_20:
  3906  02F9                     i1l2604:
  3907  02F9  0871               	movf	___awmod@divisor+1,w
  3908  02FA  0273               	subwf	___awmod@dividend+1,w
  3909  02FB  1D03               	skipz
  3910  02FC  2AFF               	goto	u182_25
  3911  02FD  0870               	movf	___awmod@divisor,w
  3912  02FE  0272               	subwf	___awmod@dividend,w
  3913  02FF                     u182_25:
  3914  02FF  1C03               	skipc
  3915  0300  2B02               	goto	u182_21
  3916  0301  2B03               	goto	u182_20
  3917  0302                     u182_21:
  3918  0302  2B09               	goto	i1l2608
  3919  0303                     u182_20:
  3920  0303                     i1l2606:
  3921  0303  0870               	movf	___awmod@divisor,w
  3922  0304  02F2               	subwf	___awmod@dividend,f
  3923  0305  0871               	movf	___awmod@divisor+1,w
  3924  0306  1C03               	skipc
  3925  0307  03F3               	decf	___awmod@dividend+1,f
  3926  0308  02F3               	subwf	___awmod@dividend+1,f
  3927  0309                     i1l2608:
  3928  0309  3001               	movlw	1
  3929  030A                     u183_25:
  3930  030A  1003               	clrc
  3931  030B  0CF1               	rrf	___awmod@divisor+1,f
  3932  030C  0CF0               	rrf	___awmod@divisor,f
  3933  030D  3EFF               	addlw	-1
  3934  030E  1D03               	skipz
  3935  030F  2B0A               	goto	u183_25
  3936  0310                     i1l2610:
  3937  0310  3001               	movlw	1
  3938  0311  02F4               	subwf	___awmod@counter,f
  3939  0312  1D03               	btfss	3,2
  3940  0313  2B15               	goto	u184_21
  3941  0314  2B16               	goto	u184_20
  3942  0315                     u184_21:
  3943  0315  2AF9               	goto	i1l2604
  3944  0316                     u184_20:
  3945  0316                     i1l2612:
  3946  0316  0875               	movf	___awmod@sign,w
  3947  0317  1903               	btfsc	3,2
  3948  0318  2B1A               	goto	u185_21
  3949  0319  2B1B               	goto	u185_20
  3950  031A                     u185_21:
  3951  031A  2B20               	goto	i1l2616
  3952  031B                     u185_20:
  3953  031B                     i1l2614:
  3954  031B  09F2               	comf	___awmod@dividend,f
  3955  031C  09F3               	comf	___awmod@dividend+1,f
  3956  031D  0AF2               	incf	___awmod@dividend,f
  3957  031E  1903               	skipnz
  3958  031F  0AF3               	incf	___awmod@dividend+1,f
  3959  0320                     i1l2616:
  3960  0320  0873               	movf	___awmod@dividend+1,w
  3961  0321  00F1               	movwf	?___awmod+1
  3962  0322  0872               	movf	___awmod@dividend,w
  3963  0323  00F0               	movwf	?___awmod
  3964  0324                     i1l640:
  3965  0324  0008               	return
  3966  0325                     __end_of___awmod:
  3967                           
  3968                           	psect	text26
  3969  03D1                     __ptext26:	
  3970 ;; *************** function _Display_Update *****************
  3971 ;; Defined at:
  3972 ;;		line 32 in file "Display/Display.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0
  3988 ;;      Temps:          2       0       0       0       0
  3989 ;;      Totals:         2       0       0       0       0
  3990 ;;Total ram usage:        2 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    2
  3993 ;; This function calls:
  3994 ;;		_Display_Blink
  3995 ;;		_Display_Normal
  3996 ;;		_SSD_DigitSelector
  3997 ;; This function is called by:
  3998 ;;		_Scheduler_Task1
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function _Display_Update
  4004  03D1                     _Display_Update:
  4005  03D1                     i1l2640:	
  4006                           ;incstack = 0
  4007 ;; hardware stack exceeded
  4008                           ; Regs used in _Display_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4009                           
  4010                           
  4011                           ;Display/Display.c: 34:    switch(MODE)
  4012  03D1  2BF8               	goto	i1l2654
  4013  03D2                     i1l2642:
  4014                           
  4015                           ;Display/Display.c: 37:                               Display_Normal();
  4016  03D2  120A  118A  2642  120A  118A  	fcall	_Display_Normal
  4017                           
  4018                           ;Display/Display.c: 38:                               break;
  4019  03D7  2C0D               	goto	i1l2656
  4020  03D8                     i1l2644:
  4021                           
  4022                           ;Display/Display.c: 41:                               Display_Blink(500,Hours_Mode);
  4023  03D8  30F4               	movlw	244
  4024  03D9  00F6               	movwf	Display_Blink@Times_Ms
  4025  03DA  3001               	movlw	1
  4026  03DB  00F7               	movwf	Display_Blink@Times_Ms+1
  4027  03DC  01F8               	clrf	Display_Blink@_MODE_
  4028  03DD  0AF8               	incf	Display_Blink@_MODE_,f
  4029  03DE  120A  118A  220C  120A  118A  	fcall	_Display_Blink
  4030  03E3                     i1l2646:
  4031                           
  4032                           ;Display/Display.c: 42:                               Enable_Minutes=1;
  4033  03E3  01FC               	clrf	_Enable_Minutes
  4034  03E4  0AFC               	incf	_Enable_Minutes,f
  4035                           
  4036                           ;Display/Display.c: 44:                               break;
  4037  03E5  2C0D               	goto	i1l2656
  4038  03E6                     i1l2648:
  4039                           
  4040                           ;Display/Display.c: 47:                               Display_Blink(500,Minutes_Mode);
  4041  03E6  30F4               	movlw	244
  4042  03E7  00F6               	movwf	Display_Blink@Times_Ms
  4043  03E8  3001               	movlw	1
  4044  03E9  00F7               	movwf	Display_Blink@Times_Ms+1
  4045  03EA  3002               	movlw	2
  4046  03EB  00FF               	movwf	btemp+1
  4047  03EC  087F               	movf	btemp+1,w
  4048  03ED  00F8               	movwf	Display_Blink@_MODE_
  4049  03EE  120A  118A  220C  120A  118A  	fcall	_Display_Blink
  4050  03F3                     i1l2650:
  4051                           
  4052                           ;Display/Display.c: 48:                               Enable_Hours=1;
  4053  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  4054  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  4055  03F5  01AD               	clrf	_Enable_Hours
  4056  03F6  0AAD               	incf	_Enable_Hours,f
  4057                           
  4058                           ;Display/Display.c: 49:                               break;
  4059  03F7  2C0D               	goto	i1l2656
  4060  03F8                     i1l2654:
  4061  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  4062  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  4063  03FA  0831               	movf	_MODE,w
  4064  03FB  00F9               	movwf	??_Display_Update
  4065  03FC  01FA               	clrf	??_Display_Update+1
  4066                           
  4067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4068                           ; Switch size 1, requested type "simple"
  4069                           ; Number of cases is 1, Range of values is 0 to 0
  4070                           ; switch strategies available:
  4071                           ; Name         Instructions Cycles
  4072                           ; simple_byte            4     3 (average)
  4073                           ; direct_byte           11     8 (fixed)
  4074                           ; jumptable            260     6 (fixed)
  4075                           ;	Chosen strategy is simple_byte
  4076  03FD  087A               	movf	??_Display_Update+1,w
  4077  03FE  3A00               	xorlw	0	; case 0
  4078  03FF  1903               	skipnz
  4079  0400  2C02               	goto	i1l2884
  4080  0401  2C0D               	goto	i1l2656
  4081  0402                     i1l2884:
  4082                           
  4083                           ; Switch size 1, requested type "simple"
  4084                           ; Number of cases is 3, Range of values is 0 to 2
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte           10     6 (average)
  4088                           ; direct_byte           17     8 (fixed)
  4089                           ; jumptable            260     6 (fixed)
  4090                           ;	Chosen strategy is simple_byte
  4091  0402  0879               	movf	??_Display_Update,w
  4092  0403  3A00               	xorlw	0	; case 0
  4093  0404  1903               	skipnz
  4094  0405  2BD2               	goto	i1l2642
  4095  0406  3A01               	xorlw	1	; case 1
  4096  0407  1903               	skipnz
  4097  0408  2BD8               	goto	i1l2644
  4098  0409  3A03               	xorlw	3	; case 2
  4099  040A  1903               	skipnz
  4100  040B  2BE6               	goto	i1l2648
  4101  040C  2C0D               	goto	i1l2656
  4102  040D                     i1l2656:
  4103                           
  4104                           ;Display/Display.c: 51:     SSD_DigitSelector();
  4105  040D  120A  118A  203A  120A  118A  	fcall	_SSD_DigitSelector
  4106  0412                     i1l185:
  4107  0412  0008               	return
  4108  0413                     __end_of_Display_Update:
  4109                           
  4110                           	psect	text27
  4111  003A                     __ptext27:	
  4112 ;; *************** function _SSD_DigitSelector *****************
  4113 ;; Defined at:
  4114 ;;		line 20 in file "SSD/SSD.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4128 ;;      Params:         0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0
  4130 ;;      Temps:          2       0       0       0       0
  4131 ;;      Totals:         2       0       0       0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    1
  4135 ;; This function calls:
  4136 ;;		_SSD_Display
  4137 ;; This function is called by:
  4138 ;;		_Display_Update
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _SSD_DigitSelector
  4144  003A                     _SSD_DigitSelector:
  4145  003A                     i1l2424:	
  4146                           ;incstack = 0
  4147 ;; hardware stack exceeded
  4148                           ; Regs used in _SSD_DigitSelector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4149                           
  4150                           
  4151                           ;SSD/SSD.c: 23:       switch(DigitSelector)
  4152  003A  28A0               	goto	i1l2462
  4153  003B                     i1l2426:
  4154                           
  4155                           ;SSD/SSD.c: 26:                         if(Enable_Hours==1)
  4156  003B  032D               	decf	_Enable_Hours,w
  4157  003C  1D03               	btfss	3,2
  4158  003D  283F               	goto	u148_21
  4159  003E  2840               	goto	u148_20
  4160  003F                     u148_21:
  4161  003F  2841               	goto	i1l2430
  4162  0040                     u148_20:
  4163  0040                     i1l2428:
  4164                           
  4165                           ;SSD/SSD.c: 27:                         {;SSD/SSD.c: 28:                             (PO
      +                          RTA|=(1<<2));
  4166  0040  1505               	bsf	5,2	;volatile
  4167  0041                     i1l2430:
  4168                           
  4169                           ;SSD/SSD.c: 30:                         (PORTA&=~(1<<3));
  4170  0041  30F7               	movlw	247
  4171  0042  00FF               	movwf	btemp+1
  4172  0043  087F               	movf	btemp+1,w
  4173  0044  0585               	andwf	5,f	;volatile
  4174                           
  4175                           ;SSD/SSD.c: 31:                         (PORTA&=~(1<<4));
  4176  0045  30EF               	movlw	239
  4177  0046  00FF               	movwf	btemp+1
  4178  0047  087F               	movf	btemp+1,w
  4179  0048  0585               	andwf	5,f	;volatile
  4180                           
  4181                           ;SSD/SSD.c: 32:                         (PORTA&=~(1<<5));
  4182  0049  30DF               	movlw	223
  4183  004A  00FF               	movwf	btemp+1
  4184  004B  087F               	movf	btemp+1,w
  4185  004C  0585               	andwf	5,f	;volatile
  4186  004D                     i1l2432:
  4187                           
  4188                           ;SSD/SSD.c: 33:                         SSD_Display(Digit1);
  4189  004D  082C               	movf	_Digit1,w
  4190  004E  120A  118A  226F  120A  118A  	fcall	_SSD_Display
  4191                           
  4192                           ;SSD/SSD.c: 34:                         break;
  4193  0053  28B8               	goto	i1l2464
  4194  0054                     i1l2434:
  4195                           
  4196                           ;SSD/SSD.c: 37:                         if(Enable_Hours==1)
  4197  0054  032D               	decf	_Enable_Hours,w
  4198  0055  1D03               	btfss	3,2
  4199  0056  2858               	goto	u149_21
  4200  0057  2859               	goto	u149_20
  4201  0058                     u149_21:
  4202  0058  285A               	goto	i1l2438
  4203  0059                     u149_20:
  4204  0059                     i1l2436:
  4205                           
  4206                           ;SSD/SSD.c: 38:                         {;SSD/SSD.c: 39:                             (PO
      +                          RTA|=(1<<3));
  4207  0059  1585               	bsf	5,3	;volatile
  4208  005A                     i1l2438:
  4209                           
  4210                           ;SSD/SSD.c: 41:                         (PORTA&=~(1<<2));
  4211  005A  30FB               	movlw	251
  4212  005B  00FF               	movwf	btemp+1
  4213  005C  087F               	movf	btemp+1,w
  4214  005D  0585               	andwf	5,f	;volatile
  4215                           
  4216                           ;SSD/SSD.c: 42:                         (PORTA&=~(1<<4));
  4217  005E  30EF               	movlw	239
  4218  005F  00FF               	movwf	btemp+1
  4219  0060  087F               	movf	btemp+1,w
  4220  0061  0585               	andwf	5,f	;volatile
  4221                           
  4222                           ;SSD/SSD.c: 43:                         (PORTA&=~(1<<5));
  4223  0062  30DF               	movlw	223
  4224  0063  00FF               	movwf	btemp+1
  4225  0064  087F               	movf	btemp+1,w
  4226  0065  0585               	andwf	5,f	;volatile
  4227  0066                     i1l2440:
  4228                           
  4229                           ;SSD/SSD.c: 45:                         (PORTD|=(1<<7));
  4230  0066  1788               	bsf	8,7	;volatile
  4231  0067                     i1l2442:
  4232                           
  4233                           ;SSD/SSD.c: 46:                         SSD_Display(Digit2);
  4234  0067  082B               	movf	_Digit2,w
  4235  0068  120A  118A  226F  120A  118A  	fcall	_SSD_Display
  4236                           
  4237                           ;SSD/SSD.c: 47:                         break;
  4238  006D  28B8               	goto	i1l2464
  4239  006E                     i1l2444:
  4240                           
  4241                           ;SSD/SSD.c: 49:                         if(Enable_Minutes==1)
  4242  006E  037C               	decf	_Enable_Minutes,w
  4243  006F  1D03               	btfss	3,2
  4244  0070  2872               	goto	u150_21
  4245  0071  2873               	goto	u150_20
  4246  0072                     u150_21:
  4247  0072  2874               	goto	i1l2448
  4248  0073                     u150_20:
  4249  0073                     i1l2446:
  4250                           
  4251                           ;SSD/SSD.c: 50:                         {;SSD/SSD.c: 51:                             (PO
      +                          RTA|=(1<<4));
  4252  0073  1605               	bsf	5,4	;volatile
  4253  0074                     i1l2448:
  4254                           
  4255                           ;SSD/SSD.c: 53:                         (PORTA&=~(1<<2));
  4256  0074  30FB               	movlw	251
  4257  0075  00FF               	movwf	btemp+1
  4258  0076  087F               	movf	btemp+1,w
  4259  0077  0585               	andwf	5,f	;volatile
  4260                           
  4261                           ;SSD/SSD.c: 54:                         (PORTA&=~(1<<3));
  4262  0078  30F7               	movlw	247
  4263  0079  00FF               	movwf	btemp+1
  4264  007A  087F               	movf	btemp+1,w
  4265  007B  0585               	andwf	5,f	;volatile
  4266                           
  4267                           ;SSD/SSD.c: 55:                         (PORTA&=~(1<<5));
  4268  007C  30DF               	movlw	223
  4269  007D  00FF               	movwf	btemp+1
  4270  007E  087F               	movf	btemp+1,w
  4271  007F  0585               	andwf	5,f	;volatile
  4272  0080                     i1l2450:
  4273                           
  4274                           ;SSD/SSD.c: 56:                         SSD_Display(Digit3);
  4275  0080  082A               	movf	_Digit3,w
  4276  0081  120A  118A  226F  120A  118A  	fcall	_SSD_Display
  4277                           
  4278                           ;SSD/SSD.c: 57:                         break;
  4279  0086  28B8               	goto	i1l2464
  4280  0087                     i1l2452:
  4281                           
  4282                           ;SSD/SSD.c: 59:                         if(Enable_Minutes==1)
  4283  0087  037C               	decf	_Enable_Minutes,w
  4284  0088  1D03               	btfss	3,2
  4285  0089  288B               	goto	u151_21
  4286  008A  288C               	goto	u151_20
  4287  008B                     u151_21:
  4288  008B  288D               	goto	i1l2456
  4289  008C                     u151_20:
  4290  008C                     i1l2454:
  4291                           
  4292                           ;SSD/SSD.c: 60:                         {;SSD/SSD.c: 61:                             (PO
      +                          RTA|=(1<<5));
  4293  008C  1685               	bsf	5,5	;volatile
  4294  008D                     i1l2456:
  4295                           
  4296                           ;SSD/SSD.c: 63:                         (PORTA&=~(1<<2));
  4297  008D  30FB               	movlw	251
  4298  008E  00FF               	movwf	btemp+1
  4299  008F  087F               	movf	btemp+1,w
  4300  0090  0585               	andwf	5,f	;volatile
  4301                           
  4302                           ;SSD/SSD.c: 64:                         (PORTA&=~(1<<3));
  4303  0091  30F7               	movlw	247
  4304  0092  00FF               	movwf	btemp+1
  4305  0093  087F               	movf	btemp+1,w
  4306  0094  0585               	andwf	5,f	;volatile
  4307                           
  4308                           ;SSD/SSD.c: 65:                         (PORTA&=~(1<<4));
  4309  0095  30EF               	movlw	239
  4310  0096  00FF               	movwf	btemp+1
  4311  0097  087F               	movf	btemp+1,w
  4312  0098  0585               	andwf	5,f	;volatile
  4313  0099                     i1l2458:
  4314                           
  4315                           ;SSD/SSD.c: 66:                         SSD_Display(Digit4);
  4316  0099  0829               	movf	_Digit4,w
  4317  009A  120A  118A  226F  120A  118A  	fcall	_SSD_Display
  4318                           
  4319                           ;SSD/SSD.c: 67:                         break;
  4320  009F  28B8               	goto	i1l2464
  4321  00A0                     i1l2462:
  4322  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4323  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4324  00A2  082E               	movf	_DigitSelector,w
  4325  00A3  00F3               	movwf	??_SSD_DigitSelector
  4326  00A4  01F4               	clrf	??_SSD_DigitSelector+1
  4327                           
  4328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4329                           ; Switch size 1, requested type "simple"
  4330                           ; Number of cases is 1, Range of values is 0 to 0
  4331                           ; switch strategies available:
  4332                           ; Name         Instructions Cycles
  4333                           ; simple_byte            4     3 (average)
  4334                           ; direct_byte           11     8 (fixed)
  4335                           ; jumptable            260     6 (fixed)
  4336                           ;	Chosen strategy is simple_byte
  4337  00A5  0874               	movf	??_SSD_DigitSelector+1,w
  4338  00A6  3A00               	xorlw	0	; case 0
  4339  00A7  1903               	skipnz
  4340  00A8  28AA               	goto	i1l2886
  4341  00A9  28B8               	goto	i1l2464
  4342  00AA                     i1l2886:
  4343                           
  4344                           ; Switch size 1, requested type "simple"
  4345                           ; Number of cases is 4, Range of values is 0 to 3
  4346                           ; switch strategies available:
  4347                           ; Name         Instructions Cycles
  4348                           ; simple_byte           13     7 (average)
  4349                           ; direct_byte           20     8 (fixed)
  4350                           ; jumptable            260     6 (fixed)
  4351                           ;	Chosen strategy is simple_byte
  4352  00AA  0873               	movf	??_SSD_DigitSelector,w
  4353  00AB  3A00               	xorlw	0	; case 0
  4354  00AC  1903               	skipnz
  4355  00AD  283B               	goto	i1l2426
  4356  00AE  3A01               	xorlw	1	; case 1
  4357  00AF  1903               	skipnz
  4358  00B0  2854               	goto	i1l2434
  4359  00B1  3A03               	xorlw	3	; case 2
  4360  00B2  1903               	skipnz
  4361  00B3  286E               	goto	i1l2444
  4362  00B4  3A01               	xorlw	1	; case 3
  4363  00B5  1903               	skipnz
  4364  00B6  2887               	goto	i1l2452
  4365  00B7  28B8               	goto	i1l2464
  4366  00B8                     i1l2464:
  4367                           
  4368                           ;SSD/SSD.c: 69:        DigitSelector=(DigitSelector+1)%4;
  4369  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4370  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4371  00BA  082E               	movf	_DigitSelector,w
  4372  00BB  3E01               	addlw	1
  4373  00BC  3903               	andlw	3
  4374  00BD  00FF               	movwf	btemp+1
  4375  00BE  087F               	movf	btemp+1,w
  4376  00BF  00AE               	movwf	_DigitSelector
  4377  00C0                     i1l373:
  4378  00C0  0008               	return
  4379  00C1                     __end_of_SSD_DigitSelector:
  4380                           
  4381                           	psect	text28
  4382  026F                     __ptext28:	
  4383 ;; *************** function _SSD_Display *****************
  4384 ;; Defined at:
  4385 ;;		line 78 in file "SSD/SSD.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  Number          1    wreg     unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  Number          1    2[COMMON] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4399 ;;      Params:         0       0       0       0       0
  4400 ;;      Locals:         1       0       0       0       0
  4401 ;;      Temps:          2       0       0       0       0
  4402 ;;      Totals:         3       0       0       0       0
  4403 ;;Total ram usage:        3 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_SSD_DigitSelector
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function _SSD_Display
  4414  026F                     _SSD_Display:
  4415                           
  4416                           ;incstack = 0
  4417 ;; hardware stack exceeded
  4418                           ; Regs used in _SSD_Display: [wreg-fsr0h+status,2+status,0]
  4419                           ;SSD_Display@Number stored from wreg
  4420  026F  00F2               	movwf	SSD_Display@Number
  4421  0270                     i1l2346:
  4422                           
  4423                           ;SSD/SSD.c: 78: void SSD_Display(uint8_t Number);SSD/SSD.c: 79: {;SSD/SSD.c: 81:    swit
      +                          ch(Number)
  4424  0270  2AA3               	goto	i1l2370
  4425  0271                     i1l2348:
  4426                           
  4427                           ;SSD/SSD.c: 84:         PORTD=0b0111111;
  4428  0271  303F               	movlw	63
  4429  0272  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0273  1303               	bcf	3,6	;RP1=0, select bank0
  4431  0274  0088               	movwf	8	;volatile
  4432                           
  4433                           ;SSD/SSD.c: 85:         break;
  4434  0275  2ACB               	goto	i1l388
  4435  0276                     i1l2350:
  4436                           
  4437                           ;SSD/SSD.c: 88:         PORTD=0b0000110;
  4438  0276  3006               	movlw	6
  4439  0277  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0278  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0279  0088               	movwf	8	;volatile
  4442                           
  4443                           ;SSD/SSD.c: 89:         break;
  4444  027A  2ACB               	goto	i1l388
  4445  027B                     i1l2352:
  4446                           
  4447                           ;SSD/SSD.c: 92:         PORTD=0b1011011;
  4448  027B  305B               	movlw	91
  4449  027C  1283               	bcf	3,5	;RP0=0, select bank0
  4450  027D  1303               	bcf	3,6	;RP1=0, select bank0
  4451  027E  0088               	movwf	8	;volatile
  4452                           
  4453                           ;SSD/SSD.c: 93:         break;
  4454  027F  2ACB               	goto	i1l388
  4455  0280                     i1l2354:
  4456                           
  4457                           ;SSD/SSD.c: 96:         PORTD=0b1001111;
  4458  0280  304F               	movlw	79
  4459  0281  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0282  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0283  0088               	movwf	8	;volatile
  4462                           
  4463                           ;SSD/SSD.c: 97:         break;
  4464  0284  2ACB               	goto	i1l388
  4465  0285                     i1l2356:
  4466                           
  4467                           ;SSD/SSD.c: 100:         PORTD=0b1100110;
  4468  0285  3066               	movlw	102
  4469  0286  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0287  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0288  0088               	movwf	8	;volatile
  4472                           
  4473                           ;SSD/SSD.c: 101:         break;
  4474  0289  2ACB               	goto	i1l388
  4475  028A                     i1l2358:
  4476                           
  4477                           ;SSD/SSD.c: 104:         PORTD=0b1101101;
  4478  028A  306D               	movlw	109
  4479  028B  1283               	bcf	3,5	;RP0=0, select bank0
  4480  028C  1303               	bcf	3,6	;RP1=0, select bank0
  4481  028D  0088               	movwf	8	;volatile
  4482                           
  4483                           ;SSD/SSD.c: 105:         break;
  4484  028E  2ACB               	goto	i1l388
  4485  028F                     i1l2360:
  4486                           
  4487                           ;SSD/SSD.c: 108:         PORTD=0b1111101;
  4488  028F  307D               	movlw	125
  4489  0290  1283               	bcf	3,5	;RP0=0, select bank0
  4490  0291  1303               	bcf	3,6	;RP1=0, select bank0
  4491  0292  0088               	movwf	8	;volatile
  4492                           
  4493                           ;SSD/SSD.c: 109:         break;
  4494  0293  2ACB               	goto	i1l388
  4495  0294                     i1l2362:
  4496                           
  4497                           ;SSD/SSD.c: 112:         PORTD=0b0000111;
  4498  0294  3007               	movlw	7
  4499  0295  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0296  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0297  0088               	movwf	8	;volatile
  4502                           
  4503                           ;SSD/SSD.c: 113:         break;
  4504  0298  2ACB               	goto	i1l388
  4505  0299                     i1l2364:
  4506                           
  4507                           ;SSD/SSD.c: 116:         PORTD=0b1111111;
  4508  0299  307F               	movlw	127
  4509  029A  1283               	bcf	3,5	;RP0=0, select bank0
  4510  029B  1303               	bcf	3,6	;RP1=0, select bank0
  4511  029C  0088               	movwf	8	;volatile
  4512                           
  4513                           ;SSD/SSD.c: 117:         break;
  4514  029D  2ACB               	goto	i1l388
  4515  029E                     i1l2366:
  4516                           
  4517                           ;SSD/SSD.c: 120:         PORTD=0b1101111;
  4518  029E  306F               	movlw	111
  4519  029F  1283               	bcf	3,5	;RP0=0, select bank0
  4520  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4521  02A1  0088               	movwf	8	;volatile
  4522                           
  4523                           ;SSD/SSD.c: 121:         break;
  4524  02A2  2ACB               	goto	i1l388
  4525  02A3                     i1l2370:
  4526  02A3  0872               	movf	SSD_Display@Number,w
  4527  02A4  00F0               	movwf	??_SSD_Display
  4528  02A5  01F1               	clrf	??_SSD_Display+1
  4529                           
  4530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4531                           ; Switch size 1, requested type "simple"
  4532                           ; Number of cases is 1, Range of values is 0 to 0
  4533                           ; switch strategies available:
  4534                           ; Name         Instructions Cycles
  4535                           ; simple_byte            4     3 (average)
  4536                           ; direct_byte           11     8 (fixed)
  4537                           ; jumptable            260     6 (fixed)
  4538                           ;	Chosen strategy is simple_byte
  4539  02A6  0871               	movf	??_SSD_Display+1,w
  4540  02A7  3A00               	xorlw	0	; case 0
  4541  02A8  1903               	skipnz
  4542  02A9  2AAB               	goto	i1l2888
  4543  02AA  2ACB               	goto	i1l388
  4544  02AB                     i1l2888:
  4545                           
  4546                           ; Switch size 1, requested type "simple"
  4547                           ; Number of cases is 10, Range of values is 0 to 9
  4548                           ; switch strategies available:
  4549                           ; Name         Instructions Cycles
  4550                           ; simple_byte           31    16 (average)
  4551                           ; direct_byte           38     8 (fixed)
  4552                           ; jumptable            260     6 (fixed)
  4553                           ;	Chosen strategy is simple_byte
  4554  02AB  0870               	movf	??_SSD_Display,w
  4555  02AC  3A00               	xorlw	0	; case 0
  4556  02AD  1903               	skipnz
  4557  02AE  2A71               	goto	i1l2348
  4558  02AF  3A01               	xorlw	1	; case 1
  4559  02B0  1903               	skipnz
  4560  02B1  2A76               	goto	i1l2350
  4561  02B2  3A03               	xorlw	3	; case 2
  4562  02B3  1903               	skipnz
  4563  02B4  2A7B               	goto	i1l2352
  4564  02B5  3A01               	xorlw	1	; case 3
  4565  02B6  1903               	skipnz
  4566  02B7  2A80               	goto	i1l2354
  4567  02B8  3A07               	xorlw	7	; case 4
  4568  02B9  1903               	skipnz
  4569  02BA  2A85               	goto	i1l2356
  4570  02BB  3A01               	xorlw	1	; case 5
  4571  02BC  1903               	skipnz
  4572  02BD  2A8A               	goto	i1l2358
  4573  02BE  3A03               	xorlw	3	; case 6
  4574  02BF  1903               	skipnz
  4575  02C0  2A8F               	goto	i1l2360
  4576  02C1  3A01               	xorlw	1	; case 7
  4577  02C2  1903               	skipnz
  4578  02C3  2A94               	goto	i1l2362
  4579  02C4  3A0F               	xorlw	15	; case 8
  4580  02C5  1903               	skipnz
  4581  02C6  2A99               	goto	i1l2364
  4582  02C7  3A01               	xorlw	1	; case 9
  4583  02C8  1903               	skipnz
  4584  02C9  2A9E               	goto	i1l2366
  4585  02CA  2ACB               	goto	i1l388
  4586  02CB                     i1l388:
  4587  02CB  0008               	return
  4588  02CC                     __end_of_SSD_Display:
  4589                           
  4590                           	psect	text29
  4591  0642                     __ptext29:	
  4592 ;; *************** function _Display_Normal *****************
  4593 ;; Defined at:
  4594 ;;		line 100 in file "Display/Display.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		None
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4608 ;;      Params:         0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0
  4611 ;;      Totals:         0       0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_Display_Update
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _Display_Normal
  4623  0642                     _Display_Normal:
  4624  0642                     i1l2390:	
  4625                           ;incstack = 0
  4626                           ; Regs used in _Display_Normal: []
  4627                           
  4628                           
  4629                           ;Display/Display.c: 102:   Enable_Minutes=1;
  4630  0642  01FC               	clrf	_Enable_Minutes
  4631  0643  0AFC               	incf	_Enable_Minutes,f
  4632                           
  4633                           ;Display/Display.c: 103:   Enable_Hours=1;
  4634  0644  1283               	bcf	3,5	;RP0=0, select bank0
  4635  0645  1303               	bcf	3,6	;RP1=0, select bank0
  4636  0646  01AD               	clrf	_Enable_Hours
  4637  0647  0AAD               	incf	_Enable_Hours,f
  4638  0648                     i1l202:
  4639  0648  0008               	return
  4640  0649                     __end_of_Display_Normal:
  4641                           
  4642                           	psect	text30
  4643  020C                     __ptext30:	
  4644 ;; *************** function _Display_Blink *****************
  4645 ;; Defined at:
  4646 ;;		line 59 in file "Display/Display.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  Times_Ms        2    6[COMMON] unsigned int 
  4649 ;;  _MODE_          1    8[COMMON] enum E879
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         3       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0
  4664 ;;      Totals:         3       0       0       0       0
  4665 ;;Total ram usage:        3 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    1
  4668 ;; This function calls:
  4669 ;;		___wmul
  4670 ;; This function is called by:
  4671 ;;		_Display_Update
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _Display_Blink
  4677  020C                     _Display_Blink:
  4678  020C                     i1l2392:	
  4679                           ;incstack = 0
  4680 ;; hardware stack exceeded
  4681                           ; Regs used in _Display_Blink: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4682                           
  4683                           
  4684                           ;Display/Display.c: 59: void Display_Blink(uint16_t Times_Ms,MODE_t _MODE_);Display/Disp
      +                          lay.c: 60: {;Display/Display.c: 61:     static uint16_t Counter=0;;Display/Display.c: 63
      +                          :         if(Counter*5==Times_Ms)
  4685  020C  1283               	bcf	3,5	;RP0=0, select bank0
  4686  020D  1303               	bcf	3,6	;RP1=0, select bank0
  4687  020E  0828               	movf	Display_Blink@Counter+1,w
  4688  020F  00F1               	movwf	___wmul@multiplier+1
  4689  0210  0827               	movf	Display_Blink@Counter,w
  4690  0211  00F0               	movwf	___wmul@multiplier
  4691  0212  3005               	movlw	5
  4692  0213  00F2               	movwf	___wmul@multiplicand
  4693  0214  3000               	movlw	0
  4694  0215  00F3               	movwf	___wmul@multiplicand+1
  4695  0216  120A  118A  2522  120A  118A  	fcall	___wmul
  4696  021B  0877               	movf	Display_Blink@Times_Ms+1,w
  4697  021C  0671               	xorwf	?___wmul+1,w
  4698  021D  1D03               	skipz
  4699  021E  2A21               	goto	u141_25
  4700  021F  0876               	movf	Display_Blink@Times_Ms,w
  4701  0220  0670               	xorwf	?___wmul,w
  4702  0221                     u141_25:
  4703  0221  1D03               	skipz
  4704  0222  2A24               	goto	u141_21
  4705  0223  2A25               	goto	u141_20
  4706  0224                     u141_21:
  4707  0224  2A66               	goto	i1l190
  4708  0225                     u141_20:
  4709  0225                     i1l2394:
  4710                           
  4711                           ;Display/Display.c: 64:         {;Display/Display.c: 65:             if(_MODE_==Minutes_
      +                          Mode)
  4712  0225  3002               	movlw	2
  4713  0226  0678               	xorwf	Display_Blink@_MODE_,w
  4714  0227  1D03               	btfss	3,2
  4715  0228  2A2A               	goto	u142_21
  4716  0229  2A2B               	goto	u142_20
  4717  022A                     u142_21:
  4718  022A  2A43               	goto	i1l2408
  4719  022B                     u142_20:
  4720  022B                     i1l2396:
  4721                           
  4722                           ;Display/Display.c: 66:             {;Display/Display.c: 67:                 if(Enable_M
      +                          inutes==1)
  4723  022B  037C               	decf	_Enable_Minutes,w
  4724  022C  1D03               	btfss	3,2
  4725  022D  2A2F               	goto	u143_21
  4726  022E  2A30               	goto	u143_20
  4727  022F                     u143_21:
  4728  022F  2A3C               	goto	i1l2404
  4729  0230                     u143_20:
  4730  0230                     i1l2398:
  4731                           
  4732                           ;Display/Display.c: 68:                 {;Display/Display.c: 69:                    Enab
      +                          le_Minutes=0;
  4733  0230  01FC               	clrf	_Enable_Minutes
  4734  0231                     i1l2400:
  4735                           
  4736                           ;Display/Display.c: 70:                    (PORTA&=~(1<<4)) ;
  4737  0231  30EF               	movlw	239
  4738  0232  00FF               	movwf	btemp+1
  4739  0233  087F               	movf	btemp+1,w
  4740  0234  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0235  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0236  0585               	andwf	5,f	;volatile
  4743  0237                     i1l2402:
  4744                           
  4745                           ;Display/Display.c: 71:                     (PORTA&=~(1<<5)) ;
  4746  0237  30DF               	movlw	223
  4747  0238  00FF               	movwf	btemp+1
  4748  0239  087F               	movf	btemp+1,w
  4749  023A  0585               	andwf	5,f	;volatile
  4750                           
  4751                           ;Display/Display.c: 72:                 }
  4752  023B  2A43               	goto	i1l2408
  4753  023C                     i1l2404:
  4754  023C  087C               	movf	_Enable_Minutes,w
  4755  023D  1D03               	btfss	3,2
  4756  023E  2A40               	goto	u144_21
  4757  023F  2A41               	goto	u144_20
  4758  0240                     u144_21:
  4759  0240  2A43               	goto	i1l2408
  4760  0241                     u144_20:
  4761  0241                     i1l2406:
  4762                           
  4763                           ;Display/Display.c: 74:                 {;Display/Display.c: 75:                    Enab
      +                          le_Minutes=1;
  4764  0241  01FC               	clrf	_Enable_Minutes
  4765  0242  0AFC               	incf	_Enable_Minutes,f
  4766  0243                     i1l2408:
  4767                           
  4768                           ;Display/Display.c: 79:             if(_MODE_==Hours_Mode)
  4769  0243  0378               	decf	Display_Blink@_MODE_,w
  4770  0244  1D03               	btfss	3,2
  4771  0245  2A47               	goto	u145_21
  4772  0246  2A48               	goto	u145_20
  4773  0247                     u145_21:
  4774  0247  2A60               	goto	i1l2422
  4775  0248                     u145_20:
  4776  0248                     i1l2410:
  4777                           
  4778                           ;Display/Display.c: 80:             {;Display/Display.c: 81:                 if(Enable_H
      +                          ours==1)
  4779  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4781  024A  032D               	decf	_Enable_Hours,w
  4782  024B  1D03               	btfss	3,2
  4783  024C  2A4E               	goto	u146_21
  4784  024D  2A4F               	goto	u146_20
  4785  024E                     u146_21:
  4786  024E  2A59               	goto	i1l2418
  4787  024F                     u146_20:
  4788  024F                     i1l2412:
  4789                           
  4790                           ;Display/Display.c: 82:                 {;Display/Display.c: 83:                    Enab
      +                          le_Hours=0;
  4791  024F  01AD               	clrf	_Enable_Hours
  4792  0250                     i1l2414:
  4793                           
  4794                           ;Display/Display.c: 84:                    (PORTA&=~(1<<2)) ;
  4795  0250  30FB               	movlw	251
  4796  0251  00FF               	movwf	btemp+1
  4797  0252  087F               	movf	btemp+1,w
  4798  0253  0585               	andwf	5,f	;volatile
  4799  0254                     i1l2416:
  4800                           
  4801                           ;Display/Display.c: 85:                     (PORTA&=~(1<<3)) ;
  4802  0254  30F7               	movlw	247
  4803  0255  00FF               	movwf	btemp+1
  4804  0256  087F               	movf	btemp+1,w
  4805  0257  0585               	andwf	5,f	;volatile
  4806                           
  4807                           ;Display/Display.c: 86:                 }
  4808  0258  2A60               	goto	i1l2422
  4809  0259                     i1l2418:
  4810  0259  082D               	movf	_Enable_Hours,w
  4811  025A  1D03               	btfss	3,2
  4812  025B  2A5D               	goto	u147_21
  4813  025C  2A5E               	goto	u147_20
  4814  025D                     u147_21:
  4815  025D  2A60               	goto	i1l2422
  4816  025E                     u147_20:
  4817  025E                     i1l2420:
  4818                           
  4819                           ;Display/Display.c: 88:                 {;Display/Display.c: 89:                    Enab
      +                          le_Hours=1;
  4820  025E  01AD               	clrf	_Enable_Hours
  4821  025F  0AAD               	incf	_Enable_Hours,f
  4822  0260                     i1l2422:
  4823                           
  4824                           ;Display/Display.c: 94:             Counter=1;
  4825  0260  3001               	movlw	1
  4826  0261  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0262  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0263  00A7               	movwf	Display_Blink@Counter
  4829  0264  3000               	movlw	0
  4830  0265  00A8               	movwf	Display_Blink@Counter+1
  4831  0266                     i1l190:	
  4832                           ;Display/Display.c: 95:         }
  4833                           
  4834                           
  4835                           ;Display/Display.c: 96:         Counter++;
  4836  0266  3001               	movlw	1
  4837  0267  1283               	bcf	3,5	;RP0=0, select bank0
  4838  0268  1303               	bcf	3,6	;RP1=0, select bank0
  4839  0269  07A7               	addwf	Display_Blink@Counter,f
  4840  026A  1803               	skipnc
  4841  026B  0AA8               	incf	Display_Blink@Counter+1,f
  4842  026C  3000               	movlw	0
  4843  026D  07A8               	addwf	Display_Blink@Counter+1,f
  4844  026E                     i1l199:
  4845  026E  0008               	return
  4846  026F                     __end_of_Display_Blink:
  4847                           
  4848                           	psect	text31
  4849  0522                     __ptext31:	
  4850 ;; *************** function ___wmul *****************
  4851 ;; Defined at:
  4852 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  multiplier      2    0[COMMON] unsigned int 
  4855 ;;  multiplicand    2    2[COMMON] unsigned int 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  product         2    4[COMMON] unsigned int 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  2    0[COMMON] unsigned int 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         4       0       0       0       0
  4868 ;;      Locals:         2       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0
  4870 ;;      Totals:         6       0       0       0       0
  4871 ;;Total ram usage:        6 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_Display_Blink
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function ___wmul
  4882  0522                     ___wmul:
  4883  0522                     i1l2376:	
  4884                           ;incstack = 0
  4885 ;; hardware stack exceeded
  4886                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4887                           
  4888  0522  01F4               	clrf	___wmul@product
  4889  0523  01F5               	clrf	___wmul@product+1
  4890  0524                     i1l2378:
  4891  0524  1C70               	btfss	___wmul@multiplier,0
  4892  0525  2D27               	goto	u137_21
  4893  0526  2D28               	goto	u137_20
  4894  0527                     u137_21:
  4895  0527  2D2E               	goto	i1l474
  4896  0528                     u137_20:
  4897  0528                     i1l2380:
  4898  0528  0872               	movf	___wmul@multiplicand,w
  4899  0529  07F4               	addwf	___wmul@product,f
  4900  052A  1803               	skipnc
  4901  052B  0AF5               	incf	___wmul@product+1,f
  4902  052C  0873               	movf	___wmul@multiplicand+1,w
  4903  052D  07F5               	addwf	___wmul@product+1,f
  4904  052E                     i1l474:
  4905  052E  3001               	movlw	1
  4906  052F                     u138_25:
  4907  052F  1003               	clrc
  4908  0530  0DF2               	rlf	___wmul@multiplicand,f
  4909  0531  0DF3               	rlf	___wmul@multiplicand+1,f
  4910  0532  3EFF               	addlw	-1
  4911  0533  1D03               	skipz
  4912  0534  2D2F               	goto	u138_25
  4913  0535                     i1l2382:
  4914  0535  3001               	movlw	1
  4915  0536                     u139_25:
  4916  0536  1003               	clrc
  4917  0537  0CF1               	rrf	___wmul@multiplier+1,f
  4918  0538  0CF0               	rrf	___wmul@multiplier,f
  4919  0539  3EFF               	addlw	-1
  4920  053A  1D03               	skipz
  4921  053B  2D36               	goto	u139_25
  4922  053C                     i1l2384:
  4923  053C  0870               	movf	___wmul@multiplier,w
  4924  053D  0471               	iorwf	___wmul@multiplier+1,w
  4925  053E  1D03               	btfss	3,2
  4926  053F  2D41               	goto	u140_21
  4927  0540  2D42               	goto	u140_20
  4928  0541                     u140_21:
  4929  0541  2D24               	goto	i1l2378
  4930  0542                     u140_20:
  4931  0542                     i1l2386:
  4932  0542  0875               	movf	___wmul@product+1,w
  4933  0543  00F1               	movwf	?___wmul+1
  4934  0544  0874               	movf	___wmul@product,w
  4935  0545  00F0               	movwf	?___wmul
  4936  0546                     i1l476:
  4937  0546  0008               	return
  4938  0547                     __end_of___wmul:
  4939                           
  4940                           	psect	text32
  4941  0661                     __ptext32:	
  4942 ;; *************** function _EXTI_SettingButton_CB *****************
  4943 ;; Defined at:
  4944 ;;		line 50 in file "Buttons/Buttons.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		None
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_ISR
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _EXTI_SettingButton_CB
  4973  0661                     _EXTI_SettingButton_CB:
  4974  0661                     i1l1432:	
  4975                           ;incstack = 0
  4976                           ; Regs used in _EXTI_SettingButton_CB: []
  4977                           
  4978                           
  4979                           ;Buttons/Buttons.c: 52:     ButtonsFlag.SettingButton_Flag=1;
  4980  0661  157D               	bsf	_ButtonsFlag,2
  4981  0662                     i1l99:
  4982  0662  0008               	return
  4983  0663                     __end_of_EXTI_SettingButton_CB:
  4984  000A                     
  4985                           	psect	functab
  4986  0024                     __pfunctab:
  4987  0024                     fptable:
  4988  0024  2824               	goto	fptable	;no entries
  4989  0025                     __i1fptable:
  4990  0025                     i1fptable:
  4991  0025  00FF               	movwf	(btemp+1)& (0+127)
  4992  0026  3000               	movlw	high i1fptable
  4993  0027  008A               	movwf	10
  4994  0028  087F               	movf	(btemp+1)& (0+127),w
  4995  0029  0782               	addwf	2,f
  4996  002A                     i1fpbase:
  4997  002A  282A               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  4998  002B                     fp__EXTI_SettingButton_CB:
  4999  002B  120A  118A  2E61   	ljmp	_EXTI_SettingButton_CB
  5000  002E                     fp__Scheduler_Task3:
  5001  002E  120A  118A  2E55   	ljmp	_Scheduler_Task3
  5002  0031                     fp__Scheduler_Task1:
  5003  0031  120A  118A  2E4F   	ljmp	_Scheduler_Task1
  5004  0034                     fp__Scheduler_Task2:
  5005  0034  120A  118A  2E2F   	ljmp	_Scheduler_Task2
  5006  0037                     fp__Timer0_CB:
  5007  0037  120A  118A  2DCB   	ljmp	_Timer0_CB
  5008  003A                     __end_of__i1fptable:
  5009  007E                     btemp	set	126	;btemp
  5010  007E                     wtemp0	set	126
  5011                           
  5012                           	psect	config
  5013                           
  5014                           ;Config register CONFIG @ 0x2007
  5015                           ;	Oscillator Selection bits
  5016                           ;	FOSC = HS, HS oscillator
  5017                           ;	Watchdog Timer Enable bit
  5018                           ;	WDTE = OFF, WDT disabled
  5019                           ;	Power-up Timer Enable bit
  5020                           ;	PWRTE = OFF, PWRT disabled
  5021                           ;	Brown-out Reset Enable bit
  5022                           ;	BOREN = OFF, BOR disabled
  5023                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5024                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5025                           ;	Data EEPROM Memory Code Protection bit
  5026                           ;	CPD = OFF, Data EEPROM code protection off
  5027                           ;	Flash Program Memory Write Enable bits
  5028                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5029                           ;	In-Circuit Debugger Mode bit
  5030                           ;	DEBUG = 0x1, unprogrammed default
  5031                           ;	Flash Program Memory Code Protection bit
  5032                           ;	CP = OFF, Code protection off
  5033  2007                     	org	8199
  5034  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     18      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Scheduler_Update$1065	const PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    memset@p1	PTR void  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 

    memset@p	PTR unsigned char  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 

    S333Interrupt_CbStruct_T$EXTI_CB	PTR FTN()void  size(1) Largest target is 1
		 -> EXTI_SettingButton_CB(), 

    Interrupt_CbStruct.EXTI_CB	PTR FTN()void  size(1) Largest target is 1
		 -> EXTI_SettingButton_CB(), 

    S333Interrupt_CbStruct_T$Timer_CB	PTR FTN()void  size(1) Largest target is 1
		 -> Timer0_CB(), 

    Interrupt_CbStruct.Timer_CB	PTR FTN()void  size(1) Largest target is 1
		 -> Timer0_CB(), 

    S94Tasks_T$Task	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    Tasks.Task	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    sp__memset	PTR void  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _Scheduler_Update->___llmod
    ___llmod->___bmul
    _Scheduler_Task3->_Clock_Update
    _Clock_Update->___awdiv
    _Buttons_Update->___awmod
    _Scheduler_Task1->_Display_Update
    _Display_Update->_Display_Blink
    _SSD_DigitSelector->_SSD_Display
    _Display_Blink->___wmul

Critical Paths under _main in BANK0

    _Scheduler_Init->_memset
    _Buttons_Init->_memset

Critical Paths under _ISR in BANK0

    _Timer0_CB->_Scheduler_Update
    _Scheduler_Update->___llmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1870
                       _Buttons_Init
                         _Clock_Init
                       _Display_Init
                          _GPIO_Init
                   _ModeManager_Init
                     _Scheduler_Init
                         _Timer_Init
                        _Timer_Start
 ---------------------------------------------------------------------------------
 (1) _Timer_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Scheduler_Init                                       0     0      0     935
                             _memset
 ---------------------------------------------------------------------------------
 (1) _ModeManager_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buttons_Init                                         0     0      0     935
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     935
                                             12 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0    4210
                                              8 BANK0      4     4      0
              _EXTI_SettingButton_CB *
                          _Timer0_CB *
 ---------------------------------------------------------------------------------
 (4) _Timer0_CB                                            0     0      0    4210
                   _Scheduler_Update
 ---------------------------------------------------------------------------------
 (5) _Scheduler_Update                                     7     7      0    4210
                                              1 BANK0      7     7      0
                    _Scheduler_Task1 *
                    _Scheduler_Task2 *
                    _Scheduler_Task3 *
                             ___bmul
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8      49
                                              3 COMMON     9     1      8
                                              0 BANK0      1     1      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     210
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task3                                      0     0      0    1778
                       _Clock_Update
 ---------------------------------------------------------------------------------
 (7) _Clock_Update                                         2     2      0    1778
                                              8 COMMON     2     2      0
                 _Clock_Hour_Setting
              _Clock_Minutes_Setting
                       _Clock_Normal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     805
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _Clock_Normal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Clock_Minutes_Setting                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Clock_Hour_Setting                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task2                                      0     0      0     973
                     _Buttons_Update
                 _ModeManager_Update
 ---------------------------------------------------------------------------------
 (7) _ModeManager_Update                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Buttons_Update                                       0     0      0     973
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     973
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task1                                      0     0      0    1020
                     _Display_Update
 ---------------------------------------------------------------------------------
 (7) _Display_Update                                       2     2      0    1020
                                              9 COMMON     2     2      0
                      _Display_Blink
                     _Display_Normal
                  _SSD_DigitSelector
 ---------------------------------------------------------------------------------
 (8) _SSD_DigitSelector                                    2     2      0      31
                                              3 COMMON     2     2      0
                        _SSD_Display
 ---------------------------------------------------------------------------------
 (9) _SSD_Display                                          3     3      0      31
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _Display_Normal                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Display_Blink                                        3     0      3     989
                                              6 COMMON     3     0      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     536
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _EXTI_SettingButton_CB                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_Init
     _memset
   _Clock_Init
   _Display_Init
   _GPIO_Init
   _ModeManager_Init
   _Scheduler_Init
     _memset
   _Timer_Init
   _Timer_Start

 _ISR (ROOT)
   _EXTI_SettingButton_CB *
   _Timer0_CB *
     _Scheduler_Update
       _Scheduler_Task1 *
         _Display_Update
           _Display_Blink
             ___wmul
           _Display_Normal
           _SSD_DigitSelector
             _SSD_Display
       _Scheduler_Task2 *
         _Buttons_Update
           ___awmod
         _ModeManager_Update
       _Scheduler_Task3 *
         _Clock_Update
           _Clock_Hour_Setting
           _Clock_Minutes_Setting
           _Clock_Normal
           ___awdiv
           ___awmod
       ___bmul *
       ___llmod *
         ___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 22 19:40:31 2020

                             pc 0002                  ___bmul@product 0071                              l30 04D2  
                            l43 0620                              l29 04D2                              l64 062E  
                            l67 0660                              l89 04FB                    ___awdiv@sign 0075  
                            fsr 0004             ___wmul@multiplicand 0072                             l113 056E  
                           l301 064E                             l117 056F                             l109 056B  
                           l152 058D                             l219 065E                             l177 05CA  
                           l928 05AF                             _ISR 0449                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0075                            ?_ISR 0070  
                          l2000 062C                            l2002 062D                            l2006 065F  
                          l2200 04FA                            l2202 0611                            l2210 04B4  
                          l2220 04CD                            l2212 04B9                            l2214 04BE  
                          l2216 04C3                            l2208 04AA                            l2218 04C8  
                          l2172 0591                            l2174 0596          ?_Clock_Minutes_Setting 0070  
                          l2176 059D                            l2178 05A1                            l2194 04D6  
                          l2196 04F6                            l2198 04F9                            l1970 0580  
                          l1962 0570                            l1954 056B                            l1980 05B0  
                          l1972 0584                            l1964 0574                            l1982 05B6  
                          l1966 0578                            l1984 0649                            l1976 0585  
                          l1968 057C                            l1978 0589                            l1986 065B  
                          l1996 0621                            l1998 0628                            u1320 05AF  
                          u1321 05AE                            _MODE 0031                            i1l70 05E0  
                          i1l49 020B                            i1l96 03D0                            i1l99 0662  
                          _TMR0 0001                            _Tick 0020                            _main 04AA  
                          btemp 007E                            start 0012              __size_of_GPIO_Init 0023  
             ___bmul@multiplier 0072                ??_Scheduler_Init 004D                           ??_ISR 0043  
                    _Clock_Init 0649            __end_of_Clock_Normal 056B            __end_of_Clock_Update 0140  
                         ?_main 0070                 __end_of___awdiv 01A7                 __end_of___awmod 0325  
               ___awdiv@divisor 0070                 __end_of___llmod 037B                           i1l202 0648  
                         i1l224 0501                           i1l225 0520                           i1l314 056A  
                         i1l228 0521                           i1l324 04A9                           i1l308 013F  
                         i1l500 05F5                           i1l317 0492                           i1l245 046D  
                         i1l190 0266                           i1l334 0448                           i1l327 042F  
                         i1l272 0654                           i1l185 0412                           i1l275 0639  
                         i1l373 00C0                           i1l278 065A                           i1l199 026E  
                         i1l640 0324                           i1l474 052E                           i1l627 01A6  
                         i1l476 0546                           i1l388 02CB                           i1l696 037A  
               ___awdiv@counter 0074                           _PORTA 0005                           _PORTB 0006  
                         _PORTD 0008                           _TRISA 0085                           _TRISB 0086  
                         _TRISD 0088                           _Clock 0024                _ModeManager_Init 065B  
                         _Tasks 0606      __end_of_ModeManager_Update 0522                           fpbase 0000  
         Display_Blink@Times_Ms 0076                   ?_Buttons_Init 0070                           pclath 000A  
                         status 0003                           wtemp0 007E         __size_of_Buttons_Update 0056  
               __initialization 0015               ??_Scheduler_Task1 007B               ??_Scheduler_Task2 0076  
             ??_Scheduler_Task3 007A                    __end_of_main 04D6  Buttons_Update@Debounce_Counter 002F  
                        ??_main 004D               __end_of_GPIO_Init 058E            __end_of_Display_Init 05CB  
              ___llmod@dividend 0077                ___awdiv@dividend 0072                  ??_Buttons_Init 004D  
             SSD_Display@Number 0072                          i1l1432 0661                          i1l2400 0231  
                        u200_20 0372                          u200_21 0371                          i1l2410 0248  
                        i1l2402 0237                          i1l2420 025E                          i1l2412 024F  
                        i1l2404 023C                          i1l2500 0490                          i1l2414 0250  
                        i1l2422 0260                          i1l2406 0241                          i1l2350 0276  
                        i1l2430 0041                          i1l2510 04A8                          i1l2502 0496  
                        i1l2416 0254                          i1l2408 0243                          i1l2360 028F  
                        i1l2352 027B                          i1l2440 0066                          i1l2432 004D  
                        i1l2424 003A                          i1l2600 02F1                          i1l2504 049A  
                        i1l2520 0427                          i1l2512 0413                          u201_20 01E7  
                        u201_21 01E6                          i1l2418 0259                          i1l2362 0294  
                        i1l2354 0280                          i1l2370 02A3                          i1l2346 0270  
                        i1l2450 0080                          i1l2442 0067                          i1l2434 0054  
                        i1l2426 003B                          i1l2610 0310                          i1l2602 02F5  
                        i1l2506 04A1                          i1l2530 043E                          i1l2522 0429  
                        i1l2514 0417                          i1l2380 0528                          i1l2364 0299  
                        i1l2356 0285                          i1l2348 0271                          i1l2452 0087  
                        i1l2444 006E                          i1l2436 0059                          i1l2428 0040  
                        i1l2604 02F9                          i1l2612 0316                          i1l2620 037B  
                        i1l2508 04A6                          i1l2532 0440                          i1l2524 042D  
                        i1l2516 041B                          i1l2540 0141                          i1l2700 05E2  
                        i1l2382 0535                          i1l2390 0642                          i1l2366 029E  
                        i1l2358 028A                          i1l2454 008C                          i1l2446 0073  
                        i1l2438 005A                          i1l2462 00A0                          i1l2614 031B  
                        i1l2606 0303                          i1l2630 03B3                          i1l2622 038E  
                        i1l2534 0445                          i1l2526 0433                          i1l2518 0423  
                        i1l2550 0155                          i1l2542 0145                          i1l2710 05EF  
                        i1l2702 05E3                          i1l2384 053C                          i1l2376 0522  
                        i1l2392 020C                          i1l2456 008D                          i1l2448 0074  
                        i1l2464 00B8                          i1l2640 03D1                          i1l2616 0320  
                        i1l2608 0309                          i1l2632 03BA                          i1l2624 03A4  
                        i1l2536 0447                          i1l2528 0437                          i1l2480 0558  
                        i1l2472 0547                          i1l2560 016B                          i1l2552 0159  
                        i1l2544 014A                          i1l2712 05F4                          i1l2704 05E7  
                        i1l2720 0332                          u202_20 020B                          u202_21 020A  
                        i1l2386 0542                          i1l2378 0524                          i1l2394 0225  
                        i1l2458 0099                          i1l2650 03F3                          i1l2642 03D2  
                        i1l2634 03BF                          i1l2626 03A9                          i1l2490 047A  
                        i1l2482 055E                          i1l2474 054D                          i1l2570 018B  
                        i1l2562 016F                          i1l2554 015B                          i1l2546 014C  
                        i1l2538 0140                          i1l2706 05EB                          i1l2730 0363  
                        i1l2722 033B                          i1l2396 022B                          i1l2644 03D8  
                        i1l2636 03C4                          i1l2628 03AE                          i1l2492 047E  
                        i1l2484 0562                          i1l2476 0553                          i1l2572 0192  
                        i1l2564 0173                          i1l2556 0161                          i1l2548 0150  
                        i1l2708 05ED                          i1l2732 036C                          i1l2724 033F  
                        i1l2716 0325                          i1l2398 0230                          i1l2646 03E3  
                        i1l2654 03F8                          i1l2590 02D8                          i1l2582 02CC  
                        i1l2638 03C9                          i1l2662 04FC                          i1l2494 0482  
                        i1l2486 0563                          i1l2478 0557                          i1l2566 0184  
                        i1l2558 0164                          i1l2574 0198                          i1l2726 0343  
                        i1l2718 032D                          i1l2734 0372                          i1l2750 0205  
                        i1l2648 03E6                          i1l2656 040D                          i1l2592 02DC  
                        i1l2584 02CD                          i1l2672 050B                          i1l2496 048A  
                        i1l2488 0569                          i1l2576 019D                          i1l2568 018A  
                        i1l2680 00C7                          i1l2728 0355                          i1l2744 01AA  
                        i1l2752 05CB                          i1l2760 044F                          u203_20 044D  
                        u203_21 044C                          i1l2594 02E1                          i1l2586 02D1  
                        i1l2666 0504                          i1l2498 048C                          i1l2578 01A2  
                        i1l2682 00CD                          i1l2746 01E7                          i1l2738 01A7  
                        i1l2754 05DB                          i1l2762 0450                          i1l2596 02E7  
                        i1l2588 02D6                          i1l2668 0509                          i1l2748 01FF  
                        i1l2764 045C                          i1l2756 0449                          i1l2598 02EA  
                        i1l2686 00D3                          i1l2678 00C1                          i1l2694 064F  
                        i1l2766 0460                          i1l2758 044D                          u140_20 0542  
                        i1l2880 00DD                          i1l2688 00E5                          i1l2696 062F  
                        i1l2768 0461                          u204_20 0460                          u140_21 0541  
                        u204_21 045F                          i1l2882 0515                          i1l2698 0655  
                        i1l2884 0402                          i1l2886 00AA                          u141_20 0225  
                        i1l2888 02AB                          u141_21 0224                          u141_25 0221  
                        u142_20 022B                          u150_20 0073                          u142_21 022A  
                        u150_21 0072                          _INTEDG 040E                          u143_20 0230  
                        u151_20 008C                          u143_21 022F                          u151_21 008B  
                        u144_20 0241                          u160_20 04A1                          u152_20 0553  
                        u144_21 0240                          u160_21 04A0                          u152_21 0552  
                        u137_20 0528                          u145_20 0248                          u161_20 0417  
                        u153_20 055E                          u137_21 0527                          u145_21 0247  
                        u161_21 0416                          u153_21 055D                          u146_20 024F  
                        u162_20 041B                          u154_20 0569                          u146_21 024E  
                        u162_21 041A                          u154_21 0568                          u138_25 052F  
                        u170_25 0165                          u147_20 025E                          u155_20 047E  
                        u163_20 0423                          u171_20 0173                          u147_21 025D  
                        u155_21 047D                          u163_21 0422                          u171_21 0172  
                        u139_25 0536                          u148_20 0040                          u156_20 0482  
                        u164_20 0433                          u148_21 003F                          u156_21 0481  
                        u164_21 0432                          u180_25 02EB                          u172_25 0174  
                        u149_20 0059                          u181_20 02F9                          u157_20 048A  
                        u165_20 0437                          u173_20 0184                          u149_21 0058  
                        u181_21 02F8                          u157_21 0489                          u165_21 0436  
                        u173_21 0183                          u173_25 0180                          u182_20 0303  
                        u190_20 03C4                          u158_20 0496                          u166_20 043E  
                        u182_21 0302                          u190_21 03C3                          u158_21 0495  
                        u166_21 043D                          u182_25 02FF                          u174_25 018C  
                        u191_20 03C9                          u159_20 049A                          u175_20 0198  
                        u167_20 0145                          u191_21 03C8                          u159_21 0499  
                        u175_21 0197                          u167_21 0144                          u183_25 030A  
                        u184_20 0316                          u192_20 0500                          u176_20 019D  
                        u168_20 0150                          u184_21 0315                          u192_21 04FF  
                        u176_21 019C                          u168_21 014F                          u185_20 031B  
                        u177_20 02D1                          u169_20 0161                          u193_20 05E7  
                        u185_21 031A                          u177_21 02D0                          u169_21 0160  
                        u193_21 05E6                          u178_20 02DC                          u186_20 03A9  
                        u194_20 05F4                          u178_21 02DB                          u186_21 03A8  
                        u194_21 05F3                          u179_20 02E7                          u187_20 03AE  
                        u195_20 032D                          u179_21 02E6                          u187_21 03AD  
                        u195_21 032C                          u188_20 03B3                          u188_21 03B2  
                        u196_25 0334                          u189_20 03BF                          u197_20 0343  
                        u189_21 03BE                          u197_21 0342                          u198_20 0355  
                        u198_21 0354                          u198_25 0351                          u199_25 0364  
                    __i1fptable 0025                          _TMR0IF 005A           _EXTI_SettingButton_CB 0661  
                        _Digit1 002C                          _Digit2 002B                          _Digit3 002A  
                        _Digit4 0029                          ___bmul 05E1                  _Enable_Minutes 007C  
                        ___wmul 0522                       ??___awdiv 0074                       ??___awmod 0074  
                     ??___llmod 007B                      _Timer_Init 0621                     ?_Clock_Init 0070  
                        _memset 058E                ___awdiv@quotient 0076                 ___awmod@divisor 0070  
            __size_of_Timer0_CB 0016                 ___awmod@counter 0074                   ??_Timer_Start 0047  
                        fptable 0024                          fptotal 0000                          saved_w 007E  
       __end_of__initialization 0020             ___bmul@multiplicand 0070           __size_of_Clock_Normal 0024  
                  ?_SSD_Display 0070           __size_of_Clock_Update 007F             Display_Blink@_MODE_ 0078  
                __pcstackCOMMON 0070               ?_Scheduler_Update 0070                   __end_of_Tasks 060F  
            ??_Scheduler_Update 003C                     _ButtonsFlag 007D     __size_of_Clock_Hour_Setting 0030  
                _OPTION_REGbits 0081         ??_Clock_Minutes_Setting 0070                    _Enable_Hours 002D  
           __end_of_Timer_Start 0661                      __pbssBANK0 0020                    _Clock_Normal 0547  
           __size_of_Clock_Init 0006          ?_EXTI_SettingButton_CB 0070                    _Clock_Update 00C1  
             __end_of_Timer0_CB 05E1                  _Buttons_Update 037B        __end_of_ModeManager_Init 065F  
                    __pmaintext 04AA           __end_of_Display_Blink 026F                         ?___bmul 0070  
                       ?___wmul 0070                      __pintentry 0004                     ?_Timer_Init 0070  
          __end_of_Buttons_Init 04FC                         ?_memset 0047           __size_of_Display_Init 001B  
                    __stringtab 0600                 _Scheduler_Task1 064F                 _Scheduler_Task2 062F  
               _Scheduler_Task3 0655               Scheduler_Update@i 0042                         i1fpbase 002A  
                       _Display 0030          __end_of_Buttons_Update 03D1              _ModeManager_Update 04FC  
                  _Display_Init 05B0                 __size_of___bmul 0015                         ___awdiv 0140  
                       ___awmod 02CC                 __size_of___wmul 0025                         ___llmod 0325  
           ?_ModeManager_Update 0070                 __size_of_memset 0022                         __ptext1 065F  
                       __ptext2 0621                         __ptext3 0611                         __ptext4 065B  
                       __ptext5 056B                         __ptext6 05B0                         __ptext7 0649  
                       __ptext8 04D6                         __ptext9 058E         __size_of_Display_Normal 0007  
           __size_of__i1fptable 0015         __size_of_Display_Update 0042                    __size_of_ISR 0031  
                   _Timer_Start 065F                ___awmod@dividend 0072                         clrloop0 063B  
                     _GPIO_Init 056B            end_of_initialization 0020            ??_ModeManager_Update 0070  
           __size_of_Timer_Init 000E                         memset@c 0047                         memset@n 0049  
                       memset@p 004B                 ?_Buttons_Update 0070            __size_of_SSD_Display 005D  
                  ??_Clock_Init 0047         __size_of_Scheduler_Init 0010         __end_of_Scheduler_Task1 0655  
       __end_of_Scheduler_Task2 063A         __end_of_Scheduler_Task3 065B                      ?_GPIO_Init 0070  
            __end_of_Clock_Init 064F           __size_of_Buttons_Init 0026                   _DigitSelector 002E  
                __end_of___bmul 05F6            Display_Blink@Counter 0027                  __end_of___wmul 0547  
                __end_of_memset 05B0             start_initialization 0015                     __end_of_ISR 047A  
     __size_of_Scheduler_Update 0065         ??_EXTI_SettingButton_CB 0070  __size_of_Clock_Minutes_Setting 0036  
 __end_of_Clock_Minutes_Setting 0449                    _Buttons_Init 04D6                 ___llmod@divisor 0073  
               ___llmod@counter 003B                       _Task_Flag 0038                       _Timer0_CB 05CB  
             ?_ModeManager_Init 0070                        ??___bmul 0071                        ??___wmul 0074  
                  ??_Timer_Init 0047              ??_ModeManager_Init 0047                        ??_memset 004B  
    __end_of_Clock_Hour_Setting 04AA                  _Display_Normal 0642                  _Display_Update 03D1  
            __end_of__i1fptable 003A                     __pbssCOMMON 007C                       ___latbits 0002  
                 __pcstackBANK0 003B                ?_Scheduler_Task1 0070                ?_Scheduler_Task2 0070  
              ?_Scheduler_Task3 0070                     ??_GPIO_Init 0047              __end_of_Timer_Init 062F  
                    ?_Timer0_CB 0070      __end_of_Interrupt_CbStruct 0611                       __pfunctab 0024  
                      ?___awdiv 0070                        ?___awmod 0070                        ?___llmod 0073  
        __end_of_Display_Normal 0649               _SSD_DigitSelector 003A          __end_of_Display_Update 0413  
                     __pstrings 0600              ?_SSD_DigitSelector 0070                    ?_Timer_Start 0070  
                _Scheduler_Init 0611             ??_SSD_DigitSelector 0073          __size_of_Display_Blink 0063  
              ??_Buttons_Update 0076               interrupt_function 0004                  ___wmul@product 0074  
                     clear_ram0 063A       __end_of_SSD_DigitSelector 00C1                 ?_Display_Normal 0070  
               ?_Display_Update 0070          __end_of_Scheduler_Init 0621                     __stringbase 0605  
             ___wmul@multiplier 0070               _Debounce_UpButton 0035                _Scheduler_Update 01A7  
                      i1fptable 0025                        i1fptotal 000A     __size_of_ModeManager_Update 0026  
                 ??_SSD_Display 0070                     ??_Timer0_CB 007C                   _Display_Blink 020C  
              __size_of___awdiv 0067                __size_of___awmod 0059                __size_of___llmod 0056  
               ?_Scheduler_Init 0070              __end_of__stringtab 0606                        __ptext10 0449  
                      __ptext11 05CB                        __ptext20 0547                        __ptext12 01A7  
                      __ptext21 0413                        __ptext13 0325                        __ptext30 020C  
                      __ptext22 047A                        __ptext14 05E1                        __ptext31 0522  
                      __ptext23 04FC                        __ptext15 062F                        __ptext32 0661  
                      __ptext24 037B                        __ptext16 064F                        __ptext25 02CC  
                      __ptext17 0655                        __ptext26 03D1                        __ptext18 00C1  
                      __ptext27 003A                        __ptext19 0140                        __ptext28 026F  
                      __ptext29 0642  __size_of_EXTI_SettingButton_CB 0002                   ?_Clock_Normal 0070  
 __end_of_EXTI_SettingButton_CB 0663                   ?_Clock_Update 0070                   __size_of_main 002C  
                ?_Display_Blink 0076      __size_of_SSD_DigitSelector 0087             __end_of_SSD_Display 02CC  
                    _INTCONbits 000B       __size_of_ModeManager_Init 0004            __size_of_Timer_Start 0002  
                      memset@p1 004C                    fp__Timer0_CB 0037              _Clock_Hour_Setting 047A  
                ??_Clock_Normal 0070                  ??_Clock_Update 0078                        intlevel1 0024  
         _Clock_Minutes_Setting 0413             ?_Clock_Hour_Setting 0070                       stringcode 0600  
                 ?_Display_Init 0070            ??_Clock_Hour_Setting 0070              _Interrupt_CbStruct 060F  
                      stringdir 0600                        stringtab 0600        __size_of_Scheduler_Task1 0006  
      __size_of_Scheduler_Task2 000B        __size_of_Scheduler_Task3 0006              fp__Scheduler_Task1 0031  
            fp__Scheduler_Task2 0034              fp__Scheduler_Task3 002E             _Debounce_DownButton 0032  
               ??_Display_Blink 0079        fp__EXTI_SettingButton_CB 002B                ??_Display_Normal 0070  
              ??_Display_Update 0079                  ??_Display_Init 0047                     _SSD_Display 026F  
      __end_of_Scheduler_Update 020C  
