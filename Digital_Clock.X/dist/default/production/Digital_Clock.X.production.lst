

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 22 17:29:12 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	functab,global,class=ENTRY,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0088                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0098                     	;# 
   312  0099                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0000                     	;# 
   444  0001                     	;# 
   445  0002                     	;# 
   446  0003                     	;# 
   447  0004                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  0007                     	;# 
   451  0008                     	;# 
   452  0009                     	;# 
   453  000A                     	;# 
   454  000B                     	;# 
   455  000C                     	;# 
   456  000D                     	;# 
   457  000E                     	;# 
   458  000E                     	;# 
   459  000F                     	;# 
   460  0010                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0013                     	;# 
   464  0014                     	;# 
   465  0015                     	;# 
   466  0015                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001D                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  0081                     	;# 
   479  0085                     	;# 
   480  0086                     	;# 
   481  0087                     	;# 
   482  0088                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0094                     	;# 
   491  0098                     	;# 
   492  0099                     	;# 
   493  009C                     	;# 
   494  009D                     	;# 
   495  009E                     	;# 
   496  009F                     	;# 
   497  010C                     	;# 
   498  010D                     	;# 
   499  010E                     	;# 
   500  010F                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  000E                     	;# 
   519  000F                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0013                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001D                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  0081                     	;# 
   539  0085                     	;# 
   540  0086                     	;# 
   541  0087                     	;# 
   542  0088                     	;# 
   543  0089                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0094                     	;# 
   551  0098                     	;# 
   552  0099                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0088                     	;# 
   603  0089                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  009F                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  018C                     	;# 
   622  018D                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  000E                     	;# 
   639  000F                     	;# 
   640  0010                     	;# 
   641  0011                     	;# 
   642  0012                     	;# 
   643  0013                     	;# 
   644  0014                     	;# 
   645  0015                     	;# 
   646  0015                     	;# 
   647  0016                     	;# 
   648  0017                     	;# 
   649  0018                     	;# 
   650  0019                     	;# 
   651  001A                     	;# 
   652  001B                     	;# 
   653  001B                     	;# 
   654  001C                     	;# 
   655  001D                     	;# 
   656  001E                     	;# 
   657  001F                     	;# 
   658  0081                     	;# 
   659  0085                     	;# 
   660  0086                     	;# 
   661  0087                     	;# 
   662  0088                     	;# 
   663  0089                     	;# 
   664  008C                     	;# 
   665  008D                     	;# 
   666  008E                     	;# 
   667  0091                     	;# 
   668  0092                     	;# 
   669  0093                     	;# 
   670  0094                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009C                     	;# 
   674  009D                     	;# 
   675  009E                     	;# 
   676  009F                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010F                     	;# 
   681  018C                     	;# 
   682  018D                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000D                     	;# 
   697  000E                     	;# 
   698  000E                     	;# 
   699  000F                     	;# 
   700  0010                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0013                     	;# 
   704  0014                     	;# 
   705  0015                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  001D                     	;# 
   716  001E                     	;# 
   717  001F                     	;# 
   718  0081                     	;# 
   719  0085                     	;# 
   720  0086                     	;# 
   721  0087                     	;# 
   722  0088                     	;# 
   723  0089                     	;# 
   724  008C                     	;# 
   725  008D                     	;# 
   726  008E                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0093                     	;# 
   730  0094                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009C                     	;# 
   734  009D                     	;# 
   735  009E                     	;# 
   736  009F                     	;# 
   737  010C                     	;# 
   738  010D                     	;# 
   739  010E                     	;# 
   740  010F                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  0000                     	;# 
   744  0001                     	;# 
   745  0002                     	;# 
   746  0003                     	;# 
   747  0004                     	;# 
   748  0005                     	;# 
   749  0006                     	;# 
   750  0007                     	;# 
   751  0008                     	;# 
   752  0009                     	;# 
   753  000A                     	;# 
   754  000B                     	;# 
   755  000C                     	;# 
   756  000D                     	;# 
   757  000E                     	;# 
   758  000E                     	;# 
   759  000F                     	;# 
   760  0010                     	;# 
   761  0011                     	;# 
   762  0012                     	;# 
   763  0013                     	;# 
   764  0014                     	;# 
   765  0015                     	;# 
   766  0015                     	;# 
   767  0016                     	;# 
   768  0017                     	;# 
   769  0018                     	;# 
   770  0019                     	;# 
   771  001A                     	;# 
   772  001B                     	;# 
   773  001B                     	;# 
   774  001C                     	;# 
   775  001D                     	;# 
   776  001E                     	;# 
   777  001F                     	;# 
   778  0081                     	;# 
   779  0085                     	;# 
   780  0086                     	;# 
   781  0087                     	;# 
   782  0088                     	;# 
   783  0089                     	;# 
   784  008C                     	;# 
   785  008D                     	;# 
   786  008E                     	;# 
   787  0091                     	;# 
   788  0092                     	;# 
   789  0093                     	;# 
   790  0094                     	;# 
   791  0098                     	;# 
   792  0099                     	;# 
   793  009C                     	;# 
   794  009D                     	;# 
   795  009E                     	;# 
   796  009F                     	;# 
   797  010C                     	;# 
   798  010D                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  0000                     	;# 
   804  0001                     	;# 
   805  0002                     	;# 
   806  0003                     	;# 
   807  0004                     	;# 
   808  0005                     	;# 
   809  0006                     	;# 
   810  0007                     	;# 
   811  0008                     	;# 
   812  0009                     	;# 
   813  000A                     	;# 
   814  000B                     	;# 
   815  000C                     	;# 
   816  000D                     	;# 
   817  000E                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0014                     	;# 
   825  0015                     	;# 
   826  0015                     	;# 
   827  0016                     	;# 
   828  0017                     	;# 
   829  0018                     	;# 
   830  0019                     	;# 
   831  001A                     	;# 
   832  001B                     	;# 
   833  001B                     	;# 
   834  001C                     	;# 
   835  001D                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  0081                     	;# 
   839  0085                     	;# 
   840  0086                     	;# 
   841  0087                     	;# 
   842  0088                     	;# 
   843  0089                     	;# 
   844  008C                     	;# 
   845  008D                     	;# 
   846  008E                     	;# 
   847  0091                     	;# 
   848  0092                     	;# 
   849  0093                     	;# 
   850  0094                     	;# 
   851  0098                     	;# 
   852  0099                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  009F                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  018C                     	;# 
   862  018D                     	;# 
   863  0000                     	;# 
   864  0001                     	;# 
   865  0002                     	;# 
   866  0003                     	;# 
   867  0004                     	;# 
   868  0005                     	;# 
   869  0006                     	;# 
   870  0007                     	;# 
   871  0008                     	;# 
   872  0009                     	;# 
   873  000A                     	;# 
   874  000B                     	;# 
   875  000C                     	;# 
   876  000D                     	;# 
   877  000E                     	;# 
   878  000E                     	;# 
   879  000F                     	;# 
   880  0010                     	;# 
   881  0011                     	;# 
   882  0012                     	;# 
   883  0013                     	;# 
   884  0014                     	;# 
   885  0015                     	;# 
   886  0015                     	;# 
   887  0016                     	;# 
   888  0017                     	;# 
   889  0018                     	;# 
   890  0019                     	;# 
   891  001A                     	;# 
   892  001B                     	;# 
   893  001B                     	;# 
   894  001C                     	;# 
   895  001D                     	;# 
   896  001E                     	;# 
   897  001F                     	;# 
   898  0081                     	;# 
   899  0085                     	;# 
   900  0086                     	;# 
   901  0087                     	;# 
   902  0088                     	;# 
   903  0089                     	;# 
   904  008C                     	;# 
   905  008D                     	;# 
   906  008E                     	;# 
   907  0091                     	;# 
   908  0092                     	;# 
   909  0093                     	;# 
   910  0094                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  009F                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  010E                     	;# 
   920  010F                     	;# 
   921  018C                     	;# 
   922  018D                     	;# 
   923                           
   924                           	psect	strings
   925  0606                     __pstrings:
   926  0606                     stringtab:
   927  0606                     __stringtab:
   928  0606                     stringcode:	
   929                           ;	String table - string pointers are 1 byte each
   930                           
   931  0606                     stringdir:
   932  0606  3006               	movlw	high stringdir
   933  0607  008A               	movwf	10
   934  0608  0804               	movf	4,w
   935  0609  0A84               	incf	4,f
   936  060A  0782               	addwf	2,f
   937  060B                     __stringbase:
   938  060B  3400               	retlw	0
   939  060C                     __end_of__stringtab:
   940  060C                     _Tasks:
   941  060C  3401               	retlw	1
   942  060D  3400               	retlw	0
   943  060E  3407               	retlw	low (fp__Scheduler_Task1-i1fpbase)
   944  060F  3414               	retlw	20
   945  0610  3400               	retlw	0
   946  0611  340A               	retlw	low (fp__Scheduler_Task2-i1fpbase)
   947  0612  3464               	retlw	100
   948  0613  3400               	retlw	0
   949  0614  3404               	retlw	low (fp__Scheduler_Task3-i1fpbase)
   950  0615                     __end_of_Tasks:
   951  0615                     _Interrupt_CbStruct:
   952  0615  340D               	retlw	low (fp__Timer0_CB-i1fpbase)
   953  0616  3401               	retlw	low (fp__EXTI_SettingButton_CB-i1fpbase)
   954  0617                     __end_of_Interrupt_CbStruct:
   955  0008                     _PORTD	set	8
   956  0005                     _PORTA	set	5
   957  0006                     _PORTB	set	6
   958  000B                     _INTCONbits	set	11
   959  0001                     _TMR0	set	1
   960  005A                     _TMR0IF	set	90
   961  0088                     _TRISD	set	136
   962  0085                     _TRISA	set	133
   963  0086                     _TRISB	set	134
   964  0081                     _OPTION_REGbits	set	129
   965  040E                     _INTEDG	set	1038
   966                           
   967                           	psect	cinit
   968  0015                     start_initialization:	
   969                           ; #config settings
   970                           
   971  0015                     __initialization:
   972                           
   973                           ; Clear objects allocated to COMMON
   974  0015  01FB               	clrf	__pbssCOMMON& (0+127)
   975  0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   976  0017  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   977                           
   978                           ; Clear objects allocated to BANK0
   979  0018  1383               	bcf	3,7	;select IRP bank0
   980  0019  3020               	movlw	low __pbssBANK0
   981  001A  0084               	movwf	4
   982  001B  303B               	movlw	low (__pbssBANK0+27)
   983  001C  120A  118A  2646  120A  118A  	fcall	clear_ram0
   984  0021                     end_of_initialization:	
   985                           ;End of C runtime variable initialization code
   986                           
   987  0021                     __end_of__initialization:
   988  0021  0183               	clrf	3
   989  0022  120A  118A  2CDE   	ljmp	_main	;jump to C main() function
   990                           
   991                           	psect	bssCOMMON
   992  007B                     __pbssCOMMON:
   993  007B                     _Enable_Hours:
   994  007B                     	ds	1
   995  007C                     _Enable_Minutes:
   996  007C                     	ds	1
   997  007D                     _ButtonsFlag:
   998  007D                     	ds	1
   999                           
  1000                           	psect	bssBANK0
  1001  0020                     __pbssBANK0:
  1002  0020                     _Tick:
  1003  0020                     	ds	4
  1004  0024                     _Clock:
  1005  0024                     	ds	3
  1006  0027                     Display_Blink@Counter:
  1007  0027                     	ds	2
  1008  0029                     Clock_Normal@counter:
  1009  0029                     	ds	1
  1010  002A                     _Digit4:
  1011  002A                     	ds	1
  1012  002B                     _Digit3:
  1013  002B                     	ds	1
  1014  002C                     _Digit2:
  1015  002C                     	ds	1
  1016  002D                     _Digit1:
  1017  002D                     	ds	1
  1018  002E                     _DigitSelector:
  1019  002E                     	ds	1
  1020  002F                     Buttons_Update@Debounce_Counter:
  1021  002F                     	ds	1
  1022  0030                     _Display:
  1023  0030                     	ds	1
  1024  0031                     _MODE:
  1025  0031                     	ds	1
  1026  0032                     _Debounce_DownButton:
  1027  0032                     	ds	3
  1028  0035                     _Debounce_UpButton:
  1029  0035                     	ds	3
  1030  0038                     _Task_Flag:
  1031  0038                     	ds	3
  1032                           
  1033                           	psect	clrtext
  1034  0646                     clear_ram0:	
  1035                           ;	Called with FSR containing the base address, and
  1036                           ;	W with the last address+1
  1037                           
  1038  0646  0064               	clrwdt	;clear the watchdog before getting into this loop
  1039  0647                     clrloop0:
  1040  0647  0180               	clrf	0	;clear RAM location pointed to by FSR
  1041  0648  0A84               	incf	4,f	;increment pointer
  1042  0649  0604               	xorwf	4,w	;XOR with final address
  1043  064A  1903               	btfsc	3,2	;have we reached the end yet?
  1044  064B  3400               	retlw	0	;all done for this memory range, return
  1045  064C  0604               	xorwf	4,w	;XOR again to restore value
  1046  064D  2E47               	goto	clrloop0	;do the next byte
  1047                           
  1048                           	psect	cstackCOMMON
  1049  0070                     __pcstackCOMMON:
  1050  0070                     ?_GPIO_Init:
  1051  0070                     ?_Display_Init:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0070                     ?_Clock_Init:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  0070                     ?_ModeManager_Init:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  0070                     ?_Buttons_Init:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063  0070                     ?_Timer_Init:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066  0070                     ?_Scheduler_Init:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0070                     ?_Timer_Start:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0070                     ?_Display_Normal:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0070                     ??_Display_Normal:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ?_Display_Blink:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     ?_SSD_DigitSelector:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084  0070                     ?_Scheduler_Task1:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0070                     ?_Scheduler_Task2:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090  0070                     ?_Scheduler_Task3:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093  0070                     ?_Clock_Update:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096  0070                     ?_Clock_Normal:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099  0070                     ?_Clock_Hour_Setting:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102  0070                     ??_Clock_Hour_Setting:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0070                     ?_Clock_Minutes_Setting:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0070                     ??_Clock_Minutes_Setting:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0070                     ?_SSD_Display:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0070                     ??_SSD_Display:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0070                     ?_main:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0070                     ?_Scheduler_Update:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ?_Timer0_CB:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ?_Buttons_Update:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ?_EXTI_SettingButton_CB:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0070                     ??_EXTI_SettingButton_CB:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0070                     ?_Display_Update:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_ModeManager_Update:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ??_ModeManager_Update:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?_ISR:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?___bmul:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?___wmul:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?___awdiv:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156  0070                     ?___awmod:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159  0070                     ___bmul@multiplicand:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162  0070                     Display_Blink@Times_Ms:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ___wmul@multiplier:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168  0070                     ___awdiv@divisor:	
  1169                           ; 2 bytes @ 0x0
  1170                           
  1171  0070                     ___awmod@divisor:	
  1172                           ; 2 bytes @ 0x0
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x0
  1176  0070                     	ds	1
  1177  0071                     ??___bmul:
  1178  0071                     ___bmul@product:	
  1179                           ; 1 bytes @ 0x1
  1180                           
  1181                           
  1182                           ; 1 bytes @ 0x1
  1183  0071                     	ds	1
  1184  0072                     Display_Blink@_MODE_:
  1185  0072                     SSD_Display@Number:	
  1186                           ; 1 bytes @ 0x2
  1187                           
  1188  0072                     ___bmul@multiplier:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191  0072                     ___wmul@multiplicand:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194  0072                     ___awdiv@dividend:	
  1195                           ; 2 bytes @ 0x2
  1196                           
  1197  0072                     ___awmod@dividend:	
  1198                           ; 2 bytes @ 0x2
  1199                           
  1200                           
  1201                           ; 2 bytes @ 0x2
  1202  0072                     	ds	1
  1203  0073                     ??_Display_Blink:
  1204  0073                     ??_SSD_DigitSelector:	
  1205                           ; 1 bytes @ 0x3
  1206                           
  1207  0073                     ?___llmod:	
  1208                           ; 1 bytes @ 0x3
  1209                           
  1210  0073                     ___llmod@divisor:	
  1211                           ; 4 bytes @ 0x3
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x3
  1215  0073                     	ds	1
  1216  0074                     ??___wmul:
  1217  0074                     ??___awdiv:	
  1218                           ; 1 bytes @ 0x4
  1219                           
  1220  0074                     ??___awmod:	
  1221                           ; 1 bytes @ 0x4
  1222                           
  1223  0074                     ___awdiv@counter:	
  1224                           ; 1 bytes @ 0x4
  1225                           
  1226  0074                     ___awmod@counter:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229  0074                     ___wmul@product:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0x4
  1234  0074                     	ds	1
  1235  0075                     ??_Display_Update:
  1236  0075                     ___awdiv@sign:	
  1237                           ; 1 bytes @ 0x5
  1238                           
  1239  0075                     ___awmod@sign:	
  1240                           ; 1 bytes @ 0x5
  1241                           
  1242                           
  1243                           ; 1 bytes @ 0x5
  1244  0075                     	ds	1
  1245  0076                     ??_Scheduler_Task2:
  1246  0076                     ??_Clock_Normal:	
  1247                           ; 1 bytes @ 0x6
  1248                           
  1249  0076                     ??_Buttons_Update:	
  1250                           ; 1 bytes @ 0x6
  1251                           
  1252  0076                     ___awdiv@quotient:	
  1253                           ; 1 bytes @ 0x6
  1254                           
  1255                           
  1256                           ; 2 bytes @ 0x6
  1257  0076                     	ds	1
  1258  0077                     ??_Scheduler_Task1:
  1259  0077                     ___llmod@dividend:	
  1260                           ; 1 bytes @ 0x7
  1261                           
  1262                           
  1263                           ; 4 bytes @ 0x7
  1264  0077                     	ds	1
  1265  0078                     ??_Clock_Update:
  1266                           
  1267                           ; 1 bytes @ 0x8
  1268  0078                     	ds	2
  1269  007A                     ??_Scheduler_Task3:
  1270                           
  1271                           ; 1 bytes @ 0xA
  1272  007A                     	ds	1
  1273  007B                     ??_Timer0_CB:
  1274                           
  1275                           	psect	cstackBANK0
  1276  003B                     __pcstackBANK0:	
  1277                           ; 1 bytes @ 0xB
  1278                           
  1279  003B                     ??___llmod:
  1280                           
  1281                           ; 1 bytes @ 0x0
  1282  003B                     	ds	1
  1283  003C                     ___llmod@counter:
  1284                           
  1285                           ; 1 bytes @ 0x1
  1286  003C                     	ds	1
  1287  003D                     ??_Scheduler_Update:
  1288                           
  1289                           ; 1 bytes @ 0x2
  1290  003D                     	ds	6
  1291  0043                     Scheduler_Update@i:
  1292                           
  1293                           ; 1 bytes @ 0x8
  1294  0043                     	ds	1
  1295  0044                     ??_ISR:
  1296                           
  1297                           ; 1 bytes @ 0x9
  1298  0044                     	ds	4
  1299  0048                     ??_GPIO_Init:
  1300  0048                     ??_Display_Init:	
  1301                           ; 1 bytes @ 0xD
  1302                           
  1303  0048                     ??_Clock_Init:	
  1304                           ; 1 bytes @ 0xD
  1305                           
  1306  0048                     ??_ModeManager_Init:	
  1307                           ; 1 bytes @ 0xD
  1308                           
  1309  0048                     ??_Timer_Init:	
  1310                           ; 1 bytes @ 0xD
  1311                           
  1312  0048                     ??_Timer_Start:	
  1313                           ; 1 bytes @ 0xD
  1314                           
  1315  0048                     ?_memset:	
  1316                           ; 1 bytes @ 0xD
  1317                           
  1318  0048                     memset@c:	
  1319                           ; 1 bytes @ 0xD
  1320                           
  1321                           
  1322                           ; 2 bytes @ 0xD
  1323  0048                     	ds	2
  1324  004A                     memset@n:
  1325                           
  1326                           ; 2 bytes @ 0xF
  1327  004A                     	ds	2
  1328  004C                     ??_memset:
  1329  004C                     memset@p:	
  1330                           ; 1 bytes @ 0x11
  1331                           
  1332                           
  1333                           ; 1 bytes @ 0x11
  1334  004C                     	ds	1
  1335  004D                     memset@p1:
  1336                           
  1337                           ; 1 bytes @ 0x12
  1338  004D                     	ds	1
  1339  004E                     ??_Buttons_Init:
  1340  004E                     ??_Scheduler_Init:	
  1341                           ; 1 bytes @ 0x13
  1342                           
  1343  004E                     ??_main:	
  1344                           ; 1 bytes @ 0x13
  1345                           
  1346                           
  1347                           	psect	maintext
  1348  04DE                     __pmaintext:	
  1349                           ; 1 bytes @ 0x13
  1350 ;;
  1351 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1352 ;;
  1353 ;; *************** function _main *****************
  1354 ;; Defined at:
  1355 ;;		line 18 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : B00/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels required when called:    9
  1375 ;; This function calls:
  1376 ;;		_Buttons_Init
  1377 ;;		_Clock_Init
  1378 ;;		_Display_Init
  1379 ;;		_GPIO_Init
  1380 ;;		_ModeManager_Init
  1381 ;;		_Scheduler_Init
  1382 ;;		_Timer_Init
  1383 ;;		_Timer_Start
  1384 ;; This function is called by:
  1385 ;;		Startup code after reset
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _main
  1391  04DE                     _main:
  1392  04DE                     l2620:	
  1393                           ;incstack = 0
  1394 ;; hardware stack exceeded
  1395                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1396                           
  1397                           
  1398                           ;main.c: 19:     GPIO_Init();
  1399  04DE  120A  118A  257B  120A  118A  	fcall	_GPIO_Init
  1400                           
  1401                           ;main.c: 20:     Display_Init();
  1402  04E3  120A  118A  25C0  120A  118A  	fcall	_Display_Init
  1403  04E8                     l2622:
  1404                           
  1405                           ;main.c: 21:     Clock_Init();
  1406  04E8  120A  118A  264E  120A  118A  	fcall	_Clock_Init
  1407  04ED                     l2624:
  1408                           
  1409                           ;main.c: 22:     ModeManager_Init();
  1410  04ED  120A  118A  2665  120A  118A  	fcall	_ModeManager_Init
  1411  04F2                     l2626:
  1412                           
  1413                           ;main.c: 23:     Buttons_Init();
  1414  04F2  120A  118A  250A  120A  118A  	fcall	_Buttons_Init
  1415  04F7                     l2628:
  1416                           
  1417                           ;main.c: 24:     Timer_Init();
  1418  04F7  120A  118A  2638  120A  118A  	fcall	_Timer_Init
  1419  04FC                     l2630:
  1420                           
  1421                           ;main.c: 25:     Scheduler_Init();
  1422  04FC  120A  118A  2628  120A  118A  	fcall	_Scheduler_Init
  1423  0501                     l2632:
  1424                           
  1425                           ;main.c: 26:     Timer_Start();
  1426  0501  120A  118A  2669  120A  118A  	fcall	_Timer_Start
  1427  0506                     l29:	
  1428                           ;main.c: 27:     while(1);
  1429                           
  1430  0506                     l30:
  1431  0506  2D06               	goto	l29
  1432  0507  120A  118A  2812   	ljmp	start
  1433  050A                     __end_of_main:
  1434                           
  1435                           	psect	text1
  1436  0669                     __ptext1:	
  1437 ;; *************** function _Timer_Start *****************
  1438 ;; Defined at:
  1439 ;;		line 33 in file "Timer/Timer.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		None
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0
  1456 ;;      Totals:         0       0       0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    7
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _Timer_Start
  1469  0669                     _Timer_Start:
  1470  0669                     l2036:	
  1471                           ;incstack = 0
  1472                           ; Regs used in _Timer_Start: []
  1473                           
  1474                           
  1475                           ;Timer/Timer.c: 35:     INTCONbits.TMR0IE=1;
  1476  0669  168B               	bsf	11,5	;volatile
  1477  066A                     l67:
  1478  066A  0008               	return
  1479  066B                     __end_of_Timer_Start:
  1480                           
  1481                           	psect	text2
  1482  0638                     __ptext2:	
  1483 ;; *************** function _Timer_Init *****************
  1484 ;; Defined at:
  1485 ;;		line 14 in file "Timer/Timer.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    7
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _Timer_Init
  1515  0638                     _Timer_Init:
  1516  0638                     l2026:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _Timer_Init: [wreg]
  1519                           
  1520                           
  1521                           ;Timer/Timer.c: 16:     OPTION_REGbits.T0CS=0;
  1522  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1524  063A  1281               	bcf	1,5	;volatile
  1525                           
  1526                           ;Timer/Timer.c: 17:     OPTION_REGbits.PSA=0;
  1527  063B  1181               	bcf	1,3	;volatile
  1528                           
  1529                           ;Timer/Timer.c: 19:     OPTION_REGbits.PS0=0;
  1530  063C  1001               	bcf	1,0	;volatile
  1531                           
  1532                           ;Timer/Timer.c: 20:     OPTION_REGbits.PS1=0;
  1533  063D  1081               	bcf	1,1	;volatile
  1534                           
  1535                           ;Timer/Timer.c: 21:     OPTION_REGbits.PS2=1;
  1536  063E  1501               	bsf	1,2	;volatile
  1537  063F                     l2028:
  1538                           
  1539                           ;Timer/Timer.c: 23:     TMR0=100;
  1540  063F  3064               	movlw	100
  1541  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0642  0081               	movwf	1	;volatile
  1544  0643                     l2030:
  1545                           
  1546                           ;Timer/Timer.c: 24:     INTCONbits.GIE=1;
  1547  0643  178B               	bsf	11,7	;volatile
  1548  0644                     l2032:
  1549                           
  1550                           ;Timer/Timer.c: 25:     INTCONbits.PEIE=1;
  1551  0644  170B               	bsf	11,6	;volatile
  1552  0645                     l64:
  1553  0645  0008               	return
  1554  0646                     __end_of_Timer_Init:
  1555                           
  1556                           	psect	text3
  1557  0628                     __ptext3:	
  1558 ;; *************** function _Scheduler_Init *****************
  1559 ;; Defined at:
  1560 ;;		line 11 in file "Scheduler/Scheduler.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0
  1577 ;;      Totals:         0       0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    8
  1581 ;; This function calls:
  1582 ;;		_memset
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _Scheduler_Init
  1590  0628                     _Scheduler_Init:
  1591  0628                     l2614:	
  1592                           ;incstack = 0
  1593 ;; hardware stack exceeded
  1594                           ; Regs used in _Scheduler_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1595                           
  1596                           
  1597                           ;Scheduler/Scheduler.c: 13:     memset(Task_Flag,0,sizeof(Task_Flag));
  1598  0628  3000               	movlw	0
  1599  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1600  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1601  062B  00C8               	movwf	memset@c
  1602  062C  00C9               	movwf	memset@c+1
  1603  062D  3003               	movlw	3
  1604  062E  00CA               	movwf	memset@n
  1605  062F  3000               	movlw	0
  1606  0630  00CB               	movwf	memset@n+1
  1607  0631  3038               	movlw	(low (_Task_Flag| 0))& (0+255)
  1608  0632  120A  118A  259E  120A  118A  	fcall	_memset
  1609  0637                     l43:
  1610  0637  0008               	return
  1611  0638                     __end_of_Scheduler_Init:
  1612                           
  1613                           	psect	text4
  1614  0665                     __ptext4:	
  1615 ;; *************** function _ModeManager_Init *****************
  1616 ;; Defined at:
  1617 ;;		line 11 in file "ModeManger/ModeManager.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		status,2
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    7
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _ModeManager_Init
  1647  0665                     _ModeManager_Init:
  1648  0665                     l2016:	
  1649                           ;incstack = 0
  1650                           ; Regs used in _ModeManager_Init: [status,2]
  1651                           
  1652                           
  1653                           ;ModeManger/ModeManager.c: 13:   MODE=Normal_Mode;
  1654  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0667  01B1               	clrf	_MODE
  1657  0668                     l219:
  1658  0668  0008               	return
  1659  0669                     __end_of_ModeManager_Init:
  1660                           
  1661                           	psect	text5
  1662  057B                     __ptext5:	
  1663 ;; *************** function _GPIO_Init *****************
  1664 ;; Defined at:
  1665 ;;		line 9 in file "gpio/gpio.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, btemp+1
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    7
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _GPIO_Init
  1695  057B                     _GPIO_Init:
  1696  057B                     l1984:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _GPIO_Init: [wreg+status,2+status,0+btemp+1]
  1699                           
  1700  057B                     l109:	
  1701                           ;gpio/gpio.c: 11:     (1==0)? ((TRISB&=~(1<<2))) :((TRISB|=(1<<2)));
  1702                           
  1703  057B  1683               	bsf	3,5	;RP0=1, select bank1
  1704  057C  1303               	bcf	3,6	;RP1=0, select bank1
  1705  057D  1506               	bsf	6,2	;volatile
  1706  057E                     l113:
  1707  057E  1486               	bsf	6,1	;volatile
  1708  057F                     l117:
  1709  057F  1406               	bsf	6,0	;volatile
  1710  0580                     l1992:
  1711  0580  30FB               	movlw	251
  1712  0581  00FF               	movwf	btemp+1
  1713  0582  087F               	movf	btemp+1,w
  1714  0583  0585               	andwf	5,f	;volatile
  1715  0584                     l1994:
  1716  0584  30F7               	movlw	247
  1717  0585  00FF               	movwf	btemp+1
  1718  0586  087F               	movf	btemp+1,w
  1719  0587  0585               	andwf	5,f	;volatile
  1720  0588                     l1996:
  1721  0588  30EF               	movlw	239
  1722  0589  00FF               	movwf	btemp+1
  1723  058A  087F               	movf	btemp+1,w
  1724  058B  0585               	andwf	5,f	;volatile
  1725  058C                     l1998:
  1726  058C  30DF               	movlw	223
  1727  058D  00FF               	movwf	btemp+1
  1728  058E  087F               	movf	btemp+1,w
  1729  058F  0585               	andwf	5,f	;volatile
  1730  0590                     l2000:
  1731  0590  307F               	movlw	127
  1732  0591  00FF               	movwf	btemp+1
  1733  0592  087F               	movf	btemp+1,w
  1734  0593  0588               	andwf	8,f	;volatile
  1735  0594                     l2002:
  1736  0594  0188               	clrf	8	;volatile
  1737  0595                     l2006:
  1738  0595  30EF               	movlw	239
  1739  0596  00FF               	movwf	btemp+1
  1740  0597  087F               	movf	btemp+1,w
  1741  0598  0586               	andwf	6,f	;volatile
  1742  0599                     l2008:
  1743  0599  30F7               	movlw	247
  1744  059A  00FF               	movwf	btemp+1
  1745  059B  087F               	movf	btemp+1,w
  1746  059C  0586               	andwf	6,f	;volatile
  1747  059D                     l152:
  1748  059D  0008               	return
  1749  059E                     __end_of_GPIO_Init:
  1750                           
  1751                           	psect	text6
  1752  05C0                     __ptext6:	
  1753 ;; *************** function _Display_Init *****************
  1754 ;; Defined at:
  1755 ;;		line 20 in file "Display/Display.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, btemp+1
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    7
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _Display_Init
  1785  05C0                     _Display_Init:
  1786  05C0                     l2010:	
  1787                           ;incstack = 0
  1788                           ; Regs used in _Display_Init: [wreg+status,2+status,0+btemp+1]
  1789                           
  1790                           
  1791                           ;Display/Display.c: 22:     Enable_Minutes=1;
  1792  05C0  01FC               	clrf	_Enable_Minutes
  1793  05C1  0AFC               	incf	_Enable_Minutes,f
  1794                           
  1795                           ;Display/Display.c: 23:     Enable_Hours=1;
  1796  05C2  01FB               	clrf	_Enable_Hours
  1797  05C3  0AFB               	incf	_Enable_Hours,f
  1798  05C4                     l2012:
  1799                           
  1800                           ;Display/Display.c: 25:     (PORTA&=~(1<<2));
  1801  05C4  30FB               	movlw	251
  1802  05C5  00FF               	movwf	btemp+1
  1803  05C6  087F               	movf	btemp+1,w
  1804  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1805  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1806  05C9  0585               	andwf	5,f	;volatile
  1807                           
  1808                           ;Display/Display.c: 26:     (PORTA&=~(1<<3));
  1809  05CA  30F7               	movlw	247
  1810  05CB  00FF               	movwf	btemp+1
  1811  05CC  087F               	movf	btemp+1,w
  1812  05CD  0585               	andwf	5,f	;volatile
  1813                           
  1814                           ;Display/Display.c: 27:     (PORTA&=~(1<<4));
  1815  05CE  30EF               	movlw	239
  1816  05CF  00FF               	movwf	btemp+1
  1817  05D0  087F               	movf	btemp+1,w
  1818  05D1  0585               	andwf	5,f	;volatile
  1819                           
  1820                           ;Display/Display.c: 28:     (PORTA&=~(1<<5));
  1821  05D2  30DF               	movlw	223
  1822  05D3  00FF               	movwf	btemp+1
  1823  05D4  087F               	movf	btemp+1,w
  1824  05D5  0585               	andwf	5,f	;volatile
  1825                           
  1826                           ;Display/Display.c: 29:     (PORTD&=~(1<<7));
  1827  05D6  307F               	movlw	127
  1828  05D7  00FF               	movwf	btemp+1
  1829  05D8  087F               	movf	btemp+1,w
  1830  05D9  0588               	andwf	8,f	;volatile
  1831  05DA                     l177:
  1832  05DA  0008               	return
  1833  05DB                     __end_of_Display_Init:
  1834                           
  1835                           	psect	text7
  1836  064E                     __ptext7:	
  1837 ;; *************** function _Clock_Init *****************
  1838 ;; Defined at:
  1839 ;;		line 23 in file "Clock/Clock.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		status,2
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    7
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _Clock_Init
  1869  064E                     _Clock_Init:
  1870  064E                     l2014:	
  1871                           ;incstack = 0
  1872                           ; Regs used in _Clock_Init: [status,2]
  1873                           
  1874                           
  1875                           ;Clock/Clock.c: 25:     Clock.Second=0;
  1876  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1877  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0650  01A4               	clrf	_Clock
  1879                           
  1880                           ;Clock/Clock.c: 26:     Clock.Minutes=0;
  1881  0651  01A5               	clrf	_Clock+1
  1882                           
  1883                           ;Clock/Clock.c: 27:     Clock.Hours=0;
  1884  0652  01A6               	clrf	_Clock+2
  1885  0653                     l303:
  1886  0653  0008               	return
  1887  0654                     __end_of_Clock_Init:
  1888                           
  1889                           	psect	text8
  1890  050A                     __ptext8:	
  1891 ;; *************** function _Buttons_Init *****************
  1892 ;; Defined at:
  1893 ;;		line 16 in file "Buttons/Buttons.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    8
  1914 ;; This function calls:
  1915 ;;		_memset
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _Buttons_Init
  1923  050A                     _Buttons_Init:
  1924  050A                     l2606:	
  1925                           ;incstack = 0
  1926 ;; hardware stack exceeded
  1927                           ; Regs used in _Buttons_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1928                           
  1929                           
  1930                           ;Buttons/Buttons.c: 18:     memset(Debounce_UpButton,1,sizeof(Debounce_UpButton));
  1931  050A  3001               	movlw	1
  1932  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1933  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1934  050D  00C8               	movwf	memset@c
  1935  050E  3000               	movlw	0
  1936  050F  00C9               	movwf	memset@c+1
  1937  0510  3003               	movlw	3
  1938  0511  00CA               	movwf	memset@n
  1939  0512  3000               	movlw	0
  1940  0513  00CB               	movwf	memset@n+1
  1941  0514  3035               	movlw	(low (_Debounce_UpButton| 0))& (0+255)
  1942  0515  120A  118A  259E  120A  118A  	fcall	_memset
  1943                           
  1944                           ;Buttons/Buttons.c: 19:     memset(Debounce_DownButton,1,sizeof(Debounce_DownButton));
  1945  051A  3001               	movlw	1
  1946  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1947  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1948  051D  00C8               	movwf	memset@c
  1949  051E  3000               	movlw	0
  1950  051F  00C9               	movwf	memset@c+1
  1951  0520  3003               	movlw	3
  1952  0521  00CA               	movwf	memset@n
  1953  0522  3000               	movlw	0
  1954  0523  00CB               	movwf	memset@n+1
  1955  0524  3032               	movlw	(low (_Debounce_DownButton| 0))& (0+255)
  1956  0525  120A  118A  259E  120A  118A  	fcall	_memset
  1957  052A                     l2608:
  1958                           
  1959                           ;Buttons/Buttons.c: 21:     INTEDG=1;
  1960  052A  1683               	bsf	3,5	;RP0=1, select bank1
  1961  052B  1303               	bcf	3,6	;RP1=0, select bank1
  1962  052C  1701               	bsf	1,6	;volatile
  1963  052D                     l2610:
  1964                           
  1965                           ;Buttons/Buttons.c: 22:     INTCONbits.INTE=1;
  1966  052D  160B               	bsf	11,4	;volatile
  1967  052E                     l2612:
  1968                           
  1969                           ;Buttons/Buttons.c: 23:     INTCONbits.INTF=0;
  1970  052E  108B               	bcf	11,1	;volatile
  1971  052F                     l89:
  1972  052F  0008               	return
  1973  0530                     __end_of_Buttons_Init:
  1974                           
  1975                           	psect	text9
  1976  059E                     __ptext9:	
  1977 ;; *************** function _memset *****************
  1978 ;; Defined at:
  1979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\memset.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  p1              1    wreg     PTR void 
  1982 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1983 ;;  c               2   13[BANK0 ] int 
  1984 ;;  n               2   15[BANK0 ] unsigned int 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  p1              1   18[BANK0 ] PTR void 
  1987 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1988 ;;  p               1   17[BANK0 ] PTR unsigned char 
  1989 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      PTR void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       4       0       0       0
  2000 ;;      Locals:         0       2       0       0       0
  2001 ;;      Temps:          0       0       0       0       0
  2002 ;;      Totals:         0       6       0       0       0
  2003 ;;Total ram usage:        6 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    7
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_Scheduler_Init
  2010 ;;		_Buttons_Init
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _memset
  2016  059E                     _memset:
  2017                           
  2018                           ;incstack = 0
  2019 ;; hardware stack exceeded
  2020                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  2021                           ;memset@p1 stored from wreg
  2022  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2023  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2024  05A0  00CD               	movwf	memset@p1
  2025  05A1                     l2584:
  2026  05A1  084D               	movf	memset@p1,w
  2027  05A2  00FF               	movwf	btemp+1
  2028  05A3  087F               	movf	btemp+1,w
  2029  05A4  00CC               	movwf	memset@p
  2030  05A5  2DB1               	goto	l2590
  2031  05A6                     l2586:
  2032  05A6  0848               	movf	memset@c,w
  2033  05A7  00FF               	movwf	btemp+1
  2034  05A8  084C               	movf	memset@p,w
  2035  05A9  0084               	movwf	4
  2036  05AA  087F               	movf	btemp+1,w
  2037  05AB  1383               	bcf	3,7	;select IRP bank0
  2038  05AC  0080               	movwf	0
  2039  05AD                     l2588:
  2040  05AD  3001               	movlw	1
  2041  05AE  00FF               	movwf	btemp+1
  2042  05AF  087F               	movf	btemp+1,w
  2043  05B0  07CC               	addwf	memset@p,f
  2044  05B1                     l2590:
  2045  05B1  3001               	movlw	1
  2046  05B2  02CA               	subwf	memset@n,f
  2047  05B3  3000               	movlw	0
  2048  05B4  1C03               	skipc
  2049  05B5  03CB               	decf	memset@n+1,f
  2050  05B6  02CB               	subwf	memset@n+1,f
  2051  05B7  0A4A               	incf	memset@n,w
  2052  05B8  1D03               	skipz
  2053  05B9  2DBE               	goto	u1931
  2054  05BA  0A4B               	incf	memset@n+1,w
  2055  05BB  1D03               	btfss	3,2
  2056  05BC  2DBE               	goto	u1931
  2057  05BD  2DBF               	goto	u1930
  2058  05BE                     u1931:
  2059  05BE  2DA6               	goto	l2586
  2060  05BF                     u1930:
  2061  05BF                     l934:
  2062  05BF  0008               	return
  2063  05C0                     __end_of_memset:
  2064                           
  2065                           	psect	text10
  2066  047D                     __ptext10:	
  2067 ;; *************** function _ISR *****************
  2068 ;; Defined at:
  2069 ;;		line 10 in file "Interrupt/Interrupt.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       4       0       0       0
  2086 ;;      Totals:         0       4       0       0       0
  2087 ;;Total ram usage:        4 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    6
  2090 ;; This function calls:
  2091 ;;		_EXTI_SettingButton_CB
  2092 ;;		_Timer0_CB
  2093 ;; This function is called by:
  2094 ;;		Interrupt level 1
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _ISR
  2100  047D                     _ISR:
  2101  047D                     i1l2798:
  2102                           
  2103                           ;Interrupt/Interrupt.c: 12:     if(INTCONbits.TMR0IF)
  2104  047D  1D0B               	btfss	11,2	;volatile
  2105  047E  2C80               	goto	u206_21
  2106  047F  2C81               	goto	u206_20
  2107  0480                     u206_21:
  2108  0480  2C90               	goto	i1l2806
  2109  0481                     u206_20:
  2110  0481                     i1l2800:
  2111                           
  2112                           ;Interrupt/Interrupt.c: 13:     {;Interrupt/Interrupt.c: 15:       TMR0 = 101;
  2113  0481  3065               	movlw	101
  2114  0482  0081               	movwf	1	;volatile
  2115  0483                     i1l2802:
  2116                           
  2117                           ;Interrupt/Interrupt.c: 16:       TMR0IF=0;
  2118  0483  110B               	bcf	11,2	;volatile
  2119  0484                     i1l2804:
  2120                           
  2121                           ;Interrupt/Interrupt.c: 17:       Interrupt_CbStruct.Timer_CB();
  2122  0484  300A               	movlw	low (_Interrupt_CbStruct-__stringbase)
  2123  0485  0084               	movwf	4
  2124  0486  120A  118A  2606  120A  118A  	fcall	stringdir
  2125  048B  120A  118A  2026  120A  118A  	fcall	i1fptable
  2126  0490                     i1l2806:
  2127                           
  2128                           ;Interrupt/Interrupt.c: 20:     if(INTCONbits.INTF)
  2129  0490  1C8B               	btfss	11,1	;volatile
  2130  0491  2C93               	goto	u207_21
  2131  0492  2C94               	goto	u207_20
  2132  0493                     u207_21:
  2133  0493  2CA1               	goto	i1l245
  2134  0494                     u207_20:
  2135  0494                     i1l2808:
  2136                           
  2137                           ;Interrupt/Interrupt.c: 21:     {;Interrupt/Interrupt.c: 22:       INTCONbits.INTF=0;
  2138  0494  108B               	bcf	11,1	;volatile
  2139  0495                     i1l2810:
  2140                           
  2141                           ;Interrupt/Interrupt.c: 23:       Interrupt_CbStruct.EXTI_CB();
  2142  0495  300B               	movlw	low (((_Interrupt_CbStruct+1)-__stringbase)| (0+32768))
  2143  0496  0084               	movwf	4
  2144  0497  120A  118A  2606  120A  118A  	fcall	stringdir
  2145  049C  120A  118A  2026  120A  118A  	fcall	i1fptable
  2146  04A1                     i1l245:
  2147  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2148  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2149  04A3  0847               	movf	??_ISR+3,w
  2150  04A4  00FF               	movwf	btemp+1
  2151  04A5  0846               	movf	??_ISR+2,w
  2152  04A6  008A               	movwf	10
  2153  04A7  0845               	movf	??_ISR+1,w
  2154  04A8  0084               	movwf	4
  2155  04A9  0E44               	swapf	??_ISR^0,w
  2156  04AA  0083               	movwf	3
  2157  04AB  0EFE               	swapf	btemp,f
  2158  04AC  0E7E               	swapf	btemp,w
  2159  04AD  0009               	retfie
  2160  04AE                     __end_of_ISR:
  2161                           
  2162                           	psect	intentry
  2163  0004                     __pintentry:	
  2164                           ;incstack = 0
  2165 ;; hardware stack exceeded
  2166                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2167                           
  2168  0004                     interrupt_function:
  2169  007E                     saved_w	set	btemp
  2170  0004  00FE               	movwf	btemp
  2171  0005  0E03               	swapf	3,w
  2172  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0008  00C4               	movwf	??_ISR
  2175  0009  0804               	movf	4,w
  2176  000A  00C5               	movwf	??_ISR+1
  2177  000B  080A               	movf	10,w
  2178  000C  00C6               	movwf	??_ISR+2
  2179  000D  087F               	movf	btemp+1,w
  2180  000E  00C7               	movwf	??_ISR+3
  2181  000F  120A  118A  2C7D   	ljmp	_ISR
  2182                           
  2183                           	psect	text11
  2184  05DB                     __ptext11:	
  2185 ;; *************** function _Timer0_CB *****************
  2186 ;; Defined at:
  2187 ;;		line 38 in file "Timer/Timer.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2201 ;;      Params:         0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0
  2204 ;;      Totals:         0       0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    5
  2208 ;; This function calls:
  2209 ;;		_Scheduler_Update
  2210 ;; This function is called by:
  2211 ;;		_ISR
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _Timer0_CB
  2217  05DB                     _Timer0_CB:
  2218  05DB                     i1l2794:	
  2219                           ;incstack = 0
  2220 ;; hardware stack exceeded
  2221                           ; Regs used in _Timer0_CB: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2222                           
  2223                           
  2224                           ;Timer/Timer.c: 40:    Tick++;
  2225  05DB  3001               	movlw	1
  2226  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2227  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2228  05DE  07A0               	addwf	_Tick,f
  2229  05DF  3000               	movlw	0
  2230  05E0  1803               	skipnc
  2231  05E1  3001               	movlw	1
  2232  05E2  07A1               	addwf	_Tick+1,f
  2233  05E3  3000               	movlw	0
  2234  05E4  1803               	skipnc
  2235  05E5  3001               	movlw	1
  2236  05E6  07A2               	addwf	_Tick+2,f
  2237  05E7  3000               	movlw	0
  2238  05E8  1803               	skipnc
  2239  05E9  3001               	movlw	1
  2240  05EA  07A3               	addwf	_Tick+3,f
  2241  05EB                     i1l2796:
  2242                           
  2243                           ;Timer/Timer.c: 42:    Scheduler_Update();
  2244  05EB  120A  118A  21AC  120A  118A  	fcall	_Scheduler_Update
  2245  05F0                     i1l70:
  2246  05F0  0008               	return
  2247  05F1                     __end_of_Timer0_CB:
  2248                           
  2249                           	psect	text12
  2250  01AC                     __ptext12:	
  2251 ;; *************** function _Scheduler_Update *****************
  2252 ;; Defined at:
  2253 ;;		line 16 in file "Scheduler/Scheduler.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  i               1    8[BANK0 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       0       0       0       0
  2268 ;;      Locals:         0       1       0       0       0
  2269 ;;      Temps:          0       6       0       0       0
  2270 ;;      Totals:         0       7       0       0       0
  2271 ;;Total ram usage:        7 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    4
  2274 ;; This function calls:
  2275 ;;		_Scheduler_Task1
  2276 ;;		_Scheduler_Task2
  2277 ;;		_Scheduler_Task3
  2278 ;;		___bmul
  2279 ;;		___llmod
  2280 ;; This function is called by:
  2281 ;;		_Timer0_CB
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _Scheduler_Update
  2287  01AC                     _Scheduler_Update:
  2288  01AC                     i1l2780:	
  2289                           ;incstack = 0
  2290 ;; hardware stack exceeded
  2291                           ; Regs used in _Scheduler_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2292                           
  2293                           
  2294                           ;Scheduler/Scheduler.c: 19:        for(uint8_t i=0 ;i<(3UL);i++)
  2295  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2296  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2297  01AE  01C3               	clrf	Scheduler_Update@i
  2298  01AF                     i1l2786:
  2299                           
  2300                           ;Scheduler/Scheduler.c: 20:        {;Scheduler/Scheduler.c: 22:            if((Tick%(Tas
      +                          ks[i].Task_Peroid/(1UL))) ? 0:1)
  2301  01AF  3003               	movlw	3
  2302  01B0  00FF               	movwf	btemp+1
  2303  01B1  087F               	movf	btemp+1,w
  2304  01B2  00F0               	movwf	___bmul@multiplicand
  2305  01B3  0843               	movf	Scheduler_Update@i,w
  2306  01B4  120A  118A  25F1  120A  118A  	fcall	___bmul
  2307  01B9  3E01               	addlw	low ((_Tasks-__stringbase)| (0+32768))
  2308  01BA  0084               	movwf	4
  2309  01BB  120A  118A  2606  120A  118A  	fcall	stringdir
  2310  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2311  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2312  01C2  00BD               	movwf	??_Scheduler_Update
  2313  01C3  120A  118A  2606  120A  118A  	fcall	stringdir
  2314  01C8  00BE               	movwf	??_Scheduler_Update+1
  2315  01C9  083D               	movf	??_Scheduler_Update,w
  2316  01CA  00BF               	movwf	??_Scheduler_Update+2
  2317  01CB  083E               	movf	??_Scheduler_Update+1,w
  2318  01CC  00C0               	movwf	??_Scheduler_Update+3
  2319  01CD  01C1               	clrf	??_Scheduler_Update+4
  2320  01CE  01C2               	clrf	??_Scheduler_Update+5
  2321  01CF  0842               	movf	??_Scheduler_Update+5,w
  2322  01D0  00F6               	movwf	___llmod@divisor+3
  2323  01D1  0841               	movf	??_Scheduler_Update+4,w
  2324  01D2  00F5               	movwf	___llmod@divisor+2
  2325  01D3  0840               	movf	??_Scheduler_Update+3,w
  2326  01D4  00F4               	movwf	___llmod@divisor+1
  2327  01D5  083F               	movf	??_Scheduler_Update+2,w
  2328  01D6  00F3               	movwf	___llmod@divisor
  2329  01D7  0823               	movf	_Tick+3,w
  2330  01D8  00FA               	movwf	___llmod@dividend+3
  2331  01D9  0822               	movf	_Tick+2,w
  2332  01DA  00F9               	movwf	___llmod@dividend+2
  2333  01DB  0821               	movf	_Tick+1,w
  2334  01DC  00F8               	movwf	___llmod@dividend+1
  2335  01DD  0820               	movf	_Tick,w
  2336  01DE  00F7               	movwf	___llmod@dividend
  2337  01DF  120A  118A  22C7  120A  118A  	fcall	___llmod
  2338  01E4  0876               	movf	?___llmod+3,w
  2339  01E5  0475               	iorwf	?___llmod+2,w
  2340  01E6  0474               	iorwf	?___llmod+1,w
  2341  01E7  0473               	iorwf	?___llmod,w
  2342  01E8  1D03               	skipz
  2343  01E9  29EB               	goto	u204_21
  2344  01EA  29EC               	goto	u204_20
  2345  01EB                     u204_21:
  2346  01EB  2A04               	goto	i1l2790
  2347  01EC                     u204_20:
  2348  01EC                     i1l2788:
  2349                           
  2350                           ;Scheduler/Scheduler.c: 23:             {;Scheduler/Scheduler.c: 24:               Tasks
      +                          [i].Task();
  2351  01EC  3003               	movlw	3
  2352  01ED  00FF               	movwf	btemp+1
  2353  01EE  087F               	movf	btemp+1,w
  2354  01EF  00F0               	movwf	___bmul@multiplicand
  2355  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2356  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2357  01F2  0843               	movf	Scheduler_Update@i,w
  2358  01F3  120A  118A  25F1  120A  118A  	fcall	___bmul
  2359  01F8  3E03               	addlw	low (((_Tasks-__stringbase)| (0+32768)+2))
  2360  01F9  0084               	movwf	4
  2361  01FA  120A  118A  2606  120A  118A  	fcall	stringdir
  2362  01FF  120A  118A  2026  120A  118A  	fcall	i1fptable
  2363  0204                     i1l2790:
  2364                           
  2365                           ;Scheduler/Scheduler.c: 27:        }
  2366  0204  3001               	movlw	1
  2367  0205  00FF               	movwf	btemp+1
  2368  0206  087F               	movf	btemp+1,w
  2369  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0209  07C3               	addwf	Scheduler_Update@i,f
  2372  020A                     i1l2792:
  2373  020A  3003               	movlw	3
  2374  020B  0243               	subwf	Scheduler_Update@i,w
  2375  020C  1C03               	skipc
  2376  020D  2A0F               	goto	u205_21
  2377  020E  2A10               	goto	u205_20
  2378  020F                     u205_21:
  2379  020F  29AF               	goto	i1l2786
  2380  0210                     u205_20:
  2381  0210                     i1l49:
  2382  0210  0008               	return
  2383  0211                     __end_of_Scheduler_Update:
  2384                           
  2385                           	psect	text13
  2386  02C7                     __ptext13:	
  2387 ;; *************** function ___llmod *****************
  2388 ;; Defined at:
  2389 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  divisor         4    3[COMMON] unsigned long 
  2392 ;;  dividend        4    7[COMMON] unsigned long 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  counter         1    1[BANK0 ] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  4    3[COMMON] unsigned long 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0, btemp+1
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         8       0       0       0       0
  2405 ;;      Locals:         0       1       0       0       0
  2406 ;;      Temps:          0       1       0       0       0
  2407 ;;      Totals:         8       2       0       0       0
  2408 ;;Total ram usage:       10 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_Scheduler_Update
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function ___llmod
  2419  02C7                     ___llmod:
  2420  02C7                     i1l2758:	
  2421                           ;incstack = 0
  2422                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  2423                           
  2424  02C7  0876               	movf	___llmod@divisor+3,w
  2425  02C8  0475               	iorwf	___llmod@divisor+2,w
  2426  02C9  0474               	iorwf	___llmod@divisor+1,w
  2427  02CA  0473               	iorwf	___llmod@divisor,w
  2428  02CB  1903               	skipnz
  2429  02CC  2ACE               	goto	u198_21
  2430  02CD  2ACF               	goto	u198_20
  2431  02CE                     u198_21:
  2432  02CE  2B14               	goto	i1l2776
  2433  02CF                     u198_20:
  2434  02CF                     i1l2760:
  2435  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2436  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2437  02D1  01BC               	clrf	___llmod@counter
  2438  02D2  0ABC               	incf	___llmod@counter,f
  2439  02D3  2AE1               	goto	i1l2766
  2440  02D4                     i1l2762:
  2441  02D4  3001               	movlw	1
  2442  02D5  00BB               	movwf	??___llmod
  2443  02D6                     u199_25:
  2444  02D6  1003               	clrc
  2445  02D7  0DF3               	rlf	___llmod@divisor,f
  2446  02D8  0DF4               	rlf	___llmod@divisor+1,f
  2447  02D9  0DF5               	rlf	___llmod@divisor+2,f
  2448  02DA  0DF6               	rlf	___llmod@divisor+3,f
  2449  02DB  0BBB               	decfsz	??___llmod,f
  2450  02DC  2AD6               	goto	u199_25
  2451  02DD                     i1l2764:
  2452  02DD  3001               	movlw	1
  2453  02DE  00FF               	movwf	btemp+1
  2454  02DF  087F               	movf	btemp+1,w
  2455  02E0  07BC               	addwf	___llmod@counter,f
  2456  02E1                     i1l2766:
  2457  02E1  1FF6               	btfss	___llmod@divisor+3,7
  2458  02E2  2AE4               	goto	u200_21
  2459  02E3  2AE5               	goto	u200_20
  2460  02E4                     u200_21:
  2461  02E4  2AD4               	goto	i1l2762
  2462  02E5                     u200_20:
  2463  02E5                     i1l2768:
  2464  02E5  0876               	movf	___llmod@divisor+3,w
  2465  02E6  027A               	subwf	___llmod@dividend+3,w
  2466  02E7  1D03               	skipz
  2467  02E8  2AF3               	goto	u201_25
  2468  02E9  0875               	movf	___llmod@divisor+2,w
  2469  02EA  0279               	subwf	___llmod@dividend+2,w
  2470  02EB  1D03               	skipz
  2471  02EC  2AF3               	goto	u201_25
  2472  02ED  0874               	movf	___llmod@divisor+1,w
  2473  02EE  0278               	subwf	___llmod@dividend+1,w
  2474  02EF  1D03               	skipz
  2475  02F0  2AF3               	goto	u201_25
  2476  02F1  0873               	movf	___llmod@divisor,w
  2477  02F2  0277               	subwf	___llmod@dividend,w
  2478  02F3                     u201_25:
  2479  02F3  1C03               	skipc
  2480  02F4  2AF6               	goto	u201_21
  2481  02F5  2AF7               	goto	u201_20
  2482  02F6                     u201_21:
  2483  02F6  2B05               	goto	i1l2772
  2484  02F7                     u201_20:
  2485  02F7                     i1l2770:
  2486  02F7  0873               	movf	___llmod@divisor,w
  2487  02F8  02F7               	subwf	___llmod@dividend,f
  2488  02F9  0874               	movf	___llmod@divisor+1,w
  2489  02FA  1C03               	skipc
  2490  02FB  0F74               	incfsz	___llmod@divisor+1,w
  2491  02FC  02F8               	subwf	___llmod@dividend+1,f
  2492  02FD  0875               	movf	___llmod@divisor+2,w
  2493  02FE  1C03               	skipc
  2494  02FF  0F75               	incfsz	___llmod@divisor+2,w
  2495  0300  02F9               	subwf	___llmod@dividend+2,f
  2496  0301  0876               	movf	___llmod@divisor+3,w
  2497  0302  1C03               	skipc
  2498  0303  0F76               	incfsz	___llmod@divisor+3,w
  2499  0304  02FA               	subwf	___llmod@dividend+3,f
  2500  0305                     i1l2772:
  2501  0305  3001               	movlw	1
  2502  0306                     u202_25:
  2503  0306  1003               	clrc
  2504  0307  0CF6               	rrf	___llmod@divisor+3,f
  2505  0308  0CF5               	rrf	___llmod@divisor+2,f
  2506  0309  0CF4               	rrf	___llmod@divisor+1,f
  2507  030A  0CF3               	rrf	___llmod@divisor,f
  2508  030B  3EFF               	addlw	-1
  2509  030C  1D03               	skipz
  2510  030D  2B06               	goto	u202_25
  2511  030E                     i1l2774:
  2512  030E  3001               	movlw	1
  2513  030F  02BC               	subwf	___llmod@counter,f
  2514  0310  1D03               	btfss	3,2
  2515  0311  2B13               	goto	u203_21
  2516  0312  2B14               	goto	u203_20
  2517  0313                     u203_21:
  2518  0313  2AE5               	goto	i1l2768
  2519  0314                     u203_20:
  2520  0314                     i1l2776:
  2521  0314  087A               	movf	___llmod@dividend+3,w
  2522  0315  00F6               	movwf	?___llmod+3
  2523  0316  0879               	movf	___llmod@dividend+2,w
  2524  0317  00F5               	movwf	?___llmod+2
  2525  0318  0878               	movf	___llmod@dividend+1,w
  2526  0319  00F4               	movwf	?___llmod+1
  2527  031A  0877               	movf	___llmod@dividend,w
  2528  031B  00F3               	movwf	?___llmod
  2529  031C                     i1l702:
  2530  031C  0008               	return
  2531  031D                     __end_of___llmod:
  2532                           
  2533                           	psect	text14
  2534  05F1                     __ptext14:	
  2535 ;; *************** function ___bmul *****************
  2536 ;; Defined at:
  2537 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  multiplier      1    wreg     unsigned char 
  2540 ;;  multiplicand    1    0[COMMON] unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  multiplier      1    2[COMMON] unsigned char 
  2543 ;;  product         1    1[COMMON] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      unsigned char 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, btemp+1
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         1       0       0       0       0
  2554 ;;      Locals:         2       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0
  2556 ;;      Totals:         3       0       0       0       0
  2557 ;;Total ram usage:        3 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_Scheduler_Update
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function ___bmul
  2568  05F1                     ___bmul:
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2572                           ;___bmul@multiplier stored from wreg
  2573  05F1  00F2               	movwf	___bmul@multiplier
  2574  05F2                     i1l2546:
  2575  05F2  01F1               	clrf	___bmul@product
  2576  05F3                     i1l2548:
  2577  05F3  1C72               	btfss	___bmul@multiplier,0
  2578  05F4  2DF6               	goto	u185_21
  2579  05F5  2DF7               	goto	u185_20
  2580  05F6                     u185_21:
  2581  05F6  2DFB               	goto	i1l2552
  2582  05F7                     u185_20:
  2583  05F7                     i1l2550:
  2584  05F7  0870               	movf	___bmul@multiplicand,w
  2585  05F8  00FF               	movwf	btemp+1
  2586  05F9  087F               	movf	btemp+1,w
  2587  05FA  07F1               	addwf	___bmul@product,f
  2588  05FB                     i1l2552:
  2589  05FB  1003               	clrc
  2590  05FC  0DF0               	rlf	___bmul@multiplicand,f
  2591  05FD                     i1l2554:
  2592  05FD  1003               	clrc
  2593  05FE  0CF2               	rrf	___bmul@multiplier,f
  2594  05FF                     i1l2556:
  2595  05FF  0872               	movf	___bmul@multiplier,w
  2596  0600  1D03               	btfss	3,2
  2597  0601  2E03               	goto	u186_21
  2598  0602  2E04               	goto	u186_20
  2599  0603                     u186_21:
  2600  0603  2DF3               	goto	i1l2548
  2601  0604                     u186_20:
  2602  0604                     i1l2558:
  2603  0604  0871               	movf	___bmul@product,w
  2604  0605                     i1l506:
  2605  0605  0008               	return
  2606  0606                     __end_of___bmul:
  2607                           
  2608                           	psect	text15
  2609  0617                     __ptext15:	
  2610 ;; *************** function _Scheduler_Task2 *****************
  2611 ;; Defined at:
  2612 ;;		line 24 in file "Scheduler/Task.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0
  2629 ;;      Totals:         0       0       0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    2
  2633 ;; This function calls:
  2634 ;;		_Buttons_Update
  2635 ;;		_ModeManager_Update
  2636 ;; This function is called by:
  2637 ;;		_Scheduler_Update
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _Scheduler_Task2
  2643  0617                     _Scheduler_Task2:
  2644  0617                     i1l2538:	
  2645                           ;incstack = 0
  2646                           ; Regs used in _Scheduler_Task2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2647                           
  2648                           
  2649                           ;Scheduler/Task.c: 26:   (PORTB^=(1<<3));
  2650  0617  3008               	movlw	8
  2651  0618  00FF               	movwf	btemp+1
  2652  0619  087F               	movf	btemp+1,w
  2653  061A  1283               	bcf	3,5	;RP0=0, select bank0
  2654  061B  1303               	bcf	3,6	;RP1=0, select bank0
  2655  061C  0686               	xorwf	6,f	;volatile
  2656  061D                     i1l2540:
  2657                           
  2658                           ;Scheduler/Task.c: 27:   Buttons_Update();
  2659  061D  120A  118A  231D  120A  118A  	fcall	_Buttons_Update
  2660  0622                     i1l2542:
  2661                           
  2662                           ;Scheduler/Task.c: 28:   ModeManager_Update();
  2663  0622  120A  118A  2530  120A  118A  	fcall	_ModeManager_Update
  2664  0627                     i1l277:
  2665  0627  0008               	return
  2666  0628                     __end_of_Scheduler_Task2:
  2667                           
  2668                           	psect	text16
  2669  0654                     __ptext16:	
  2670 ;; *************** function _Scheduler_Task1 *****************
  2671 ;; Defined at:
  2672 ;;		line 17 in file "Scheduler/Task.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0
  2689 ;;      Totals:         0       0       0       0       0
  2690 ;;Total ram usage:        0 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    3
  2693 ;; This function calls:
  2694 ;;		_Display_Update
  2695 ;; This function is called by:
  2696 ;;		_Scheduler_Update
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function _Scheduler_Task1
  2702  0654                     _Scheduler_Task1:
  2703  0654                     i1l2536:	
  2704                           ;incstack = 0
  2705 ;; hardware stack exceeded
  2706                           ; Regs used in _Scheduler_Task1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2707                           
  2708                           
  2709                           ;Scheduler/Task.c: 20:   Display_Update();
  2710  0654  120A  118A  2407  120A  118A  	fcall	_Display_Update
  2711  0659                     i1l274:
  2712  0659  0008               	return
  2713  065A                     __end_of_Scheduler_Task1:
  2714                           
  2715                           	psect	text17
  2716  065A                     __ptext17:	
  2717 ;; *************** function _Scheduler_Task3 *****************
  2718 ;; Defined at:
  2719 ;;		line 32 in file "Scheduler/Task.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    3
  2740 ;; This function calls:
  2741 ;;		_Clock_Update
  2742 ;; This function is called by:
  2743 ;;		_Scheduler_Update
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _Scheduler_Task3
  2749  065A                     _Scheduler_Task3:
  2750  065A                     i1l2544:	
  2751                           ;incstack = 0
  2752 ;; hardware stack exceeded
  2753                           ; Regs used in _Scheduler_Task3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2754                           
  2755                           
  2756                           ;Scheduler/Task.c: 35:     Clock_Update();
  2757  065A  120A  118A  20C2  120A  118A  	fcall	_Clock_Update
  2758  065F                     i1l280:
  2759  065F  0008               	return
  2760  0660                     __end_of_Scheduler_Task3:
  2761                           
  2762                           	psect	text18
  2763  00C2                     __ptext18:	
  2764 ;; *************** function _Clock_Update *****************
  2765 ;; Defined at:
  2766 ;;		line 31 in file "Clock/Clock.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2780 ;;      Params:         0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0
  2782 ;;      Temps:          2       0       0       0       0
  2783 ;;      Totals:         2       0       0       0       0
  2784 ;;Total ram usage:        2 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    2
  2787 ;; This function calls:
  2788 ;;		_Clock_Hour_Setting
  2789 ;;		_Clock_Minutes_Setting
  2790 ;;		_Clock_Normal
  2791 ;;		___awdiv
  2792 ;;		___awmod
  2793 ;; This function is called by:
  2794 ;;		_Scheduler_Task3
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _Clock_Update
  2800  00C2                     _Clock_Update:
  2801  00C2                     i1l2518:	
  2802                           ;incstack = 0
  2803 ;; hardware stack exceeded
  2804                           ; Regs used in _Clock_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2805                           
  2806                           
  2807                           ;Clock/Clock.c: 33:     switch(MODE)
  2808  00C2  28D5               	goto	i1l2528
  2809  00C3                     i1l2520:
  2810                           
  2811                           ;Clock/Clock.c: 36:                               Clock_Normal();
  2812  00C3  120A  118A  23C1  120A  118A  	fcall	_Clock_Normal
  2813                           
  2814                           ;Clock/Clock.c: 37:                               break;
  2815  00C8  28EA               	goto	i1l2530
  2816  00C9                     i1l2522:
  2817                           
  2818                           ;Clock/Clock.c: 40:                               Clock_Hour_Setting();
  2819  00C9  120A  118A  24AE  120A  118A  	fcall	_Clock_Hour_Setting
  2820                           
  2821                           ;Clock/Clock.c: 41:                               break;
  2822  00CE  28EA               	goto	i1l2530
  2823  00CF                     i1l2524:
  2824                           
  2825                           ;Clock/Clock.c: 44:                               Clock_Minutes_Setting();
  2826  00CF  120A  118A  2447  120A  118A  	fcall	_Clock_Minutes_Setting
  2827                           
  2828                           ;Clock/Clock.c: 45:                               break;
  2829  00D4  28EA               	goto	i1l2530
  2830  00D5                     i1l2528:
  2831  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2832  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2833  00D7  0831               	movf	_MODE,w
  2834  00D8  00F8               	movwf	??_Clock_Update
  2835  00D9  01F9               	clrf	??_Clock_Update+1
  2836                           
  2837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2838                           ; Switch size 1, requested type "simple"
  2839                           ; Number of cases is 1, Range of values is 0 to 0
  2840                           ; switch strategies available:
  2841                           ; Name         Instructions Cycles
  2842                           ; simple_byte            4     3 (average)
  2843                           ; direct_byte           11     8 (fixed)
  2844                           ; jumptable            260     6 (fixed)
  2845                           ;	Chosen strategy is simple_byte
  2846  00DA  0879               	movf	??_Clock_Update+1,w
  2847  00DB  3A00               	xorlw	0	; case 0
  2848  00DC  1903               	skipnz
  2849  00DD  28DF               	goto	i1l2922
  2850  00DE  28EA               	goto	i1l2530
  2851  00DF                     i1l2922:
  2852                           
  2853                           ; Switch size 1, requested type "simple"
  2854                           ; Number of cases is 3, Range of values is 0 to 2
  2855                           ; switch strategies available:
  2856                           ; Name         Instructions Cycles
  2857                           ; simple_byte           10     6 (average)
  2858                           ; direct_byte           17     8 (fixed)
  2859                           ; jumptable            260     6 (fixed)
  2860                           ;	Chosen strategy is simple_byte
  2861  00DF  0878               	movf	??_Clock_Update,w
  2862  00E0  3A00               	xorlw	0	; case 0
  2863  00E1  1903               	skipnz
  2864  00E2  28C3               	goto	i1l2520
  2865  00E3  3A01               	xorlw	1	; case 1
  2866  00E4  1903               	skipnz
  2867  00E5  28C9               	goto	i1l2522
  2868  00E6  3A03               	xorlw	3	; case 2
  2869  00E7  1903               	skipnz
  2870  00E8  28CF               	goto	i1l2524
  2871  00E9  28EA               	goto	i1l2530
  2872  00EA                     i1l2530:
  2873                           
  2874                           ;Clock/Clock.c: 47:     Digit1=Clock.Minutes/10; Digit2=Clock.Minutes%10; Digit3=Clock.S
      +                          econd/10; Digit4=Clock.Second%10;
  2875  00EA  300A               	movlw	10
  2876  00EB  00F0               	movwf	___awdiv@divisor
  2877  00EC  3000               	movlw	0
  2878  00ED  00F1               	movwf	___awdiv@divisor+1
  2879  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2880  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2881  00F0  0825               	movf	_Clock+1,w
  2882  00F1  00F8               	movwf	??_Clock_Update
  2883  00F2  01F9               	clrf	??_Clock_Update+1
  2884  00F3  0878               	movf	??_Clock_Update,w
  2885  00F4  00F2               	movwf	___awdiv@dividend
  2886  00F5  0879               	movf	??_Clock_Update+1,w
  2887  00F6  00F3               	movwf	___awdiv@dividend+1
  2888  00F7  120A  118A  2145  120A  118A  	fcall	___awdiv
  2889  00FC  0870               	movf	?___awdiv,w
  2890  00FD  00FF               	movwf	btemp+1
  2891  00FE  087F               	movf	btemp+1,w
  2892  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2893  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2894  0101  00AD               	movwf	_Digit1
  2895  0102  300A               	movlw	10
  2896  0103  00F0               	movwf	___awmod@divisor
  2897  0104  3000               	movlw	0
  2898  0105  00F1               	movwf	___awmod@divisor+1
  2899  0106  0825               	movf	_Clock+1,w
  2900  0107  00F8               	movwf	??_Clock_Update
  2901  0108  01F9               	clrf	??_Clock_Update+1
  2902  0109  0878               	movf	??_Clock_Update,w
  2903  010A  00F2               	movwf	___awmod@dividend
  2904  010B  0879               	movf	??_Clock_Update+1,w
  2905  010C  00F3               	movwf	___awmod@dividend+1
  2906  010D  120A  118A  226E  120A  118A  	fcall	___awmod
  2907  0112  0870               	movf	?___awmod,w
  2908  0113  00FF               	movwf	btemp+1
  2909  0114  087F               	movf	btemp+1,w
  2910  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0117  00AC               	movwf	_Digit2
  2913  0118  300A               	movlw	10
  2914  0119  00F0               	movwf	___awdiv@divisor
  2915  011A  3000               	movlw	0
  2916  011B  00F1               	movwf	___awdiv@divisor+1
  2917  011C  0824               	movf	_Clock,w
  2918  011D  00F8               	movwf	??_Clock_Update
  2919  011E  01F9               	clrf	??_Clock_Update+1
  2920  011F  0878               	movf	??_Clock_Update,w
  2921  0120  00F2               	movwf	___awdiv@dividend
  2922  0121  0879               	movf	??_Clock_Update+1,w
  2923  0122  00F3               	movwf	___awdiv@dividend+1
  2924  0123  120A  118A  2145  120A  118A  	fcall	___awdiv
  2925  0128  0870               	movf	?___awdiv,w
  2926  0129  00FF               	movwf	btemp+1
  2927  012A  087F               	movf	btemp+1,w
  2928  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2929  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2930  012D  00AB               	movwf	_Digit3
  2931  012E  300A               	movlw	10
  2932  012F  00F0               	movwf	___awmod@divisor
  2933  0130  3000               	movlw	0
  2934  0131  00F1               	movwf	___awmod@divisor+1
  2935  0132  0824               	movf	_Clock,w
  2936  0133  00F8               	movwf	??_Clock_Update
  2937  0134  01F9               	clrf	??_Clock_Update+1
  2938  0135  0878               	movf	??_Clock_Update,w
  2939  0136  00F2               	movwf	___awmod@dividend
  2940  0137  0879               	movf	??_Clock_Update+1,w
  2941  0138  00F3               	movwf	___awmod@dividend+1
  2942  0139  120A  118A  226E  120A  118A  	fcall	___awmod
  2943  013E  0870               	movf	?___awmod,w
  2944  013F  00FF               	movwf	btemp+1
  2945  0140  087F               	movf	btemp+1,w
  2946  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0143  00AA               	movwf	_Digit4
  2949  0144                     i1l311:
  2950  0144  0008               	return
  2951  0145                     __end_of_Clock_Update:
  2952                           
  2953                           	psect	text19
  2954  0145                     __ptext19:	
  2955 ;; *************** function ___awdiv *****************
  2956 ;; Defined at:
  2957 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  divisor         2    0[COMMON] int 
  2960 ;;  dividend        2    2[COMMON] int 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  quotient        2    6[COMMON] int 
  2963 ;;  sign            1    5[COMMON] unsigned char 
  2964 ;;  counter         1    4[COMMON] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  2    0[COMMON] int 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, btemp+1
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2974 ;;      Params:         4       0       0       0       0
  2975 ;;      Locals:         4       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0
  2977 ;;      Totals:         8       0       0       0       0
  2978 ;;Total ram usage:        8 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_Clock_Update
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function ___awdiv
  2989  0145                     ___awdiv:
  2990  0145                     i1l2378:	
  2991                           ;incstack = 0
  2992                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2993                           
  2994  0145  01F5               	clrf	___awdiv@sign
  2995  0146                     i1l2380:
  2996  0146  1FF1               	btfss	___awdiv@divisor+1,7
  2997  0147  2949               	goto	u159_21
  2998  0148  294A               	goto	u159_20
  2999  0149                     u159_21:
  3000  0149  2951               	goto	i1l2386
  3001  014A                     u159_20:
  3002  014A                     i1l2382:
  3003  014A  09F0               	comf	___awdiv@divisor,f
  3004  014B  09F1               	comf	___awdiv@divisor+1,f
  3005  014C  0AF0               	incf	___awdiv@divisor,f
  3006  014D  1903               	skipnz
  3007  014E  0AF1               	incf	___awdiv@divisor+1,f
  3008  014F                     i1l2384:
  3009  014F  01F5               	clrf	___awdiv@sign
  3010  0150  0AF5               	incf	___awdiv@sign,f
  3011  0151                     i1l2386:
  3012  0151  1FF3               	btfss	___awdiv@dividend+1,7
  3013  0152  2954               	goto	u160_21
  3014  0153  2955               	goto	u160_20
  3015  0154                     u160_21:
  3016  0154  295E               	goto	i1l2392
  3017  0155                     u160_20:
  3018  0155                     i1l2388:
  3019  0155  09F2               	comf	___awdiv@dividend,f
  3020  0156  09F3               	comf	___awdiv@dividend+1,f
  3021  0157  0AF2               	incf	___awdiv@dividend,f
  3022  0158  1903               	skipnz
  3023  0159  0AF3               	incf	___awdiv@dividend+1,f
  3024  015A                     i1l2390:
  3025  015A  3001               	movlw	1
  3026  015B  00FF               	movwf	btemp+1
  3027  015C  087F               	movf	btemp+1,w
  3028  015D  06F5               	xorwf	___awdiv@sign,f
  3029  015E                     i1l2392:
  3030  015E  01F6               	clrf	___awdiv@quotient
  3031  015F  01F7               	clrf	___awdiv@quotient+1
  3032  0160                     i1l2394:
  3033  0160  0870               	movf	___awdiv@divisor,w
  3034  0161  0471               	iorwf	___awdiv@divisor+1,w
  3035  0162  1903               	btfsc	3,2
  3036  0163  2965               	goto	u161_21
  3037  0164  2966               	goto	u161_20
  3038  0165                     u161_21:
  3039  0165  299D               	goto	i1l2414
  3040  0166                     u161_20:
  3041  0166                     i1l2396:
  3042  0166  01F4               	clrf	___awdiv@counter
  3043  0167  0AF4               	incf	___awdiv@counter,f
  3044  0168  2974               	goto	i1l2402
  3045  0169                     i1l2398:
  3046  0169  3001               	movlw	1
  3047  016A                     u162_25:
  3048  016A  1003               	clrc
  3049  016B  0DF0               	rlf	___awdiv@divisor,f
  3050  016C  0DF1               	rlf	___awdiv@divisor+1,f
  3051  016D  3EFF               	addlw	-1
  3052  016E  1D03               	skipz
  3053  016F  296A               	goto	u162_25
  3054  0170                     i1l2400:
  3055  0170  3001               	movlw	1
  3056  0171  00FF               	movwf	btemp+1
  3057  0172  087F               	movf	btemp+1,w
  3058  0173  07F4               	addwf	___awdiv@counter,f
  3059  0174                     i1l2402:
  3060  0174  1FF1               	btfss	___awdiv@divisor+1,7
  3061  0175  2977               	goto	u163_21
  3062  0176  2978               	goto	u163_20
  3063  0177                     u163_21:
  3064  0177  2969               	goto	i1l2398
  3065  0178                     u163_20:
  3066  0178                     i1l2404:
  3067  0178  3001               	movlw	1
  3068  0179                     u164_25:
  3069  0179  1003               	clrc
  3070  017A  0DF6               	rlf	___awdiv@quotient,f
  3071  017B  0DF7               	rlf	___awdiv@quotient+1,f
  3072  017C  3EFF               	addlw	-1
  3073  017D  1D03               	skipz
  3074  017E  2979               	goto	u164_25
  3075  017F  0871               	movf	___awdiv@divisor+1,w
  3076  0180  0273               	subwf	___awdiv@dividend+1,w
  3077  0181  1D03               	skipz
  3078  0182  2985               	goto	u165_25
  3079  0183  0870               	movf	___awdiv@divisor,w
  3080  0184  0272               	subwf	___awdiv@dividend,w
  3081  0185                     u165_25:
  3082  0185  1C03               	skipc
  3083  0186  2988               	goto	u165_21
  3084  0187  2989               	goto	u165_20
  3085  0188                     u165_21:
  3086  0188  2990               	goto	i1l2410
  3087  0189                     u165_20:
  3088  0189                     i1l2406:
  3089  0189  0870               	movf	___awdiv@divisor,w
  3090  018A  02F2               	subwf	___awdiv@dividend,f
  3091  018B  0871               	movf	___awdiv@divisor+1,w
  3092  018C  1C03               	skipc
  3093  018D  03F3               	decf	___awdiv@dividend+1,f
  3094  018E  02F3               	subwf	___awdiv@dividend+1,f
  3095  018F                     i1l2408:
  3096  018F  1476               	bsf	___awdiv@quotient,0
  3097  0190                     i1l2410:
  3098  0190  3001               	movlw	1
  3099  0191                     u166_25:
  3100  0191  1003               	clrc
  3101  0192  0CF1               	rrf	___awdiv@divisor+1,f
  3102  0193  0CF0               	rrf	___awdiv@divisor,f
  3103  0194  3EFF               	addlw	-1
  3104  0195  1D03               	skipz
  3105  0196  2991               	goto	u166_25
  3106  0197                     i1l2412:
  3107  0197  3001               	movlw	1
  3108  0198  02F4               	subwf	___awdiv@counter,f
  3109  0199  1D03               	btfss	3,2
  3110  019A  299C               	goto	u167_21
  3111  019B  299D               	goto	u167_20
  3112  019C                     u167_21:
  3113  019C  2978               	goto	i1l2404
  3114  019D                     u167_20:
  3115  019D                     i1l2414:
  3116  019D  0875               	movf	___awdiv@sign,w
  3117  019E  1903               	btfsc	3,2
  3118  019F  29A1               	goto	u168_21
  3119  01A0  29A2               	goto	u168_20
  3120  01A1                     u168_21:
  3121  01A1  29A7               	goto	i1l2418
  3122  01A2                     u168_20:
  3123  01A2                     i1l2416:
  3124  01A2  09F6               	comf	___awdiv@quotient,f
  3125  01A3  09F7               	comf	___awdiv@quotient+1,f
  3126  01A4  0AF6               	incf	___awdiv@quotient,f
  3127  01A5  1903               	skipnz
  3128  01A6  0AF7               	incf	___awdiv@quotient+1,f
  3129  01A7                     i1l2418:
  3130  01A7  0877               	movf	___awdiv@quotient+1,w
  3131  01A8  00F1               	movwf	?___awdiv+1
  3132  01A9  0876               	movf	___awdiv@quotient,w
  3133  01AA  00F0               	movwf	?___awdiv
  3134  01AB                     i1l633:
  3135  01AB  0008               	return
  3136  01AC                     __end_of___awdiv:
  3137                           
  3138                           	psect	text20
  3139  03C1                     __ptext20:	
  3140 ;; *************** function _Clock_Normal *****************
  3141 ;; Defined at:
  3142 ;;		line 52 in file "Clock/Clock.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          2       0       0       0       0
  3159 ;;      Totals:         2       0       0       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    1
  3163 ;; This function calls:
  3164 ;;		___wmul
  3165 ;; This function is called by:
  3166 ;;		_Clock_Update
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function _Clock_Normal
  3172  03C1                     _Clock_Normal:
  3173  03C1                     i1l2306:	
  3174                           ;incstack = 0
  3175 ;; hardware stack exceeded
  3176                           ; Regs used in _Clock_Normal: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3177                           
  3178                           
  3179                           ;Clock/Clock.c: 54:     static uint8_t counter=0;;Clock/Clock.c: 55:     counter++;
  3180  03C1  3001               	movlw	1
  3181  03C2  00FF               	movwf	btemp+1
  3182  03C3  087F               	movf	btemp+1,w
  3183  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3184  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3185  03C6  07A9               	addwf	Clock_Normal@counter,f
  3186  03C7                     i1l2308:
  3187                           
  3188                           ;Clock/Clock.c: 56:     if(counter*100==1000)
  3189  03C7  0829               	movf	Clock_Normal@counter,w
  3190  03C8  00F6               	movwf	??_Clock_Normal
  3191  03C9  01F7               	clrf	??_Clock_Normal+1
  3192  03CA  0876               	movf	??_Clock_Normal,w
  3193  03CB  00F0               	movwf	___wmul@multiplier
  3194  03CC  0877               	movf	??_Clock_Normal+1,w
  3195  03CD  00F1               	movwf	___wmul@multiplier+1
  3196  03CE  3064               	movlw	100
  3197  03CF  00F2               	movwf	___wmul@multiplicand
  3198  03D0  3000               	movlw	0
  3199  03D1  00F3               	movwf	___wmul@multiplicand+1
  3200  03D2  120A  118A  2556  120A  118A  	fcall	___wmul
  3201  03D7  30E8               	movlw	232
  3202  03D8  0670               	xorwf	?___wmul,w
  3203  03D9  3003               	movlw	3
  3204  03DA  1903               	skipnz
  3205  03DB  0671               	xorwf	?___wmul+1,w
  3206  03DC  1D03               	btfss	3,2
  3207  03DD  2BDF               	goto	u143_21
  3208  03DE  2BE0               	goto	u143_20
  3209  03DF                     u143_21:
  3210  03DF  2BE7               	goto	i1l2314
  3211  03E0                     u143_20:
  3212  03E0                     i1l2310:
  3213                           
  3214                           ;Clock/Clock.c: 57:     {;Clock/Clock.c: 58:        Clock.Second++;
  3215  03E0  3001               	movlw	1
  3216  03E1  00FF               	movwf	btemp+1
  3217  03E2  087F               	movf	btemp+1,w
  3218  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3219  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3220  03E5  07A4               	addwf	_Clock,f
  3221  03E6                     i1l2312:
  3222                           
  3223                           ;Clock/Clock.c: 59:      counter=0;
  3224  03E6  01A9               	clrf	Clock_Normal@counter
  3225  03E7                     i1l2314:
  3226                           
  3227                           ;Clock/Clock.c: 63:     if(Clock.Second==60)
  3228  03E7  303C               	movlw	60
  3229  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3230  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3231  03EA  0624               	xorwf	_Clock,w
  3232  03EB  1D03               	btfss	3,2
  3233  03EC  2BEE               	goto	u144_21
  3234  03ED  2BEF               	goto	u144_20
  3235  03EE                     u144_21:
  3236  03EE  2BF4               	goto	i1l2320
  3237  03EF                     u144_20:
  3238  03EF                     i1l2316:
  3239                           
  3240                           ;Clock/Clock.c: 64:     {;Clock/Clock.c: 65:       Clock.Minutes++;
  3241  03EF  3001               	movlw	1
  3242  03F0  00FF               	movwf	btemp+1
  3243  03F1  087F               	movf	btemp+1,w
  3244  03F2  07A5               	addwf	_Clock+1,f
  3245  03F3                     i1l2318:
  3246                           
  3247                           ;Clock/Clock.c: 66:       Clock.Second=0;
  3248  03F3  01A4               	clrf	_Clock
  3249  03F4                     i1l2320:
  3250                           
  3251                           ;Clock/Clock.c: 69:     if(Clock.Minutes==60)
  3252  03F4  303C               	movlw	60
  3253  03F5  0625               	xorwf	_Clock+1,w
  3254  03F6  1D03               	btfss	3,2
  3255  03F7  2BF9               	goto	u145_21
  3256  03F8  2BFA               	goto	u145_20
  3257  03F9                     u145_21:
  3258  03F9  2BFF               	goto	i1l2326
  3259  03FA                     u145_20:
  3260  03FA                     i1l2322:
  3261                           
  3262                           ;Clock/Clock.c: 70:     {;Clock/Clock.c: 71:       Clock.Hours++;
  3263  03FA  3001               	movlw	1
  3264  03FB  00FF               	movwf	btemp+1
  3265  03FC  087F               	movf	btemp+1,w
  3266  03FD  07A6               	addwf	_Clock+2,f
  3267  03FE                     i1l2324:
  3268                           
  3269                           ;Clock/Clock.c: 72:       Clock.Minutes=0;
  3270  03FE  01A5               	clrf	_Clock+1
  3271  03FF                     i1l2326:
  3272                           
  3273                           ;Clock/Clock.c: 74:     if(Clock.Hours==24)
  3274  03FF  3018               	movlw	24
  3275  0400  0626               	xorwf	_Clock+2,w
  3276  0401  1D03               	btfss	3,2
  3277  0402  2C04               	goto	u146_21
  3278  0403  2C05               	goto	u146_20
  3279  0404                     u146_21:
  3280  0404  2C06               	goto	i1l320
  3281  0405                     u146_20:
  3282  0405                     i1l2328:
  3283                           
  3284                           ;Clock/Clock.c: 75:     {;Clock/Clock.c: 76:       Clock.Hours=0;
  3285  0405  01A6               	clrf	_Clock+2
  3286  0406                     i1l320:
  3287  0406  0008               	return
  3288  0407                     __end_of_Clock_Normal:
  3289                           
  3290                           	psect	text21
  3291  0556                     __ptext21:	
  3292 ;; *************** function ___wmul *****************
  3293 ;; Defined at:
  3294 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  multiplier      2    0[COMMON] unsigned int 
  3297 ;;  multiplicand    2    2[COMMON] unsigned int 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  product         2    4[COMMON] unsigned int 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2    0[COMMON] unsigned int 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         4       0       0       0       0
  3310 ;;      Locals:         2       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0
  3312 ;;      Totals:         6       0       0       0       0
  3313 ;;Total ram usage:        6 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_Clock_Normal
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function ___wmul
  3324  0556                     ___wmul:
  3325  0556                     i1l2210:	
  3326                           ;incstack = 0
  3327 ;; hardware stack exceeded
  3328                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3329                           
  3330  0556  01F4               	clrf	___wmul@product
  3331  0557  01F5               	clrf	___wmul@product+1
  3332  0558                     i1l2212:
  3333  0558  1C70               	btfss	___wmul@multiplier,0
  3334  0559  2D5B               	goto	u128_21
  3335  055A  2D5C               	goto	u128_20
  3336  055B                     u128_21:
  3337  055B  2D62               	goto	i1l480
  3338  055C                     u128_20:
  3339  055C                     i1l2214:
  3340  055C  0872               	movf	___wmul@multiplicand,w
  3341  055D  07F4               	addwf	___wmul@product,f
  3342  055E  1803               	skipnc
  3343  055F  0AF5               	incf	___wmul@product+1,f
  3344  0560  0873               	movf	___wmul@multiplicand+1,w
  3345  0561  07F5               	addwf	___wmul@product+1,f
  3346  0562                     i1l480:
  3347  0562  3001               	movlw	1
  3348  0563                     u129_25:
  3349  0563  1003               	clrc
  3350  0564  0DF2               	rlf	___wmul@multiplicand,f
  3351  0565  0DF3               	rlf	___wmul@multiplicand+1,f
  3352  0566  3EFF               	addlw	-1
  3353  0567  1D03               	skipz
  3354  0568  2D63               	goto	u129_25
  3355  0569                     i1l2216:
  3356  0569  3001               	movlw	1
  3357  056A                     u130_25:
  3358  056A  1003               	clrc
  3359  056B  0CF1               	rrf	___wmul@multiplier+1,f
  3360  056C  0CF0               	rrf	___wmul@multiplier,f
  3361  056D  3EFF               	addlw	-1
  3362  056E  1D03               	skipz
  3363  056F  2D6A               	goto	u130_25
  3364  0570                     i1l2218:
  3365  0570  0870               	movf	___wmul@multiplier,w
  3366  0571  0471               	iorwf	___wmul@multiplier+1,w
  3367  0572  1D03               	btfss	3,2
  3368  0573  2D75               	goto	u131_21
  3369  0574  2D76               	goto	u131_20
  3370  0575                     u131_21:
  3371  0575  2D58               	goto	i1l2212
  3372  0576                     u131_20:
  3373  0576                     i1l2220:
  3374  0576  0875               	movf	___wmul@product+1,w
  3375  0577  00F1               	movwf	?___wmul+1
  3376  0578  0874               	movf	___wmul@product,w
  3377  0579  00F0               	movwf	?___wmul
  3378  057A                     i1l482:
  3379  057A  0008               	return
  3380  057B                     __end_of___wmul:
  3381                           
  3382                           	psect	text22
  3383  0447                     __ptext22:	
  3384 ;; *************** function _Clock_Minutes_Setting *****************
  3385 ;; Defined at:
  3386 ;;		line 113 in file "Clock/Clock.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0, btemp+1
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_Clock_Update
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _Clock_Minutes_Setting
  3415  0447                     _Clock_Minutes_Setting:
  3416  0447                     i1l2352:	
  3417                           ;incstack = 0
  3418                           ; Regs used in _Clock_Minutes_Setting: [wreg+status,2+status,0+btemp+1]
  3419                           
  3420                           
  3421                           ;Clock/Clock.c: 115:   if(ButtonsFlag.UpButton_Flag&&!ButtonsFlag.DownButton_Flag)
  3422  0447  1C7D               	btfss	_ButtonsFlag,0
  3423  0448  2C4A               	goto	u153_21
  3424  0449  2C4B               	goto	u153_20
  3425  044A                     u153_21:
  3426  044A  2C63               	goto	i1l333
  3427  044B                     u153_20:
  3428  044B                     i1l2354:
  3429  044B  18FD               	btfsc	_ButtonsFlag,1
  3430  044C  2C4E               	goto	u154_21
  3431  044D  2C4F               	goto	u154_20
  3432  044E                     u154_21:
  3433  044E  2C63               	goto	i1l333
  3434  044F                     u154_20:
  3435  044F                     i1l2356:
  3436                           
  3437                           ;Clock/Clock.c: 116:     {;Clock/Clock.c: 117:         if(Clock.Minutes==59)
  3438  044F  303B               	movlw	59
  3439  0450  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0451  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0452  0625               	xorwf	_Clock+1,w
  3442  0453  1D03               	btfss	3,2
  3443  0454  2C56               	goto	u155_21
  3444  0455  2C57               	goto	u155_20
  3445  0456                     u155_21:
  3446  0456  2C5D               	goto	i1l2362
  3447  0457                     u155_20:
  3448  0457                     i1l2358:
  3449                           
  3450                           ;Clock/Clock.c: 118:         {;Clock/Clock.c: 119:             Clock.Hours++;
  3451  0457  3001               	movlw	1
  3452  0458  00FF               	movwf	btemp+1
  3453  0459  087F               	movf	btemp+1,w
  3454  045A  07A6               	addwf	_Clock+2,f
  3455  045B                     i1l2360:
  3456                           
  3457                           ;Clock/Clock.c: 120:             Clock.Minutes=0;
  3458  045B  01A5               	clrf	_Clock+1
  3459                           
  3460                           ;Clock/Clock.c: 121:         }
  3461  045C  2C61               	goto	i1l2364
  3462  045D                     i1l2362:
  3463                           
  3464                           ;Clock/Clock.c: 123:         {;Clock/Clock.c: 124:             Clock.Minutes++;
  3465  045D  3001               	movlw	1
  3466  045E  00FF               	movwf	btemp+1
  3467  045F  087F               	movf	btemp+1,w
  3468  0460  07A5               	addwf	_Clock+1,f
  3469  0461                     i1l2364:
  3470                           
  3471                           ;Clock/Clock.c: 126:         ButtonsFlag.UpButton_Flag=0;
  3472  0461  107D               	bcf	_ButtonsFlag,0
  3473                           
  3474                           ;Clock/Clock.c: 127:     }
  3475  0462  2C7C               	goto	i1l340
  3476  0463                     i1l333:	
  3477                           ;Clock/Clock.c: 128:     else if(ButtonsFlag.DownButton_Flag&&!ButtonsFlag.UpButton_Flag
      +                          )
  3478                           
  3479  0463  1CFD               	btfss	_ButtonsFlag,1
  3480  0464  2C66               	goto	u156_21
  3481  0465  2C67               	goto	u156_20
  3482  0466                     u156_21:
  3483  0466  2C7C               	goto	i1l340
  3484  0467                     u156_20:
  3485  0467                     i1l2366:
  3486  0467  187D               	btfsc	_ButtonsFlag,0
  3487  0468  2C6A               	goto	u157_21
  3488  0469  2C6B               	goto	u157_20
  3489  046A                     u157_21:
  3490  046A  2C7C               	goto	i1l340
  3491  046B                     u157_20:
  3492  046B                     i1l2368:
  3493                           
  3494                           ;Clock/Clock.c: 129:     {;Clock/Clock.c: 130:         if(Clock.Minutes==0)
  3495  046B  1283               	bcf	3,5	;RP0=0, select bank0
  3496  046C  1303               	bcf	3,6	;RP1=0, select bank0
  3497  046D  0825               	movf	_Clock+1,w
  3498  046E  1D03               	btfss	3,2
  3499  046F  2C71               	goto	u158_21
  3500  0470  2C72               	goto	u158_20
  3501  0471                     u158_21:
  3502  0471  2C79               	goto	i1l2374
  3503  0472                     u158_20:
  3504  0472                     i1l2370:
  3505                           
  3506                           ;Clock/Clock.c: 131:         {;Clock/Clock.c: 132:             Clock.Hours--;
  3507  0472  3001               	movlw	1
  3508  0473  02A6               	subwf	_Clock+2,f
  3509  0474                     i1l2372:
  3510                           
  3511                           ;Clock/Clock.c: 133:             Clock.Minutes=59;
  3512  0474  303B               	movlw	59
  3513  0475  00FF               	movwf	btemp+1
  3514  0476  087F               	movf	btemp+1,w
  3515  0477  00A5               	movwf	_Clock+1
  3516                           
  3517                           ;Clock/Clock.c: 134:         }
  3518  0478  2C7B               	goto	i1l2376
  3519  0479                     i1l2374:
  3520                           
  3521                           ;Clock/Clock.c: 136:         {;Clock/Clock.c: 137:             Clock.Minutes--;
  3522  0479  3001               	movlw	1
  3523  047A  02A5               	subwf	_Clock+1,f
  3524  047B                     i1l2376:
  3525                           
  3526                           ;Clock/Clock.c: 139:         ButtonsFlag.DownButton_Flag=0;
  3527  047B  10FD               	bcf	_ButtonsFlag,1
  3528  047C                     i1l340:
  3529  047C  0008               	return
  3530  047D                     __end_of_Clock_Minutes_Setting:
  3531                           
  3532                           	psect	text23
  3533  04AE                     __ptext23:	
  3534 ;; *************** function _Clock_Hour_Setting *****************
  3535 ;; Defined at:
  3536 ;;		line 82 in file "Clock/Clock.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, btemp+1
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0
  3553 ;;      Totals:         0       0       0       0       0
  3554 ;;Total ram usage:        0 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_Clock_Update
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           
  3564                           ;psect for function _Clock_Hour_Setting
  3565  04AE                     _Clock_Hour_Setting:
  3566  04AE                     i1l2330:	
  3567                           ;incstack = 0
  3568                           ; Regs used in _Clock_Hour_Setting: [wreg+status,2+status,0+btemp+1]
  3569                           
  3570                           
  3571                           ;Clock/Clock.c: 84:     if(ButtonsFlag.UpButton_Flag&&!ButtonsFlag.DownButton_Flag)
  3572  04AE  1C7D               	btfss	_ButtonsFlag,0
  3573  04AF  2CB1               	goto	u147_21
  3574  04B0  2CB2               	goto	u147_20
  3575  04B1                     u147_21:
  3576  04B1  2CC6               	goto	i1l323
  3577  04B2                     u147_20:
  3578  04B2                     i1l2332:
  3579  04B2  18FD               	btfsc	_ButtonsFlag,1
  3580  04B3  2CB5               	goto	u148_21
  3581  04B4  2CB6               	goto	u148_20
  3582  04B5                     u148_21:
  3583  04B5  2CC6               	goto	i1l323
  3584  04B6                     u148_20:
  3585  04B6                     i1l2334:
  3586                           
  3587                           ;Clock/Clock.c: 85:     {;Clock/Clock.c: 86:         if(Clock.Hours==23)
  3588  04B6  3017               	movlw	23
  3589  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3590  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3591  04B9  0626               	xorwf	_Clock+2,w
  3592  04BA  1D03               	btfss	3,2
  3593  04BB  2CBD               	goto	u149_21
  3594  04BC  2CBE               	goto	u149_20
  3595  04BD                     u149_21:
  3596  04BD  2CC0               	goto	i1l2338
  3597  04BE                     u149_20:
  3598  04BE                     i1l2336:
  3599                           
  3600                           ;Clock/Clock.c: 87:         {;Clock/Clock.c: 88:             Clock.Hours=0;
  3601  04BE  01A6               	clrf	_Clock+2
  3602                           
  3603                           ;Clock/Clock.c: 89:         }
  3604  04BF  2CC4               	goto	i1l2340
  3605  04C0                     i1l2338:
  3606                           
  3607                           ;Clock/Clock.c: 91:         {;Clock/Clock.c: 92:             Clock.Hours++;
  3608  04C0  3001               	movlw	1
  3609  04C1  00FF               	movwf	btemp+1
  3610  04C2  087F               	movf	btemp+1,w
  3611  04C3  07A6               	addwf	_Clock+2,f
  3612  04C4                     i1l2340:
  3613                           
  3614                           ;Clock/Clock.c: 94:         ButtonsFlag.UpButton_Flag=0;
  3615  04C4  107D               	bcf	_ButtonsFlag,0
  3616                           
  3617                           ;Clock/Clock.c: 95:     }
  3618  04C5  2CDD               	goto	i1l330
  3619  04C6                     i1l323:	
  3620                           ;Clock/Clock.c: 96:     else if(ButtonsFlag.DownButton_Flag&&!ButtonsFlag.UpButton_Flag)
  3621                           
  3622  04C6  1CFD               	btfss	_ButtonsFlag,1
  3623  04C7  2CC9               	goto	u150_21
  3624  04C8  2CCA               	goto	u150_20
  3625  04C9                     u150_21:
  3626  04C9  2CDD               	goto	i1l330
  3627  04CA                     u150_20:
  3628  04CA                     i1l2342:
  3629  04CA  187D               	btfsc	_ButtonsFlag,0
  3630  04CB  2CCD               	goto	u151_21
  3631  04CC  2CCE               	goto	u151_20
  3632  04CD                     u151_21:
  3633  04CD  2CDD               	goto	i1l330
  3634  04CE                     u151_20:
  3635  04CE                     i1l2344:
  3636                           
  3637                           ;Clock/Clock.c: 97:     {;Clock/Clock.c: 98:          if(Clock.Hours==0)
  3638  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  3639  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  3640  04D0  0826               	movf	_Clock+2,w
  3641  04D1  1D03               	btfss	3,2
  3642  04D2  2CD4               	goto	u152_21
  3643  04D3  2CD5               	goto	u152_20
  3644  04D4                     u152_21:
  3645  04D4  2CDA               	goto	i1l2348
  3646  04D5                     u152_20:
  3647  04D5                     i1l2346:
  3648                           
  3649                           ;Clock/Clock.c: 99:         {;Clock/Clock.c: 100:             Clock.Hours=23;
  3650  04D5  3017               	movlw	23
  3651  04D6  00FF               	movwf	btemp+1
  3652  04D7  087F               	movf	btemp+1,w
  3653  04D8  00A6               	movwf	_Clock+2
  3654                           
  3655                           ;Clock/Clock.c: 101:         }
  3656  04D9  2CDC               	goto	i1l2350
  3657  04DA                     i1l2348:
  3658                           
  3659                           ;Clock/Clock.c: 103:         {;Clock/Clock.c: 104:          Clock.Hours--;
  3660  04DA  3001               	movlw	1
  3661  04DB  02A6               	subwf	_Clock+2,f
  3662  04DC                     i1l2350:
  3663                           
  3664                           ;Clock/Clock.c: 106:         ButtonsFlag.DownButton_Flag=0;
  3665  04DC  10FD               	bcf	_ButtonsFlag,1
  3666  04DD                     i1l330:
  3667  04DD  0008               	return
  3668  04DE                     __end_of_Clock_Hour_Setting:
  3669                           
  3670                           	psect	text24
  3671  0530                     __ptext24:	
  3672 ;; *************** function _ModeManager_Update *****************
  3673 ;; Defined at:
  3674 ;;		line 17 in file "ModeManger/ModeManager.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3688 ;;      Params:         0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0
  3690 ;;      Temps:          2       0       0       0       0
  3691 ;;      Totals:         2       0       0       0       0
  3692 ;;Total ram usage:        2 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_Scheduler_Task2
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _ModeManager_Update
  3703  0530                     _ModeManager_Update:
  3704  0530                     i1l2502:	
  3705                           ;incstack = 0
  3706                           ; Regs used in _ModeManager_Update: [wreg-fsr0h+status,2+status,0+btemp+1]
  3707                           
  3708                           
  3709                           ;ModeManger/ModeManager.c: 20:     if(ButtonsFlag.SettingButton_Flag)
  3710  0530  1D7D               	btfss	_ButtonsFlag,2
  3711  0531  2D33               	goto	u184_21
  3712  0532  2D34               	goto	u184_20
  3713  0533                     u184_21:
  3714  0533  2D55               	goto	i1l228
  3715  0534                     u184_20:
  3716  0534  2D3F               	goto	i1l2512
  3717  0535                     i1l224:	
  3718                           ;ModeManger/ModeManager.c: 24:         {;ModeManger/ModeManager.c: 25:             case 
      +                          Normal_Mode:
  3719                           
  3720                           
  3721                           ;ModeManger/ModeManager.c: 26:                          MODE=Hours_Mode;
  3722  0535  01B1               	clrf	_MODE
  3723  0536  0AB1               	incf	_MODE,f
  3724                           
  3725                           ;ModeManger/ModeManager.c: 27:                          break;
  3726  0537  2D54               	goto	i1l225
  3727  0538                     i1l2506:
  3728                           
  3729                           ;ModeManger/ModeManager.c: 30:                          MODE=Minutes_Mode;
  3730  0538  3002               	movlw	2
  3731  0539  00FF               	movwf	btemp+1
  3732  053A  087F               	movf	btemp+1,w
  3733  053B  00B1               	movwf	_MODE
  3734                           
  3735                           ;ModeManger/ModeManager.c: 31:                          break;
  3736  053C  2D54               	goto	i1l225
  3737  053D                     i1l2508:
  3738                           
  3739                           ;ModeManger/ModeManager.c: 34:                          MODE=Normal_Mode;
  3740  053D  01B1               	clrf	_MODE
  3741                           
  3742                           ;ModeManger/ModeManager.c: 35:                          break;
  3743  053E  2D54               	goto	i1l225
  3744  053F                     i1l2512:
  3745  053F  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0540  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0541  0831               	movf	_MODE,w
  3748  0542  00F0               	movwf	??_ModeManager_Update
  3749  0543  01F1               	clrf	??_ModeManager_Update+1
  3750                           
  3751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3752                           ; Switch size 1, requested type "simple"
  3753                           ; Number of cases is 1, Range of values is 0 to 0
  3754                           ; switch strategies available:
  3755                           ; Name         Instructions Cycles
  3756                           ; simple_byte            4     3 (average)
  3757                           ; direct_byte           11     8 (fixed)
  3758                           ; jumptable            260     6 (fixed)
  3759                           ;	Chosen strategy is simple_byte
  3760  0544  0871               	movf	??_ModeManager_Update+1,w
  3761  0545  3A00               	xorlw	0	; case 0
  3762  0546  1903               	skipnz
  3763  0547  2D49               	goto	i1l2924
  3764  0548  2D54               	goto	i1l225
  3765  0549                     i1l2924:
  3766                           
  3767                           ; Switch size 1, requested type "simple"
  3768                           ; Number of cases is 3, Range of values is 0 to 2
  3769                           ; switch strategies available:
  3770                           ; Name         Instructions Cycles
  3771                           ; simple_byte           10     6 (average)
  3772                           ; direct_byte           17     8 (fixed)
  3773                           ; jumptable            260     6 (fixed)
  3774                           ;	Chosen strategy is simple_byte
  3775  0549  0870               	movf	??_ModeManager_Update,w
  3776  054A  3A00               	xorlw	0	; case 0
  3777  054B  1903               	skipnz
  3778  054C  2D35               	goto	i1l224
  3779  054D  3A01               	xorlw	1	; case 1
  3780  054E  1903               	skipnz
  3781  054F  2D38               	goto	i1l2506
  3782  0550  3A03               	xorlw	3	; case 2
  3783  0551  1903               	skipnz
  3784  0552  2D3D               	goto	i1l2508
  3785  0553  2D54               	goto	i1l225
  3786  0554                     i1l225:
  3787                           
  3788                           ;ModeManger/ModeManager.c: 37:         ButtonsFlag.SettingButton_Flag=0;
  3789  0554  117D               	bcf	_ButtonsFlag,2
  3790  0555                     i1l228:
  3791  0555  0008               	return
  3792  0556                     __end_of_ModeManager_Update:
  3793                           
  3794                           	psect	text25
  3795  031D                     __ptext25:	
  3796 ;; *************** function _Buttons_Update *****************
  3797 ;; Defined at:
  3798 ;;		line 27 in file "Buttons/Buttons.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0
  3815 ;;      Totals:         0       0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    1
  3819 ;; This function calls:
  3820 ;;		___awmod
  3821 ;; This function is called by:
  3822 ;;		_Scheduler_Task2
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _Buttons_Update
  3828  031D                     _Buttons_Update:
  3829  031D                     i1l2460:	
  3830                           ;incstack = 0
  3831                           ; Regs used in _Buttons_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3832                           
  3833                           
  3834                           ;Buttons/Buttons.c: 29:     static uint8_t Debounce_Counter=0;;Buttons/Buttons.c: 30:   
      +                            Debounce_UpButton[Debounce_Counter]=(PORTB&(1<<2));
  3835  031D  1283               	bcf	3,5	;RP0=0, select bank0
  3836  031E  1303               	bcf	3,6	;RP1=0, select bank0
  3837  031F  0806               	movf	6,w	;volatile
  3838  0320  3904               	andlw	4
  3839  0321  00FF               	movwf	btemp+1
  3840  0322  082F               	movf	Buttons_Update@Debounce_Counter,w
  3841  0323  3E35               	addlw	(low (_Debounce_UpButton| 0))& (0+255)
  3842  0324  0084               	movwf	4
  3843  0325  087F               	movf	btemp+1,w
  3844  0326  1383               	bcf	3,7	;select IRP bank0
  3845  0327  0080               	movwf	0
  3846                           
  3847                           ;Buttons/Buttons.c: 31:     Debounce_DownButton[Debounce_Counter]=(PORTB&(1<<1));
  3848  0328  0806               	movf	6,w	;volatile
  3849  0329  3902               	andlw	2
  3850  032A  00FF               	movwf	btemp+1
  3851  032B  082F               	movf	Buttons_Update@Debounce_Counter,w
  3852  032C  3E32               	addlw	(low (_Debounce_DownButton| 0))& (0+255)
  3853  032D  0084               	movwf	4
  3854  032E  087F               	movf	btemp+1,w
  3855  032F  0080               	movwf	0
  3856  0330                     i1l2462:
  3857                           
  3858                           ;Buttons/Buttons.c: 33:     Debounce_Counter=(Debounce_Counter+1)%3;
  3859  0330  3003               	movlw	3
  3860  0331  00F0               	movwf	___awmod@divisor
  3861  0332  3000               	movlw	0
  3862  0333  00F1               	movwf	___awmod@divisor+1
  3863  0334  082F               	movf	Buttons_Update@Debounce_Counter,w
  3864  0335  3E01               	addlw	1
  3865  0336  00F2               	movwf	___awmod@dividend
  3866  0337  3000               	movlw	0
  3867  0338  1803               	skipnc
  3868  0339  3001               	movlw	1
  3869  033A  00F3               	movwf	___awmod@dividend+1
  3870  033B  120A  118A  226E  120A  118A  	fcall	___awmod
  3871  0340  0870               	movf	?___awmod,w
  3872  0341  00FF               	movwf	btemp+1
  3873  0342  087F               	movf	btemp+1,w
  3874  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0345  00AF               	movwf	Buttons_Update@Debounce_Counter
  3877  0346                     i1l2464:
  3878                           
  3879                           ;Buttons/Buttons.c: 34:     if(Debounce_UpButton[0]==0 &&Debounce_UpButton[1]==0 &&Debou
      +                          nce_UpButton[2]==0 )
  3880  0346  0835               	movf	_Debounce_UpButton,w
  3881  0347  1D03               	btfss	3,2
  3882  0348  2B4A               	goto	u178_21
  3883  0349  2B4B               	goto	u178_20
  3884  034A                     u178_21:
  3885  034A  2B5C               	goto	i1l2472
  3886  034B                     u178_20:
  3887  034B                     i1l2466:
  3888  034B  0836               	movf	_Debounce_UpButton+1,w
  3889  034C  1D03               	btfss	3,2
  3890  034D  2B4F               	goto	u179_21
  3891  034E  2B50               	goto	u179_20
  3892  034F                     u179_21:
  3893  034F  2B5C               	goto	i1l2472
  3894  0350                     u179_20:
  3895  0350                     i1l2468:
  3896  0350  0837               	movf	_Debounce_UpButton+2,w
  3897  0351  1D03               	btfss	3,2
  3898  0352  2B54               	goto	u180_21
  3899  0353  2B55               	goto	u180_20
  3900  0354                     u180_21:
  3901  0354  2B5C               	goto	i1l2472
  3902  0355                     u180_20:
  3903  0355                     i1l2470:
  3904                           
  3905                           ;Buttons/Buttons.c: 35:     {;Buttons/Buttons.c: 36:         ButtonsFlag.UpButton_Flag=1
      +                          ;
  3906  0355  147D               	bsf	_ButtonsFlag,0
  3907                           
  3908                           ;Buttons/Buttons.c: 38:         Debounce_UpButton[0]=1 ;Debounce_UpButton[1]=1 ;Debounce
      +                          _UpButton[2]=1 ;
  3909  0356  01B5               	clrf	_Debounce_UpButton
  3910  0357  0AB5               	incf	_Debounce_UpButton,f
  3911  0358  01B6               	clrf	_Debounce_UpButton+1
  3912  0359  0AB6               	incf	_Debounce_UpButton+1,f
  3913  035A  01B7               	clrf	_Debounce_UpButton+2
  3914  035B  0AB7               	incf	_Debounce_UpButton+2,f
  3915  035C                     i1l2472:
  3916                           
  3917                           ;Buttons/Buttons.c: 41:     if(Debounce_DownButton[0]==0 &&Debounce_DownButton[1]==0 &&D
      +                          ebounce_DownButton[2]==0 )
  3918  035C  0832               	movf	_Debounce_DownButton,w
  3919  035D  1D03               	btfss	3,2
  3920  035E  2B60               	goto	u181_21
  3921  035F  2B61               	goto	u181_20
  3922  0360                     u181_21:
  3923  0360  2B72               	goto	i1l96
  3924  0361                     u181_20:
  3925  0361                     i1l2474:
  3926  0361  0833               	movf	_Debounce_DownButton+1,w
  3927  0362  1D03               	btfss	3,2
  3928  0363  2B65               	goto	u182_21
  3929  0364  2B66               	goto	u182_20
  3930  0365                     u182_21:
  3931  0365  2B72               	goto	i1l96
  3932  0366                     u182_20:
  3933  0366                     i1l2476:
  3934  0366  0834               	movf	_Debounce_DownButton+2,w
  3935  0367  1D03               	btfss	3,2
  3936  0368  2B6A               	goto	u183_21
  3937  0369  2B6B               	goto	u183_20
  3938  036A                     u183_21:
  3939  036A  2B72               	goto	i1l96
  3940  036B                     u183_20:
  3941  036B                     i1l2478:
  3942                           
  3943                           ;Buttons/Buttons.c: 42:     {;Buttons/Buttons.c: 43:         ButtonsFlag.DownButton_Flag
      +                          =1;
  3944  036B  14FD               	bsf	_ButtonsFlag,1
  3945                           
  3946                           ;Buttons/Buttons.c: 45:         Debounce_DownButton[0]=1 ;Debounce_DownButton[1]=1 ;Debo
      +                          unce_DownButton[2]=1 ;
  3947  036C  01B2               	clrf	_Debounce_DownButton
  3948  036D  0AB2               	incf	_Debounce_DownButton,f
  3949  036E  01B3               	clrf	_Debounce_DownButton+1
  3950  036F  0AB3               	incf	_Debounce_DownButton+1,f
  3951  0370  01B4               	clrf	_Debounce_DownButton+2
  3952  0371  0AB4               	incf	_Debounce_DownButton+2,f
  3953  0372                     i1l96:
  3954  0372  0008               	return
  3955  0373                     __end_of_Buttons_Update:
  3956                           
  3957                           	psect	text26
  3958  026E                     __ptext26:	
  3959 ;; *************** function ___awmod *****************
  3960 ;; Defined at:
  3961 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  divisor         2    0[COMMON] int 
  3964 ;;  dividend        2    2[COMMON] int 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  sign            1    5[COMMON] unsigned char 
  3967 ;;  counter         1    4[COMMON] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  2    0[COMMON] int 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0, btemp+1
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3977 ;;      Params:         4       0       0       0       0
  3978 ;;      Locals:         2       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0
  3980 ;;      Totals:         6       0       0       0       0
  3981 ;;Total ram usage:        6 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_Buttons_Update
  3987 ;;		_Clock_Update
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function ___awmod
  3993  026E                     ___awmod:
  3994  026E                     i1l2422:	
  3995                           ;incstack = 0
  3996                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3997                           
  3998  026E  01F5               	clrf	___awmod@sign
  3999  026F                     i1l2424:
  4000  026F  1FF3               	btfss	___awmod@dividend+1,7
  4001  0270  2A72               	goto	u169_21
  4002  0271  2A73               	goto	u169_20
  4003  0272                     u169_21:
  4004  0272  2A7A               	goto	i1l2430
  4005  0273                     u169_20:
  4006  0273                     i1l2426:
  4007  0273  09F2               	comf	___awmod@dividend,f
  4008  0274  09F3               	comf	___awmod@dividend+1,f
  4009  0275  0AF2               	incf	___awmod@dividend,f
  4010  0276  1903               	skipnz
  4011  0277  0AF3               	incf	___awmod@dividend+1,f
  4012  0278                     i1l2428:
  4013  0278  01F5               	clrf	___awmod@sign
  4014  0279  0AF5               	incf	___awmod@sign,f
  4015  027A                     i1l2430:
  4016  027A  1FF1               	btfss	___awmod@divisor+1,7
  4017  027B  2A7D               	goto	u170_21
  4018  027C  2A7E               	goto	u170_20
  4019  027D                     u170_21:
  4020  027D  2A83               	goto	i1l2434
  4021  027E                     u170_20:
  4022  027E                     i1l2432:
  4023  027E  09F0               	comf	___awmod@divisor,f
  4024  027F  09F1               	comf	___awmod@divisor+1,f
  4025  0280  0AF0               	incf	___awmod@divisor,f
  4026  0281  1903               	skipnz
  4027  0282  0AF1               	incf	___awmod@divisor+1,f
  4028  0283                     i1l2434:
  4029  0283  0870               	movf	___awmod@divisor,w
  4030  0284  0471               	iorwf	___awmod@divisor+1,w
  4031  0285  1903               	btfsc	3,2
  4032  0286  2A88               	goto	u171_21
  4033  0287  2A89               	goto	u171_20
  4034  0288                     u171_21:
  4035  0288  2AB8               	goto	i1l2452
  4036  0289                     u171_20:
  4037  0289                     i1l2436:
  4038  0289  01F4               	clrf	___awmod@counter
  4039  028A  0AF4               	incf	___awmod@counter,f
  4040  028B  2A97               	goto	i1l2442
  4041  028C                     i1l2438:
  4042  028C  3001               	movlw	1
  4043  028D                     u172_25:
  4044  028D  1003               	clrc
  4045  028E  0DF0               	rlf	___awmod@divisor,f
  4046  028F  0DF1               	rlf	___awmod@divisor+1,f
  4047  0290  3EFF               	addlw	-1
  4048  0291  1D03               	skipz
  4049  0292  2A8D               	goto	u172_25
  4050  0293                     i1l2440:
  4051  0293  3001               	movlw	1
  4052  0294  00FF               	movwf	btemp+1
  4053  0295  087F               	movf	btemp+1,w
  4054  0296  07F4               	addwf	___awmod@counter,f
  4055  0297                     i1l2442:
  4056  0297  1FF1               	btfss	___awmod@divisor+1,7
  4057  0298  2A9A               	goto	u173_21
  4058  0299  2A9B               	goto	u173_20
  4059  029A                     u173_21:
  4060  029A  2A8C               	goto	i1l2438
  4061  029B                     u173_20:
  4062  029B                     i1l2444:
  4063  029B  0871               	movf	___awmod@divisor+1,w
  4064  029C  0273               	subwf	___awmod@dividend+1,w
  4065  029D  1D03               	skipz
  4066  029E  2AA1               	goto	u174_25
  4067  029F  0870               	movf	___awmod@divisor,w
  4068  02A0  0272               	subwf	___awmod@dividend,w
  4069  02A1                     u174_25:
  4070  02A1  1C03               	skipc
  4071  02A2  2AA4               	goto	u174_21
  4072  02A3  2AA5               	goto	u174_20
  4073  02A4                     u174_21:
  4074  02A4  2AAB               	goto	i1l2448
  4075  02A5                     u174_20:
  4076  02A5                     i1l2446:
  4077  02A5  0870               	movf	___awmod@divisor,w
  4078  02A6  02F2               	subwf	___awmod@dividend,f
  4079  02A7  0871               	movf	___awmod@divisor+1,w
  4080  02A8  1C03               	skipc
  4081  02A9  03F3               	decf	___awmod@dividend+1,f
  4082  02AA  02F3               	subwf	___awmod@dividend+1,f
  4083  02AB                     i1l2448:
  4084  02AB  3001               	movlw	1
  4085  02AC                     u175_25:
  4086  02AC  1003               	clrc
  4087  02AD  0CF1               	rrf	___awmod@divisor+1,f
  4088  02AE  0CF0               	rrf	___awmod@divisor,f
  4089  02AF  3EFF               	addlw	-1
  4090  02B0  1D03               	skipz
  4091  02B1  2AAC               	goto	u175_25
  4092  02B2                     i1l2450:
  4093  02B2  3001               	movlw	1
  4094  02B3  02F4               	subwf	___awmod@counter,f
  4095  02B4  1D03               	btfss	3,2
  4096  02B5  2AB7               	goto	u176_21
  4097  02B6  2AB8               	goto	u176_20
  4098  02B7                     u176_21:
  4099  02B7  2A9B               	goto	i1l2444
  4100  02B8                     u176_20:
  4101  02B8                     i1l2452:
  4102  02B8  0875               	movf	___awmod@sign,w
  4103  02B9  1903               	btfsc	3,2
  4104  02BA  2ABC               	goto	u177_21
  4105  02BB  2ABD               	goto	u177_20
  4106  02BC                     u177_21:
  4107  02BC  2AC2               	goto	i1l2456
  4108  02BD                     u177_20:
  4109  02BD                     i1l2454:
  4110  02BD  09F2               	comf	___awmod@dividend,f
  4111  02BE  09F3               	comf	___awmod@dividend+1,f
  4112  02BF  0AF2               	incf	___awmod@dividend,f
  4113  02C0  1903               	skipnz
  4114  02C1  0AF3               	incf	___awmod@dividend+1,f
  4115  02C2                     i1l2456:
  4116  02C2  0873               	movf	___awmod@dividend+1,w
  4117  02C3  00F1               	movwf	?___awmod+1
  4118  02C4  0872               	movf	___awmod@dividend,w
  4119  02C5  00F0               	movwf	?___awmod
  4120  02C6                     i1l646:
  4121  02C6  0008               	return
  4122  02C7                     __end_of___awmod:
  4123                           
  4124                           	psect	text27
  4125  0407                     __ptext27:	
  4126 ;; *************** function _Display_Update *****************
  4127 ;; Defined at:
  4128 ;;		line 32 in file "Display/Display.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0
  4144 ;;      Temps:          2       0       0       0       0
  4145 ;;      Totals:         2       0       0       0       0
  4146 ;;Total ram usage:        2 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    2
  4149 ;; This function calls:
  4150 ;;		_Display_Blink
  4151 ;;		_Display_Normal
  4152 ;;		_SSD_DigitSelector
  4153 ;; This function is called by:
  4154 ;;		_Scheduler_Task1
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           
  4159                           ;psect for function _Display_Update
  4160  0407                     _Display_Update:
  4161  0407                     i1l2480:	
  4162                           ;incstack = 0
  4163 ;; hardware stack exceeded
  4164                           ; Regs used in _Display_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4165                           
  4166                           
  4167                           ;Display/Display.c: 34:    switch(MODE)
  4168  0407  2C2C               	goto	i1l2494
  4169  0408                     i1l2482:
  4170                           
  4171                           ;Display/Display.c: 37:                               Display_Normal();
  4172  0408  120A  118A  2660  120A  118A  	fcall	_Display_Normal
  4173                           
  4174                           ;Display/Display.c: 38:                               break;
  4175  040D  2C41               	goto	i1l2496
  4176  040E                     i1l2484:
  4177                           
  4178                           ;Display/Display.c: 41:                               Display_Blink(500,Hours_Mode);
  4179  040E  30F4               	movlw	244
  4180  040F  00F0               	movwf	Display_Blink@Times_Ms
  4181  0410  3001               	movlw	1
  4182  0411  00F1               	movwf	Display_Blink@Times_Ms+1
  4183  0412  01F2               	clrf	Display_Blink@_MODE_
  4184  0413  0AF2               	incf	Display_Blink@_MODE_,f
  4185  0414  120A  118A  2373  120A  118A  	fcall	_Display_Blink
  4186  0419                     i1l2486:
  4187                           
  4188                           ;Display/Display.c: 42:                               Enable_Minutes=1;
  4189  0419  01FC               	clrf	_Enable_Minutes
  4190  041A  0AFC               	incf	_Enable_Minutes,f
  4191                           
  4192                           ;Display/Display.c: 44:                               break;
  4193  041B  2C41               	goto	i1l2496
  4194  041C                     i1l2488:
  4195                           
  4196                           ;Display/Display.c: 47:                               Display_Blink(500,Minutes_Mode);
  4197  041C  30F4               	movlw	244
  4198  041D  00F0               	movwf	Display_Blink@Times_Ms
  4199  041E  3001               	movlw	1
  4200  041F  00F1               	movwf	Display_Blink@Times_Ms+1
  4201  0420  3002               	movlw	2
  4202  0421  00FF               	movwf	btemp+1
  4203  0422  087F               	movf	btemp+1,w
  4204  0423  00F2               	movwf	Display_Blink@_MODE_
  4205  0424  120A  118A  2373  120A  118A  	fcall	_Display_Blink
  4206  0429                     i1l2490:
  4207                           
  4208                           ;Display/Display.c: 48:                               Enable_Hours=1;
  4209  0429  01FB               	clrf	_Enable_Hours
  4210  042A  0AFB               	incf	_Enable_Hours,f
  4211                           
  4212                           ;Display/Display.c: 49:                               break;
  4213  042B  2C41               	goto	i1l2496
  4214  042C                     i1l2494:
  4215  042C  1283               	bcf	3,5	;RP0=0, select bank0
  4216  042D  1303               	bcf	3,6	;RP1=0, select bank0
  4217  042E  0831               	movf	_MODE,w
  4218  042F  00F5               	movwf	??_Display_Update
  4219  0430  01F6               	clrf	??_Display_Update+1
  4220                           
  4221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4222                           ; Switch size 1, requested type "simple"
  4223                           ; Number of cases is 1, Range of values is 0 to 0
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte            4     3 (average)
  4227                           ; direct_byte           11     8 (fixed)
  4228                           ; jumptable            260     6 (fixed)
  4229                           ;	Chosen strategy is simple_byte
  4230  0431  0876               	movf	??_Display_Update+1,w
  4231  0432  3A00               	xorlw	0	; case 0
  4232  0433  1903               	skipnz
  4233  0434  2C36               	goto	i1l2926
  4234  0435  2C41               	goto	i1l2496
  4235  0436                     i1l2926:
  4236                           
  4237                           ; Switch size 1, requested type "simple"
  4238                           ; Number of cases is 3, Range of values is 0 to 2
  4239                           ; switch strategies available:
  4240                           ; Name         Instructions Cycles
  4241                           ; simple_byte           10     6 (average)
  4242                           ; direct_byte           17     8 (fixed)
  4243                           ; jumptable            260     6 (fixed)
  4244                           ;	Chosen strategy is simple_byte
  4245  0436  0875               	movf	??_Display_Update,w
  4246  0437  3A00               	xorlw	0	; case 0
  4247  0438  1903               	skipnz
  4248  0439  2C08               	goto	i1l2482
  4249  043A  3A01               	xorlw	1	; case 1
  4250  043B  1903               	skipnz
  4251  043C  2C0E               	goto	i1l2484
  4252  043D  3A03               	xorlw	3	; case 2
  4253  043E  1903               	skipnz
  4254  043F  2C1C               	goto	i1l2488
  4255  0440  2C41               	goto	i1l2496
  4256  0441                     i1l2496:
  4257                           
  4258                           ;Display/Display.c: 51:     SSD_DigitSelector();
  4259  0441  120A  118A  203B  120A  118A  	fcall	_SSD_DigitSelector
  4260  0446                     i1l185:
  4261  0446  0008               	return
  4262  0447                     __end_of_Display_Update:
  4263                           
  4264                           	psect	text28
  4265  003B                     __ptext28:	
  4266 ;; *************** function _SSD_DigitSelector *****************
  4267 ;; Defined at:
  4268 ;;		line 20 in file "SSD/SSD.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         0       0       0       0       0
  4283 ;;      Locals:         0       0       0       0       0
  4284 ;;      Temps:          2       0       0       0       0
  4285 ;;      Totals:         2       0       0       0       0
  4286 ;;Total ram usage:        2 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    1
  4289 ;; This function calls:
  4290 ;;		_SSD_Display
  4291 ;; This function is called by:
  4292 ;;		_Display_Update
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _SSD_DigitSelector
  4298  003B                     _SSD_DigitSelector:
  4299  003B                     i1l2258:	
  4300                           ;incstack = 0
  4301 ;; hardware stack exceeded
  4302                           ; Regs used in _SSD_DigitSelector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4303                           
  4304                           
  4305                           ;SSD/SSD.c: 23:       switch(DigitSelector)
  4306  003B  28A1               	goto	i1l2296
  4307  003C                     i1l2260:
  4308                           
  4309                           ;SSD/SSD.c: 26:                         if(Enable_Hours==1)
  4310  003C  037B               	decf	_Enable_Hours,w
  4311  003D  1D03               	btfss	3,2
  4312  003E  2840               	goto	u139_21
  4313  003F  2841               	goto	u139_20
  4314  0040                     u139_21:
  4315  0040  2842               	goto	i1l2264
  4316  0041                     u139_20:
  4317  0041                     i1l2262:
  4318                           
  4319                           ;SSD/SSD.c: 27:                         {;SSD/SSD.c: 28:                             (PO
      +                          RTA|=(1<<2));
  4320  0041  1505               	bsf	5,2	;volatile
  4321  0042                     i1l2264:
  4322                           
  4323                           ;SSD/SSD.c: 30:                         (PORTA&=~(1<<3));
  4324  0042  30F7               	movlw	247
  4325  0043  00FF               	movwf	btemp+1
  4326  0044  087F               	movf	btemp+1,w
  4327  0045  0585               	andwf	5,f	;volatile
  4328                           
  4329                           ;SSD/SSD.c: 31:                         (PORTA&=~(1<<4));
  4330  0046  30EF               	movlw	239
  4331  0047  00FF               	movwf	btemp+1
  4332  0048  087F               	movf	btemp+1,w
  4333  0049  0585               	andwf	5,f	;volatile
  4334                           
  4335                           ;SSD/SSD.c: 32:                         (PORTA&=~(1<<5));
  4336  004A  30DF               	movlw	223
  4337  004B  00FF               	movwf	btemp+1
  4338  004C  087F               	movf	btemp+1,w
  4339  004D  0585               	andwf	5,f	;volatile
  4340  004E                     i1l2266:
  4341                           
  4342                           ;SSD/SSD.c: 33:                         SSD_Display(Digit1);
  4343  004E  082D               	movf	_Digit1,w
  4344  004F  120A  118A  2211  120A  118A  	fcall	_SSD_Display
  4345                           
  4346                           ;SSD/SSD.c: 34:                         break;
  4347  0054  28B9               	goto	i1l2298
  4348  0055                     i1l2268:
  4349                           
  4350                           ;SSD/SSD.c: 37:                         if(Enable_Hours==1)
  4351  0055  037B               	decf	_Enable_Hours,w
  4352  0056  1D03               	btfss	3,2
  4353  0057  2859               	goto	u140_21
  4354  0058  285A               	goto	u140_20
  4355  0059                     u140_21:
  4356  0059  285B               	goto	i1l2272
  4357  005A                     u140_20:
  4358  005A                     i1l2270:
  4359                           
  4360                           ;SSD/SSD.c: 38:                         {;SSD/SSD.c: 39:                             (PO
      +                          RTA|=(1<<3));
  4361  005A  1585               	bsf	5,3	;volatile
  4362  005B                     i1l2272:
  4363                           
  4364                           ;SSD/SSD.c: 41:                         (PORTA&=~(1<<2));
  4365  005B  30FB               	movlw	251
  4366  005C  00FF               	movwf	btemp+1
  4367  005D  087F               	movf	btemp+1,w
  4368  005E  0585               	andwf	5,f	;volatile
  4369                           
  4370                           ;SSD/SSD.c: 42:                         (PORTA&=~(1<<4));
  4371  005F  30EF               	movlw	239
  4372  0060  00FF               	movwf	btemp+1
  4373  0061  087F               	movf	btemp+1,w
  4374  0062  0585               	andwf	5,f	;volatile
  4375                           
  4376                           ;SSD/SSD.c: 43:                         (PORTA&=~(1<<5));
  4377  0063  30DF               	movlw	223
  4378  0064  00FF               	movwf	btemp+1
  4379  0065  087F               	movf	btemp+1,w
  4380  0066  0585               	andwf	5,f	;volatile
  4381  0067                     i1l2274:
  4382                           
  4383                           ;SSD/SSD.c: 45:                         (PORTD|=(1<<7));
  4384  0067  1788               	bsf	8,7	;volatile
  4385  0068                     i1l2276:
  4386                           
  4387                           ;SSD/SSD.c: 46:                         SSD_Display(Digit2);
  4388  0068  082C               	movf	_Digit2,w
  4389  0069  120A  118A  2211  120A  118A  	fcall	_SSD_Display
  4390                           
  4391                           ;SSD/SSD.c: 47:                         break;
  4392  006E  28B9               	goto	i1l2298
  4393  006F                     i1l2278:
  4394                           
  4395                           ;SSD/SSD.c: 49:                         if(Enable_Minutes==1)
  4396  006F  037C               	decf	_Enable_Minutes,w
  4397  0070  1D03               	btfss	3,2
  4398  0071  2873               	goto	u141_21
  4399  0072  2874               	goto	u141_20
  4400  0073                     u141_21:
  4401  0073  2875               	goto	i1l2282
  4402  0074                     u141_20:
  4403  0074                     i1l2280:
  4404                           
  4405                           ;SSD/SSD.c: 50:                         {;SSD/SSD.c: 51:                             (PO
      +                          RTA|=(1<<4));
  4406  0074  1605               	bsf	5,4	;volatile
  4407  0075                     i1l2282:
  4408                           
  4409                           ;SSD/SSD.c: 53:                         (PORTA&=~(1<<2));
  4410  0075  30FB               	movlw	251
  4411  0076  00FF               	movwf	btemp+1
  4412  0077  087F               	movf	btemp+1,w
  4413  0078  0585               	andwf	5,f	;volatile
  4414                           
  4415                           ;SSD/SSD.c: 54:                         (PORTA&=~(1<<3));
  4416  0079  30F7               	movlw	247
  4417  007A  00FF               	movwf	btemp+1
  4418  007B  087F               	movf	btemp+1,w
  4419  007C  0585               	andwf	5,f	;volatile
  4420                           
  4421                           ;SSD/SSD.c: 55:                         (PORTA&=~(1<<5));
  4422  007D  30DF               	movlw	223
  4423  007E  00FF               	movwf	btemp+1
  4424  007F  087F               	movf	btemp+1,w
  4425  0080  0585               	andwf	5,f	;volatile
  4426  0081                     i1l2284:
  4427                           
  4428                           ;SSD/SSD.c: 56:                         SSD_Display(Digit3);
  4429  0081  082B               	movf	_Digit3,w
  4430  0082  120A  118A  2211  120A  118A  	fcall	_SSD_Display
  4431                           
  4432                           ;SSD/SSD.c: 57:                         break;
  4433  0087  28B9               	goto	i1l2298
  4434  0088                     i1l2286:
  4435                           
  4436                           ;SSD/SSD.c: 59:                         if(Enable_Minutes==1)
  4437  0088  037C               	decf	_Enable_Minutes,w
  4438  0089  1D03               	btfss	3,2
  4439  008A  288C               	goto	u142_21
  4440  008B  288D               	goto	u142_20
  4441  008C                     u142_21:
  4442  008C  288E               	goto	i1l2290
  4443  008D                     u142_20:
  4444  008D                     i1l2288:
  4445                           
  4446                           ;SSD/SSD.c: 60:                         {;SSD/SSD.c: 61:                             (PO
      +                          RTA|=(1<<5));
  4447  008D  1685               	bsf	5,5	;volatile
  4448  008E                     i1l2290:
  4449                           
  4450                           ;SSD/SSD.c: 63:                         (PORTA&=~(1<<2));
  4451  008E  30FB               	movlw	251
  4452  008F  00FF               	movwf	btemp+1
  4453  0090  087F               	movf	btemp+1,w
  4454  0091  0585               	andwf	5,f	;volatile
  4455                           
  4456                           ;SSD/SSD.c: 64:                         (PORTA&=~(1<<3));
  4457  0092  30F7               	movlw	247
  4458  0093  00FF               	movwf	btemp+1
  4459  0094  087F               	movf	btemp+1,w
  4460  0095  0585               	andwf	5,f	;volatile
  4461                           
  4462                           ;SSD/SSD.c: 65:                         (PORTA&=~(1<<4));
  4463  0096  30EF               	movlw	239
  4464  0097  00FF               	movwf	btemp+1
  4465  0098  087F               	movf	btemp+1,w
  4466  0099  0585               	andwf	5,f	;volatile
  4467  009A                     i1l2292:
  4468                           
  4469                           ;SSD/SSD.c: 66:                         SSD_Display(Digit4);
  4470  009A  082A               	movf	_Digit4,w
  4471  009B  120A  118A  2211  120A  118A  	fcall	_SSD_Display
  4472                           
  4473                           ;SSD/SSD.c: 67:                         break;
  4474  00A0  28B9               	goto	i1l2298
  4475  00A1                     i1l2296:
  4476  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  4477  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  4478  00A3  082E               	movf	_DigitSelector,w
  4479  00A4  00F3               	movwf	??_SSD_DigitSelector
  4480  00A5  01F4               	clrf	??_SSD_DigitSelector+1
  4481                           
  4482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4483                           ; Switch size 1, requested type "simple"
  4484                           ; Number of cases is 1, Range of values is 0 to 0
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte            4     3 (average)
  4488                           ; direct_byte           11     8 (fixed)
  4489                           ; jumptable            260     6 (fixed)
  4490                           ;	Chosen strategy is simple_byte
  4491  00A6  0874               	movf	??_SSD_DigitSelector+1,w
  4492  00A7  3A00               	xorlw	0	; case 0
  4493  00A8  1903               	skipnz
  4494  00A9  28AB               	goto	i1l2928
  4495  00AA  28B9               	goto	i1l2298
  4496  00AB                     i1l2928:
  4497                           
  4498                           ; Switch size 1, requested type "simple"
  4499                           ; Number of cases is 4, Range of values is 0 to 3
  4500                           ; switch strategies available:
  4501                           ; Name         Instructions Cycles
  4502                           ; simple_byte           13     7 (average)
  4503                           ; direct_byte           20     8 (fixed)
  4504                           ; jumptable            260     6 (fixed)
  4505                           ;	Chosen strategy is simple_byte
  4506  00AB  0873               	movf	??_SSD_DigitSelector,w
  4507  00AC  3A00               	xorlw	0	; case 0
  4508  00AD  1903               	skipnz
  4509  00AE  283C               	goto	i1l2260
  4510  00AF  3A01               	xorlw	1	; case 1
  4511  00B0  1903               	skipnz
  4512  00B1  2855               	goto	i1l2268
  4513  00B2  3A03               	xorlw	3	; case 2
  4514  00B3  1903               	skipnz
  4515  00B4  286F               	goto	i1l2278
  4516  00B5  3A01               	xorlw	1	; case 3
  4517  00B6  1903               	skipnz
  4518  00B7  2888               	goto	i1l2286
  4519  00B8  28B9               	goto	i1l2298
  4520  00B9                     i1l2298:
  4521                           
  4522                           ;SSD/SSD.c: 69:        DigitSelector=(DigitSelector+1)%4;
  4523  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  4524  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  4525  00BB  082E               	movf	_DigitSelector,w
  4526  00BC  3E01               	addlw	1
  4527  00BD  3903               	andlw	3
  4528  00BE  00FF               	movwf	btemp+1
  4529  00BF  087F               	movf	btemp+1,w
  4530  00C0  00AE               	movwf	_DigitSelector
  4531  00C1                     i1l379:
  4532  00C1  0008               	return
  4533  00C2                     __end_of_SSD_DigitSelector:
  4534                           
  4535                           	psect	text29
  4536  0211                     __ptext29:	
  4537 ;; *************** function _SSD_Display *****************
  4538 ;; Defined at:
  4539 ;;		line 78 in file "SSD/SSD.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  Number          1    wreg     unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  Number          1    2[COMMON] unsigned char 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         0       0       0       0       0
  4554 ;;      Locals:         1       0       0       0       0
  4555 ;;      Temps:          2       0       0       0       0
  4556 ;;      Totals:         3       0       0       0       0
  4557 ;;Total ram usage:        3 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_SSD_DigitSelector
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function _SSD_Display
  4568  0211                     _SSD_Display:
  4569                           
  4570                           ;incstack = 0
  4571 ;; hardware stack exceeded
  4572                           ; Regs used in _SSD_Display: [wreg-fsr0h+status,2+status,0]
  4573                           ;SSD_Display@Number stored from wreg
  4574  0211  00F2               	movwf	SSD_Display@Number
  4575  0212                     i1l2180:
  4576                           
  4577                           ;SSD/SSD.c: 78: void SSD_Display(uint8_t Number);SSD/SSD.c: 79: {;SSD/SSD.c: 81:    swit
      +                          ch(Number)
  4578  0212  2A45               	goto	i1l2204
  4579  0213                     i1l2182:
  4580                           
  4581                           ;SSD/SSD.c: 84:         PORTD=0b0111111;
  4582  0213  303F               	movlw	63
  4583  0214  1283               	bcf	3,5	;RP0=0, select bank0
  4584  0215  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0216  0088               	movwf	8	;volatile
  4586                           
  4587                           ;SSD/SSD.c: 85:         break;
  4588  0217  2A6D               	goto	i1l394
  4589  0218                     i1l2184:
  4590                           
  4591                           ;SSD/SSD.c: 88:         PORTD=0b0000110;
  4592  0218  3006               	movlw	6
  4593  0219  1283               	bcf	3,5	;RP0=0, select bank0
  4594  021A  1303               	bcf	3,6	;RP1=0, select bank0
  4595  021B  0088               	movwf	8	;volatile
  4596                           
  4597                           ;SSD/SSD.c: 89:         break;
  4598  021C  2A6D               	goto	i1l394
  4599  021D                     i1l2186:
  4600                           
  4601                           ;SSD/SSD.c: 92:         PORTD=0b1011011;
  4602  021D  305B               	movlw	91
  4603  021E  1283               	bcf	3,5	;RP0=0, select bank0
  4604  021F  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0220  0088               	movwf	8	;volatile
  4606                           
  4607                           ;SSD/SSD.c: 93:         break;
  4608  0221  2A6D               	goto	i1l394
  4609  0222                     i1l2188:
  4610                           
  4611                           ;SSD/SSD.c: 96:         PORTD=0b1001111;
  4612  0222  304F               	movlw	79
  4613  0223  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0224  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0225  0088               	movwf	8	;volatile
  4616                           
  4617                           ;SSD/SSD.c: 97:         break;
  4618  0226  2A6D               	goto	i1l394
  4619  0227                     i1l2190:
  4620                           
  4621                           ;SSD/SSD.c: 100:         PORTD=0b1100110;
  4622  0227  3066               	movlw	102
  4623  0228  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0229  1303               	bcf	3,6	;RP1=0, select bank0
  4625  022A  0088               	movwf	8	;volatile
  4626                           
  4627                           ;SSD/SSD.c: 101:         break;
  4628  022B  2A6D               	goto	i1l394
  4629  022C                     i1l2192:
  4630                           
  4631                           ;SSD/SSD.c: 104:         PORTD=0b1101101;
  4632  022C  306D               	movlw	109
  4633  022D  1283               	bcf	3,5	;RP0=0, select bank0
  4634  022E  1303               	bcf	3,6	;RP1=0, select bank0
  4635  022F  0088               	movwf	8	;volatile
  4636                           
  4637                           ;SSD/SSD.c: 105:         break;
  4638  0230  2A6D               	goto	i1l394
  4639  0231                     i1l2194:
  4640                           
  4641                           ;SSD/SSD.c: 108:         PORTD=0b1111101;
  4642  0231  307D               	movlw	125
  4643  0232  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0233  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0234  0088               	movwf	8	;volatile
  4646                           
  4647                           ;SSD/SSD.c: 109:         break;
  4648  0235  2A6D               	goto	i1l394
  4649  0236                     i1l2196:
  4650                           
  4651                           ;SSD/SSD.c: 112:         PORTD=0b0000111;
  4652  0236  3007               	movlw	7
  4653  0237  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0238  1303               	bcf	3,6	;RP1=0, select bank0
  4655  0239  0088               	movwf	8	;volatile
  4656                           
  4657                           ;SSD/SSD.c: 113:         break;
  4658  023A  2A6D               	goto	i1l394
  4659  023B                     i1l2198:
  4660                           
  4661                           ;SSD/SSD.c: 116:         PORTD=0b1111111;
  4662  023B  307F               	movlw	127
  4663  023C  1283               	bcf	3,5	;RP0=0, select bank0
  4664  023D  1303               	bcf	3,6	;RP1=0, select bank0
  4665  023E  0088               	movwf	8	;volatile
  4666                           
  4667                           ;SSD/SSD.c: 117:         break;
  4668  023F  2A6D               	goto	i1l394
  4669  0240                     i1l2200:
  4670                           
  4671                           ;SSD/SSD.c: 120:         PORTD=0b1101111;
  4672  0240  306F               	movlw	111
  4673  0241  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0242  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0243  0088               	movwf	8	;volatile
  4676                           
  4677                           ;SSD/SSD.c: 121:         break;
  4678  0244  2A6D               	goto	i1l394
  4679  0245                     i1l2204:
  4680  0245  0872               	movf	SSD_Display@Number,w
  4681  0246  00F0               	movwf	??_SSD_Display
  4682  0247  01F1               	clrf	??_SSD_Display+1
  4683                           
  4684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4685                           ; Switch size 1, requested type "simple"
  4686                           ; Number of cases is 1, Range of values is 0 to 0
  4687                           ; switch strategies available:
  4688                           ; Name         Instructions Cycles
  4689                           ; simple_byte            4     3 (average)
  4690                           ; direct_byte           11     8 (fixed)
  4691                           ; jumptable            260     6 (fixed)
  4692                           ;	Chosen strategy is simple_byte
  4693  0248  0871               	movf	??_SSD_Display+1,w
  4694  0249  3A00               	xorlw	0	; case 0
  4695  024A  1903               	skipnz
  4696  024B  2A4D               	goto	i1l2930
  4697  024C  2A6D               	goto	i1l394
  4698  024D                     i1l2930:
  4699                           
  4700                           ; Switch size 1, requested type "simple"
  4701                           ; Number of cases is 10, Range of values is 0 to 9
  4702                           ; switch strategies available:
  4703                           ; Name         Instructions Cycles
  4704                           ; simple_byte           31    16 (average)
  4705                           ; direct_byte           38     8 (fixed)
  4706                           ; jumptable            260     6 (fixed)
  4707                           ;	Chosen strategy is simple_byte
  4708  024D  0870               	movf	??_SSD_Display,w
  4709  024E  3A00               	xorlw	0	; case 0
  4710  024F  1903               	skipnz
  4711  0250  2A13               	goto	i1l2182
  4712  0251  3A01               	xorlw	1	; case 1
  4713  0252  1903               	skipnz
  4714  0253  2A18               	goto	i1l2184
  4715  0254  3A03               	xorlw	3	; case 2
  4716  0255  1903               	skipnz
  4717  0256  2A1D               	goto	i1l2186
  4718  0257  3A01               	xorlw	1	; case 3
  4719  0258  1903               	skipnz
  4720  0259  2A22               	goto	i1l2188
  4721  025A  3A07               	xorlw	7	; case 4
  4722  025B  1903               	skipnz
  4723  025C  2A27               	goto	i1l2190
  4724  025D  3A01               	xorlw	1	; case 5
  4725  025E  1903               	skipnz
  4726  025F  2A2C               	goto	i1l2192
  4727  0260  3A03               	xorlw	3	; case 6
  4728  0261  1903               	skipnz
  4729  0262  2A31               	goto	i1l2194
  4730  0263  3A01               	xorlw	1	; case 7
  4731  0264  1903               	skipnz
  4732  0265  2A36               	goto	i1l2196
  4733  0266  3A0F               	xorlw	15	; case 8
  4734  0267  1903               	skipnz
  4735  0268  2A3B               	goto	i1l2198
  4736  0269  3A01               	xorlw	1	; case 9
  4737  026A  1903               	skipnz
  4738  026B  2A40               	goto	i1l2200
  4739  026C  2A6D               	goto	i1l394
  4740  026D                     i1l394:
  4741  026D  0008               	return
  4742  026E                     __end_of_SSD_Display:
  4743                           
  4744                           	psect	text30
  4745  0660                     __ptext30:	
  4746 ;; *************** function _Display_Normal *****************
  4747 ;; Defined at:
  4748 ;;		line 100 in file "Display/Display.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		None
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4762 ;;      Params:         0       0       0       0       0
  4763 ;;      Locals:         0       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0
  4765 ;;      Totals:         0       0       0       0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_Display_Update
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _Display_Normal
  4777  0660                     _Display_Normal:
  4778  0660                     i1l2224:	
  4779                           ;incstack = 0
  4780                           ; Regs used in _Display_Normal: []
  4781                           
  4782                           
  4783                           ;Display/Display.c: 102:   Enable_Minutes=1;
  4784  0660  01FC               	clrf	_Enable_Minutes
  4785  0661  0AFC               	incf	_Enable_Minutes,f
  4786                           
  4787                           ;Display/Display.c: 103:   Enable_Hours=1;
  4788  0662  01FB               	clrf	_Enable_Hours
  4789  0663  0AFB               	incf	_Enable_Hours,f
  4790  0664                     i1l202:
  4791  0664  0008               	return
  4792  0665                     __end_of_Display_Normal:
  4793                           
  4794                           	psect	text31
  4795  0373                     __ptext31:	
  4796 ;; *************** function _Display_Blink *****************
  4797 ;; Defined at:
  4798 ;;		line 59 in file "Display/Display.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  Times_Ms        2    0[COMMON] unsigned int 
  4801 ;;  _MODE_          1    2[COMMON] enum E879
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0, btemp+1
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         3       0       0       0       0
  4814 ;;      Locals:         0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0
  4816 ;;      Totals:         3       0       0       0       0
  4817 ;;Total ram usage:        3 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_Display_Update
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _Display_Blink
  4828  0373                     _Display_Blink:
  4829  0373                     i1l2226:	
  4830                           ;incstack = 0
  4831                           ; Regs used in _Display_Blink: [wreg+status,2+status,0+btemp+1]
  4832                           
  4833                           
  4834                           ;Display/Display.c: 59: void Display_Blink(uint16_t Times_Ms,MODE_t _MODE_);Display/Disp
      +                          lay.c: 60: {;Display/Display.c: 61:     static uint16_t Counter=0;;Display/Display.c: 63
      +                          :         if(Counter*1==Times_Ms)
  4835  0373  0871               	movf	Display_Blink@Times_Ms+1,w
  4836  0374  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0375  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0376  0628               	xorwf	Display_Blink@Counter+1,w
  4839  0377  1D03               	skipz
  4840  0378  2B7B               	goto	u132_25
  4841  0379  0870               	movf	Display_Blink@Times_Ms,w
  4842  037A  0627               	xorwf	Display_Blink@Counter,w
  4843  037B                     u132_25:
  4844  037B  1D03               	skipz
  4845  037C  2B7E               	goto	u132_21
  4846  037D  2B7F               	goto	u132_20
  4847  037E                     u132_21:
  4848  037E  2BBA               	goto	i1l190
  4849  037F                     u132_20:
  4850  037F                     i1l2228:
  4851                           
  4852                           ;Display/Display.c: 64:         {;Display/Display.c: 65:             if(_MODE_==Minutes_
      +                          Mode)
  4853  037F  3002               	movlw	2
  4854  0380  0672               	xorwf	Display_Blink@_MODE_,w
  4855  0381  1D03               	btfss	3,2
  4856  0382  2B84               	goto	u133_21
  4857  0383  2B85               	goto	u133_20
  4858  0384                     u133_21:
  4859  0384  2B9B               	goto	i1l2242
  4860  0385                     u133_20:
  4861  0385                     i1l2230:
  4862                           
  4863                           ;Display/Display.c: 66:             {;Display/Display.c: 67:                 if(Enable_M
      +                          inutes==1)
  4864  0385  037C               	decf	_Enable_Minutes,w
  4865  0386  1D03               	btfss	3,2
  4866  0387  2B89               	goto	u134_21
  4867  0388  2B8A               	goto	u134_20
  4868  0389                     u134_21:
  4869  0389  2B94               	goto	i1l2238
  4870  038A                     u134_20:
  4871  038A                     i1l2232:
  4872                           
  4873                           ;Display/Display.c: 68:                 {;Display/Display.c: 69:                    Enab
      +                          le_Minutes=0;
  4874  038A  01FC               	clrf	_Enable_Minutes
  4875  038B                     i1l2234:
  4876                           
  4877                           ;Display/Display.c: 70:                    (PORTA&=~(1<<4)) ;
  4878  038B  30EF               	movlw	239
  4879  038C  00FF               	movwf	btemp+1
  4880  038D  087F               	movf	btemp+1,w
  4881  038E  0585               	andwf	5,f	;volatile
  4882  038F                     i1l2236:
  4883                           
  4884                           ;Display/Display.c: 71:                     (PORTA&=~(1<<5)) ;
  4885  038F  30DF               	movlw	223
  4886  0390  00FF               	movwf	btemp+1
  4887  0391  087F               	movf	btemp+1,w
  4888  0392  0585               	andwf	5,f	;volatile
  4889                           
  4890                           ;Display/Display.c: 72:                 }
  4891  0393  2B9B               	goto	i1l2242
  4892  0394                     i1l2238:
  4893  0394  087C               	movf	_Enable_Minutes,w
  4894  0395  1D03               	btfss	3,2
  4895  0396  2B98               	goto	u135_21
  4896  0397  2B99               	goto	u135_20
  4897  0398                     u135_21:
  4898  0398  2B9B               	goto	i1l2242
  4899  0399                     u135_20:
  4900  0399                     i1l2240:
  4901                           
  4902                           ;Display/Display.c: 74:                 {;Display/Display.c: 75:                    Enab
      +                          le_Minutes=1;
  4903  0399  01FC               	clrf	_Enable_Minutes
  4904  039A  0AFC               	incf	_Enable_Minutes,f
  4905  039B                     i1l2242:
  4906                           
  4907                           ;Display/Display.c: 79:             if(_MODE_==Hours_Mode)
  4908  039B  0372               	decf	Display_Blink@_MODE_,w
  4909  039C  1D03               	btfss	3,2
  4910  039D  2B9F               	goto	u136_21
  4911  039E  2BA0               	goto	u136_20
  4912  039F                     u136_21:
  4913  039F  2BB6               	goto	i1l2256
  4914  03A0                     u136_20:
  4915  03A0                     i1l2244:
  4916                           
  4917                           ;Display/Display.c: 80:             {;Display/Display.c: 81:                 if(Enable_H
      +                          ours==1)
  4918  03A0  037B               	decf	_Enable_Hours,w
  4919  03A1  1D03               	btfss	3,2
  4920  03A2  2BA4               	goto	u137_21
  4921  03A3  2BA5               	goto	u137_20
  4922  03A4                     u137_21:
  4923  03A4  2BAF               	goto	i1l2252
  4924  03A5                     u137_20:
  4925  03A5                     i1l2246:
  4926                           
  4927                           ;Display/Display.c: 82:                 {;Display/Display.c: 83:                    Enab
      +                          le_Hours=0;
  4928  03A5  01FB               	clrf	_Enable_Hours
  4929  03A6                     i1l2248:
  4930                           
  4931                           ;Display/Display.c: 84:                    (PORTA&=~(1<<2)) ;
  4932  03A6  30FB               	movlw	251
  4933  03A7  00FF               	movwf	btemp+1
  4934  03A8  087F               	movf	btemp+1,w
  4935  03A9  0585               	andwf	5,f	;volatile
  4936  03AA                     i1l2250:
  4937                           
  4938                           ;Display/Display.c: 85:                     (PORTA&=~(1<<3)) ;
  4939  03AA  30F7               	movlw	247
  4940  03AB  00FF               	movwf	btemp+1
  4941  03AC  087F               	movf	btemp+1,w
  4942  03AD  0585               	andwf	5,f	;volatile
  4943                           
  4944                           ;Display/Display.c: 86:                 }
  4945  03AE  2BB6               	goto	i1l2256
  4946  03AF                     i1l2252:
  4947  03AF  087B               	movf	_Enable_Hours,w
  4948  03B0  1D03               	btfss	3,2
  4949  03B1  2BB3               	goto	u138_21
  4950  03B2  2BB4               	goto	u138_20
  4951  03B3                     u138_21:
  4952  03B3  2BB6               	goto	i1l2256
  4953  03B4                     u138_20:
  4954  03B4                     i1l2254:
  4955                           
  4956                           ;Display/Display.c: 88:                 {;Display/Display.c: 89:                    Enab
      +                          le_Hours=1;
  4957  03B4  01FB               	clrf	_Enable_Hours
  4958  03B5  0AFB               	incf	_Enable_Hours,f
  4959  03B6                     i1l2256:
  4960                           
  4961                           ;Display/Display.c: 94:             Counter=1;
  4962  03B6  3001               	movlw	1
  4963  03B7  00A7               	movwf	Display_Blink@Counter
  4964  03B8  3000               	movlw	0
  4965  03B9  00A8               	movwf	Display_Blink@Counter+1
  4966  03BA                     i1l190:	
  4967                           ;Display/Display.c: 95:         }
  4968                           
  4969                           
  4970                           ;Display/Display.c: 96:         Counter++;
  4971  03BA  3001               	movlw	1
  4972  03BB  07A7               	addwf	Display_Blink@Counter,f
  4973  03BC  1803               	skipnc
  4974  03BD  0AA8               	incf	Display_Blink@Counter+1,f
  4975  03BE  3000               	movlw	0
  4976  03BF  07A8               	addwf	Display_Blink@Counter+1,f
  4977  03C0                     i1l199:
  4978  03C0  0008               	return
  4979  03C1                     __end_of_Display_Blink:
  4980                           
  4981                           	psect	text32
  4982  066B                     __ptext32:	
  4983 ;; *************** function _EXTI_SettingButton_CB *****************
  4984 ;; Defined at:
  4985 ;;		line 50 in file "Buttons/Buttons.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		None
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4999 ;;      Params:         0       0       0       0       0
  5000 ;;      Locals:         0       0       0       0       0
  5001 ;;      Temps:          0       0       0       0       0
  5002 ;;      Totals:         0       0       0       0       0
  5003 ;;Total ram usage:        0 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_ISR
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           
  5013                           ;psect for function _EXTI_SettingButton_CB
  5014  066B                     _EXTI_SettingButton_CB:
  5015  066B                     i1l1450:	
  5016                           ;incstack = 0
  5017                           ; Regs used in _EXTI_SettingButton_CB: []
  5018                           
  5019                           
  5020                           ;Buttons/Buttons.c: 52:     ButtonsFlag.SettingButton_Flag=1;
  5021  066B  157D               	bsf	_ButtonsFlag,2
  5022  066C                     i1l99:
  5023  066C  0008               	return
  5024  066D                     __end_of_EXTI_SettingButton_CB:
  5025  000A                     
  5026                           	psect	functab
  5027  0025                     __pfunctab:
  5028  0025                     fptable:
  5029  0025  2825               	goto	fptable	;no entries
  5030  0026                     __i1fptable:
  5031  0026                     i1fptable:
  5032  0026  00FF               	movwf	(btemp+1)& (0+127)
  5033  0027  3000               	movlw	high i1fptable
  5034  0028  008A               	movwf	10
  5035  0029  087F               	movf	(btemp+1)& (0+127),w
  5036  002A  0782               	addwf	2,f
  5037  002B                     i1fpbase:
  5038  002B  282B               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  5039  002C                     fp__EXTI_SettingButton_CB:
  5040  002C  120A  118A  2E6B   	ljmp	_EXTI_SettingButton_CB
  5041  002F                     fp__Scheduler_Task3:
  5042  002F  120A  118A  2E5A   	ljmp	_Scheduler_Task3
  5043  0032                     fp__Scheduler_Task1:
  5044  0032  120A  118A  2E54   	ljmp	_Scheduler_Task1
  5045  0035                     fp__Scheduler_Task2:
  5046  0035  120A  118A  2E17   	ljmp	_Scheduler_Task2
  5047  0038                     fp__Timer0_CB:
  5048  0038  120A  118A  2DDB   	ljmp	_Timer0_CB
  5049  003B                     __end_of__i1fptable:
  5050  007E                     btemp	set	126	;btemp
  5051  007E                     wtemp0	set	126
  5052                           
  5053                           	psect	config
  5054                           
  5055                           ;Config register CONFIG @ 0x2007
  5056                           ;	Oscillator Selection bits
  5057                           ;	FOSC = HS, HS oscillator
  5058                           ;	Watchdog Timer Enable bit
  5059                           ;	WDTE = OFF, WDT disabled
  5060                           ;	Power-up Timer Enable bit
  5061                           ;	PWRTE = OFF, PWRT disabled
  5062                           ;	Brown-out Reset Enable bit
  5063                           ;	BOREN = OFF, BOR disabled
  5064                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5065                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5066                           ;	Data EEPROM Memory Code Protection bit
  5067                           ;	CPD = OFF, Data EEPROM code protection off
  5068                           ;	Flash Program Memory Write Enable bits
  5069                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5070                           ;	In-Circuit Debugger Mode bit
  5071                           ;	DEBUG = 0x1, unprogrammed default
  5072                           ;	Flash Program Memory Code Protection bit
  5073                           ;	CP = OFF, Code protection off
  5074  2007                     	org	8199
  5075  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     19      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Scheduler_Update$1067	const PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    memset@p1	PTR void  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 

    memset@p	PTR unsigned char  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 

    S333Interrupt_CbStruct_T$EXTI_CB	PTR FTN()void  size(1) Largest target is 1
		 -> EXTI_SettingButton_CB(), 

    Interrupt_CbStruct.EXTI_CB	PTR FTN()void  size(1) Largest target is 1
		 -> EXTI_SettingButton_CB(), 

    S333Interrupt_CbStruct_T$Timer_CB	PTR FTN()void  size(1) Largest target is 1
		 -> Timer0_CB(), 

    Interrupt_CbStruct.Timer_CB	PTR FTN()void  size(1) Largest target is 1
		 -> Timer0_CB(), 

    S94Tasks_T$Task	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    Tasks.Task	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    sp__memset	PTR void  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _Scheduler_Update->___llmod
    ___llmod->___bmul
    _Scheduler_Task3->_Clock_Update
    _Clock_Update->_Clock_Normal
    _Clock_Update->___awdiv
    _Clock_Normal->___wmul
    _Buttons_Update->___awmod
    _Scheduler_Task1->_Display_Update
    _Display_Update->_SSD_DigitSelector
    _SSD_DigitSelector->_SSD_Display

Critical Paths under _main in BANK0

    _Scheduler_Init->_memset
    _Buttons_Init->_memset

Critical Paths under _ISR in BANK0

    _Timer0_CB->_Scheduler_Update
    _Scheduler_Update->___llmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1870
                       _Buttons_Init
                         _Clock_Init
                       _Display_Init
                          _GPIO_Init
                   _ModeManager_Init
                     _Scheduler_Init
                         _Timer_Init
                        _Timer_Start
 ---------------------------------------------------------------------------------
 (1) _Timer_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Scheduler_Init                                       0     0      0     935
                             _memset
 ---------------------------------------------------------------------------------
 (1) _ModeManager_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buttons_Init                                         0     0      0     935
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     935
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0    4206
                                              9 BANK0      4     4      0
              _EXTI_SettingButton_CB *
                          _Timer0_CB *
 ---------------------------------------------------------------------------------
 (4) _Timer0_CB                                            0     0      0    4206
                   _Scheduler_Update
 ---------------------------------------------------------------------------------
 (5) _Scheduler_Update                                     7     7      0    4206
                                              2 BANK0      7     7      0
                    _Scheduler_Task1 *
                    _Scheduler_Task2 *
                    _Scheduler_Task3 *
                             ___bmul
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8      49
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     206
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task3                                      0     0      0    2314
                       _Clock_Update
 ---------------------------------------------------------------------------------
 (7) _Clock_Update                                         2     2      0    2314
                                              8 COMMON     2     2      0
                 _Clock_Hour_Setting
              _Clock_Minutes_Setting
                       _Clock_Normal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     805
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _Clock_Normal                                         2     2      0     536
                                              6 COMMON     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     536
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) _Clock_Minutes_Setting                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Clock_Hour_Setting                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task2                                      0     0      0     973
                     _Buttons_Update
                 _ModeManager_Update
 ---------------------------------------------------------------------------------
 (7) _ModeManager_Update                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Buttons_Update                                       0     0      0     973
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     973
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task1                                      0     0      0     484
                     _Display_Update
 ---------------------------------------------------------------------------------
 (7) _Display_Update                                       2     2      0     484
                                              5 COMMON     2     2      0
                      _Display_Blink
                     _Display_Normal
                  _SSD_DigitSelector
 ---------------------------------------------------------------------------------
 (8) _SSD_DigitSelector                                    2     2      0      31
                                              3 COMMON     2     2      0
                        _SSD_Display
 ---------------------------------------------------------------------------------
 (9) _SSD_Display                                          3     3      0      31
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _Display_Normal                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Display_Blink                                        3     0      3     453
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (4) _EXTI_SettingButton_CB                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_Init
     _memset
   _Clock_Init
   _Display_Init
   _GPIO_Init
   _ModeManager_Init
   _Scheduler_Init
     _memset
   _Timer_Init
   _Timer_Start

 _ISR (ROOT)
   _EXTI_SettingButton_CB *
   _Timer0_CB *
     _Scheduler_Update
       _Scheduler_Task1 *
         _Display_Update
           _Display_Blink
           _Display_Normal
           _SSD_DigitSelector
             _SSD_Display
       _Scheduler_Task2 *
         _Buttons_Update
           ___awmod
         _ModeManager_Update
       _Scheduler_Task3 *
         _Clock_Update
           _Clock_Hour_Setting
           _Clock_Minutes_Setting
           _Clock_Normal
             ___wmul
           ___awdiv
           ___awmod
       ___bmul *
       ___llmod *
         ___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 22 17:29:12 2020

                             pc 0002                  ___bmul@product 0071                              l30 0506  
                            l43 0637                              l29 0506                              l64 0645  
                            l67 066A                              l89 052F                    ___awdiv@sign 0075  
                            fsr 0004             ___wmul@multiplicand 0072                             l113 057E  
                           l117 057F                             l109 057B                             l303 0653  
                           l152 059D                             l219 0668                             l177 05DA  
                           l934 05BF                             _ISR 047D                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0075                            ?_ISR 0070  
                          l2000 0590                            l2010 05C0                            l2002 0594  
                          l2012 05C4                            l2014 064E                            l2006 0595  
                          l2030 0643                            l2008 0599                            l2016 0665  
                          l2032 0644                            l2026 0638                            l2028 063F  
                          l2036 0669          ?_Clock_Minutes_Setting 0070                            l2610 052D  
                          l2612 052E                            l2620 04DE                            l2606 050A  
                          l2614 0628                            l2630 04FC                            l2622 04E8  
                          l2608 052A                            l2632 0501                            l2624 04ED  
                          l2626 04F2                            l2628 04F7                            l2590 05B1  
                          l2584 05A1                            l2586 05A6                            l2588 05AD  
                          l1992 0580                            l1984 057B                            l1994 0584  
                          l1996 0588                            l1998 058C                            u1930 05BF  
                          u1931 05BE                            _MODE 0031                            i1l70 05F0  
                          i1l49 0210                            i1l96 0372                            i1l99 066C  
                          _TMR0 0001                            _Tick 0020                            _main 04DE  
                          btemp 007E                            start 0012              __size_of_GPIO_Init 0023  
             ___bmul@multiplier 0072                ??_Scheduler_Init 004E                           ??_ISR 0044  
                    _Clock_Init 064E            __end_of_Clock_Normal 0407            __end_of_Clock_Update 0145  
                         ?_main 0070                 __end_of___awdiv 01AC                 __end_of___awmod 02C7  
               ___awdiv@divisor 0070                 __end_of___llmod 031D                           i1l202 0664  
                         i1l311 0144                           i1l224 0535                           i1l320 0406  
                         i1l225 0554                           i1l330 04DD                           i1l323 04C6  
                         i1l228 0555                           i1l340 047C                           i1l333 0463  
                         i1l245 04A1                           i1l190 03BA                           i1l280 065F  
                         i1l185 0446                           i1l274 0659                           i1l506 0605  
                         i1l277 0627                           i1l702 031C                           i1l199 03C0  
                         i1l480 0562                           i1l633 01AB                           i1l394 026D  
                         i1l482 057A                           i1l379 00C1                           i1l646 02C6  
               ___awdiv@counter 0074                           _PORTA 0005                           _PORTB 0006  
                         _PORTD 0008                           _TRISA 0085                           _TRISB 0086  
                         _TRISD 0088                           _Clock 0024                _ModeManager_Init 0665  
                         _Tasks 060C      __end_of_ModeManager_Update 0556                           fpbase 0000  
         Display_Blink@Times_Ms 0070                   ?_Buttons_Init 0070                           pclath 000A  
                         status 0003                           wtemp0 007E         __size_of_Buttons_Update 0056  
               __initialization 0015               ??_Scheduler_Task1 0077               ??_Scheduler_Task2 0076  
             ??_Scheduler_Task3 007A                    __end_of_main 050A  Buttons_Update@Debounce_Counter 002F  
                        ??_main 004E               __end_of_GPIO_Init 059E            __end_of_Display_Init 05DB  
              ___llmod@dividend 0077                ___awdiv@dividend 0072                  ??_Buttons_Init 004E  
             SSD_Display@Number 0072                          i1l2200 0240                          i1l2210 0556  
                        i1l2204 0245                          i1l2220 0576                          i1l2212 0558  
                        i1l2230 0385                          i1l2214 055C                          i1l2310 03E0  
                        i1l2240 0399                          i1l2232 038A                          i1l2224 0660  
                        i1l2216 0569                          i1l2320 03F4                          i1l2312 03E6  
                        i1l2400 0170                          u200_20 02E5                          u200_21 02E4  
                        i1l1450 066B                          i1l2250 03AA                          i1l2234 038B  
                        i1l2242 039B                          i1l2226 0373                          i1l2330 04AE  
                        i1l2218 0570                          i1l2322 03FA                          i1l2314 03E7  
                        i1l2306 03C1                          i1l2410 0190                          i1l2402 0174  
                        i1l2252 03AF                          i1l2244 03A0                          i1l2236 038F  
                        i1l2228 037F                          i1l2180 0212                          i1l2260 003C  
                        i1l2340 04C4                          i1l2332 04B2                          i1l2324 03FE  
                        i1l2316 03EF                          i1l2308 03C7                          i1l2412 0197  
                        i1l2404 0178                          i1l2254 03B4                          i1l2246 03A5  
                        i1l2238 0394                          i1l2190 0227                          i1l2182 0213  
                        i1l2270 005A                          i1l2262 0041                          i1l2430 027A  
                        i1l2422 026E                          i1l2502 0530                          i1l2350 04DC  
                        i1l2342 04CA                          i1l2334 04B6                          i1l2326 03FF  
                        i1l2318 03F3                          i1l2406 0189                          i1l2414 019D  
                        i1l2248 03A6                          i1l2256 03B6                          i1l2192 022C  
                        i1l2184 0218                          i1l2280 0074                          i1l2272 005B  
                        i1l2264 0042                          i1l2440 0293                          i1l2432 027E  
                        i1l2424 026F                          i1l2512 053F                          i1l2344 04CE  
                        i1l2336 04BE                          i1l2360 045B                          i1l2352 0447  
                        i1l2328 0405                          i1l2416 01A2                          i1l2408 018F  
                        i1l2520 00C3                          u201_20 02F7                          u201_21 02F6  
                        i1l2194 0231                          i1l2186 021D                          i1l2290 008E  
                        i1l2282 0075                          i1l2274 0067                          i1l2266 004E  
                        i1l2258 003B                          i1l2450 02B2                          i1l2442 0297  
                        i1l2434 0283                          i1l2426 0273                          i1l2506 0538  
                        i1l2346 04D5                          i1l2338 04C0                          i1l2370 0472  
                        i1l2362 045D                          i1l2354 044B                          i1l2418 01A7  
                        i1l2522 00C9                          i1l2530 00EA                          i1l2196 0236  
                        i1l2188 0222                          i1l2292 009A                          i1l2284 0081  
                        i1l2276 0068                          i1l2268 0055                          i1l2444 029B  
                        i1l2436 0289                          i1l2452 02B8                          i1l2428 0278  
                        i1l2460 031D                          i1l2508 053D                          i1l2348 04DA  
                        i1l2372 0474                          i1l2364 0461                          i1l2356 044F  
                        i1l2380 0146                          i1l2524 00CF                          i1l2540 061D  
                        u201_25 02F3                          i1l2198 023B                          i1l2286 0088  
                        i1l2278 006F                          i1l2454 02BD                          i1l2446 02A5  
                        i1l2438 028C                          i1l2470 0355                          i1l2462 0330  
                        i1l2374 0479                          i1l2366 0467                          i1l2358 0457  
                        i1l2390 015A                          i1l2382 014A                          i1l2518 00C2  
                        i1l2542 0622                          i1l2550 05F7                          i1l2288 008D  
                        i1l2296 00A1                          i1l2480 0407                          i1l2456 02C2  
                        i1l2448 02AB                          i1l2472 035C                          i1l2464 0346  
                        i1l2376 047B                          i1l2368 046B                          i1l2392 015E  
                        i1l2384 014F                          i1l2528 00D5                          i1l2544 065A  
                        i1l2536 0654                          i1l2552 05FB                          i1l2800 0481  
                        i1l2298 00B9                          i1l2490 0429                          i1l2482 0408  
                        i1l2474 0361                          i1l2466 034B                          i1l2394 0160  
                        i1l2386 0151                          i1l2378 0145                          i1l2538 0617  
                        i1l2554 05FD                          i1l2546 05F2                          i1l2810 0495  
                        i1l2802 0483                          i1l2484 040E                          i1l2476 0366  
                        i1l2468 0350                          i1l2396 0166                          i1l2388 0155  
                        i1l2556 05FF                          i1l2548 05F3                          i1l2804 0484  
                        u130_25 056A                          u202_25 0306                          i1l2486 0419  
                        i1l2494 042C                          i1l2478 036B                          i1l2398 0169  
                        i1l2558 0604                          i1l2806 0490                          i1l2488 041C  
                        i1l2496 0441                          u131_20 0576                          u203_20 0314  
                        i1l2760 02CF                          i1l2808 0494                          u131_21 0575  
                        u203_21 0313                          i1l2930 024D                          i1l2922 00DF  
                        i1l2770 02F7                          i1l2762 02D4                          i1l2924 0549  
                        i1l2772 0305                          i1l2764 02DD                          i1l2780 01AC  
                        i1l2926 0436                          i1l2774 030E                          i1l2766 02E1  
                        i1l2758 02C7                          i1l2790 0204                          u132_20 037F  
                        i1l2928 00AB                          u140_20 005A                          i1l2768 02E5  
                        i1l2776 0314                          i1l2792 020A                          u204_20 01EC  
                        u132_21 037E                          u140_21 0059                          u204_21 01EB  
                        i1l2786 01AF                          i1l2794 05DB                          i1l2788 01EC  
                        i1l2796 05EB                          u132_25 037B                          i1l2798 047D  
                        u133_20 0385                          u141_20 0074                          u205_20 0210  
                        u133_21 0384                          u141_21 0073                          u205_21 020F  
                        u134_20 038A                          u142_20 008D                          u150_20 04CA  
                        u206_20 0481                          u134_21 0389                          u142_21 008C  
                        u150_21 04C9                          u206_21 0480                          _INTEDG 040E  
                        u135_20 0399                          u151_20 04CE                          u143_20 03E0  
                        u207_20 0494                          u135_21 0398                          u151_21 04CD  
                        u143_21 03DF                          u207_21 0493                          u136_20 03A0  
                        u152_20 04D5                          u128_20 055C                          u144_20 03EF  
                        u160_20 0155                          u136_21 039F                          u152_21 04D4  
                        u128_21 055B                          u144_21 03EE                          u160_21 0154  
                        u137_20 03A5                          u153_20 044B                          u145_20 03FA  
                        u161_20 0166                          u137_21 03A4                          u153_21 044A  
                        u145_21 03F9                          u161_21 0165                          u129_25 0563  
                        u138_20 03B4                          u170_20 027E                          u154_20 044F  
                        u146_20 0405                          u138_21 03B3                          u170_21 027D  
                        u154_21 044E                          u146_21 0404                          u162_25 016A  
                        u139_20 0041                          u171_20 0289                          u147_20 04B2  
                        u155_20 0457                          u163_20 0178                          u139_21 0040  
                        u171_21 0288                          u147_21 04B1                          u155_21 0456  
                        u163_21 0177                          u180_20 0355                          u148_20 04B6  
                        u156_20 0467                          u180_21 0354                          u148_21 04B5  
                        u156_21 0466                          u172_25 028D                          u164_25 0179  
                        u173_20 029B                          u181_20 0361                          u149_20 04BE  
                        u157_20 046B                          u165_20 0189                          u173_21 029A  
                        u181_21 0360                          u149_21 04BD                          u157_21 046A  
                        u165_21 0188                          u165_25 0185                          u174_20 02A5  
                        u182_20 0366                          u158_20 0472                          u174_21 02A4  
                        u182_21 0365                          u158_21 0471                          u174_25 02A1  
                        u166_25 0191                          u183_20 036B                          u167_20 019D  
                        u159_20 014A                          u183_21 036A                          u167_21 019C  
                        u159_21 0149                          u175_25 02AC                          u176_20 02B8  
                        u184_20 0534                          u168_20 01A2                          u176_21 02B7  
                        u184_21 0533                          u168_21 01A1                          u177_20 02BD  
                        u169_20 0273                          u185_20 05F7                          u177_21 02BC  
                        u169_21 0272                          u185_21 05F6                          u178_20 034B  
                        u186_20 0604                          u178_21 034A                          u186_21 0603  
                        u179_20 0350                          u179_21 034F                          u198_20 02CF  
                        u198_21 02CE                          u199_25 02D6                      __i1fptable 0026  
                        _TMR0IF 005A           _EXTI_SettingButton_CB 066B                          _Digit1 002D  
                        _Digit2 002C                          _Digit3 002B                          _Digit4 002A  
                        ___bmul 05F1                  _Enable_Minutes 007C                          ___wmul 0556  
                     ??___awdiv 0074                       ??___awmod 0074                       ??___llmod 003B  
                    _Timer_Init 0638                     ?_Clock_Init 0070                          _memset 059E  
              ___awdiv@quotient 0076                 ___awmod@divisor 0070              __size_of_Timer0_CB 0016  
               ___awmod@counter 0074                   ??_Timer_Start 0048                          fptable 0025  
                        fptotal 0000                          saved_w 007E         __end_of__initialization 0021  
           ___bmul@multiplicand 0070           __size_of_Clock_Normal 0046                    ?_SSD_Display 0070  
         __size_of_Clock_Update 0083             Display_Blink@_MODE_ 0072                  __pcstackCOMMON 0070  
             ?_Scheduler_Update 0070                   __end_of_Tasks 0615              ??_Scheduler_Update 003D  
                   _ButtonsFlag 007D     __size_of_Clock_Hour_Setting 0030                  _OPTION_REGbits 0081  
       ??_Clock_Minutes_Setting 0070                    _Enable_Hours 007B             __end_of_Timer_Start 066B  
                    __pbssBANK0 0020                    _Clock_Normal 03C1             __size_of_Clock_Init 0006  
        ?_EXTI_SettingButton_CB 0070                    _Clock_Update 00C2               __end_of_Timer0_CB 05F1  
                _Buttons_Update 031D        __end_of_ModeManager_Init 0669                      __pmaintext 04DE  
         __end_of_Display_Blink 03C1                         ?___bmul 0070                         ?___wmul 0070  
                    __pintentry 0004                     ?_Timer_Init 0070            __end_of_Buttons_Init 0530  
                       ?_memset 0048           __size_of_Display_Init 001B                      __stringtab 0606  
               _Scheduler_Task1 0654                 _Scheduler_Task2 0617                 _Scheduler_Task3 065A  
             Scheduler_Update@i 0043                         i1fpbase 002B                         _Display 0030  
        __end_of_Buttons_Update 0373              _ModeManager_Update 0530                    _Display_Init 05C0  
               __size_of___bmul 0015                         ___awdiv 0145                         ___awmod 026E  
               __size_of___wmul 0025                         ___llmod 02C7             ?_ModeManager_Update 0070  
               __size_of_memset 0022                         __ptext1 0669                         __ptext2 0638  
                       __ptext3 0628                         __ptext4 0665                         __ptext5 057B  
                       __ptext6 05C0                         __ptext7 064E                         __ptext8 050A  
                       __ptext9 059E         __size_of_Display_Normal 0005             __size_of__i1fptable 0015  
       __size_of_Display_Update 0040                    __size_of_ISR 0031                     _Timer_Start 0669  
              ___awmod@dividend 0072                         clrloop0 0647                       _GPIO_Init 057B  
          end_of_initialization 0021            ??_ModeManager_Update 0070             __size_of_Timer_Init 000E  
                       memset@c 0048                         memset@n 004A                         memset@p 004C  
               ?_Buttons_Update 0070            __size_of_SSD_Display 005D                    ??_Clock_Init 0048  
       __size_of_Scheduler_Init 0010         __end_of_Scheduler_Task1 065A         __end_of_Scheduler_Task2 0628  
       __end_of_Scheduler_Task3 0660                      ?_GPIO_Init 0070              __end_of_Clock_Init 0654  
         __size_of_Buttons_Init 0026                   _DigitSelector 002E                  __end_of___bmul 0606  
          Display_Blink@Counter 0027                  __end_of___wmul 057B                  __end_of_memset 05C0  
           start_initialization 0015                     __end_of_ISR 04AE       __size_of_Scheduler_Update 0065  
           Clock_Normal@counter 0029         ??_EXTI_SettingButton_CB 0070  __size_of_Clock_Minutes_Setting 0036  
 __end_of_Clock_Minutes_Setting 047D                    _Buttons_Init 050A                 ___llmod@divisor 0073  
               ___llmod@counter 003C                       _Task_Flag 0038                       _Timer0_CB 05DB  
             ?_ModeManager_Init 0070                        ??___bmul 0071                        ??___wmul 0074  
                  ??_Timer_Init 0048              ??_ModeManager_Init 0048                        ??_memset 004C  
    __end_of_Clock_Hour_Setting 04DE                  _Display_Normal 0660                  _Display_Update 0407  
            __end_of__i1fptable 003B                     __pbssCOMMON 007B                       ___latbits 0002  
                 __pcstackBANK0 003B                ?_Scheduler_Task1 0070                ?_Scheduler_Task2 0070  
              ?_Scheduler_Task3 0070                     ??_GPIO_Init 0048              __end_of_Timer_Init 0646  
                    ?_Timer0_CB 0070      __end_of_Interrupt_CbStruct 0617                       __pfunctab 0025  
                      ?___awdiv 0070                        ?___awmod 0070                        ?___llmod 0073  
        __end_of_Display_Normal 0665               _SSD_DigitSelector 003B          __end_of_Display_Update 0447  
                     __pstrings 0606              ?_SSD_DigitSelector 0070                    ?_Timer_Start 0070  
                _Scheduler_Init 0628             ??_SSD_DigitSelector 0073          __size_of_Display_Blink 004E  
              ??_Buttons_Update 0076               interrupt_function 0004                  ___wmul@product 0074  
                     clear_ram0 0646       __end_of_SSD_DigitSelector 00C2                 ?_Display_Normal 0070  
               ?_Display_Update 0070          __end_of_Scheduler_Init 0638                     __stringbase 060B  
             ___wmul@multiplier 0070               _Debounce_UpButton 0035                _Scheduler_Update 01AC  
                      i1fptable 0026                        i1fptotal 000A     __size_of_ModeManager_Update 0026  
                 ??_SSD_Display 0070                     ??_Timer0_CB 007B                   _Display_Blink 0373  
              __size_of___awdiv 0067                __size_of___awmod 0059                __size_of___llmod 0056  
               ?_Scheduler_Init 0070              __end_of__stringtab 060C                        __ptext10 047D  
                      __ptext11 05DB                        __ptext20 03C1                        __ptext12 01AC  
                      __ptext21 0556                        __ptext13 02C7                        __ptext30 0660  
                      __ptext22 0447                        __ptext14 05F1                        __ptext31 0373  
                      __ptext23 04AE                        __ptext15 0617                        __ptext32 066B  
                      __ptext24 0530                        __ptext16 0654                        __ptext25 031D  
                      __ptext17 065A                        __ptext26 026E                        __ptext18 00C2  
                      __ptext27 0407                        __ptext19 0145                        __ptext28 003B  
                      __ptext29 0211  __size_of_EXTI_SettingButton_CB 0002                   ?_Clock_Normal 0070  
 __end_of_EXTI_SettingButton_CB 066D                   ?_Clock_Update 0070                   __size_of_main 002C  
                ?_Display_Blink 0070      __size_of_SSD_DigitSelector 0087             __end_of_SSD_Display 026E  
                    _INTCONbits 000B       __size_of_ModeManager_Init 0004            __size_of_Timer_Start 0002  
                      memset@p1 004D                    fp__Timer0_CB 0038              _Clock_Hour_Setting 04AE  
                ??_Clock_Normal 0076                  ??_Clock_Update 0078                        intlevel1 0025  
         _Clock_Minutes_Setting 0447             ?_Clock_Hour_Setting 0070                       stringcode 0606  
                 ?_Display_Init 0070            ??_Clock_Hour_Setting 0070              _Interrupt_CbStruct 0615  
                      stringdir 0606                        stringtab 0606        __size_of_Scheduler_Task1 0006  
      __size_of_Scheduler_Task2 0011        __size_of_Scheduler_Task3 0006              fp__Scheduler_Task1 0032  
            fp__Scheduler_Task2 0035              fp__Scheduler_Task3 002F             _Debounce_DownButton 0032  
               ??_Display_Blink 0073        fp__EXTI_SettingButton_CB 002C                ??_Display_Normal 0070  
              ??_Display_Update 0075                  ??_Display_Init 0048                     _SSD_Display 0211  
      __end_of_Scheduler_Update 0211  
