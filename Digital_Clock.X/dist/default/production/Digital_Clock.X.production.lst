

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 22 05:50:17 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	functab,global,class=ENTRY,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0088                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0098                     	;# 
   312  0099                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0000                     	;# 
   444  0001                     	;# 
   445  0002                     	;# 
   446  0003                     	;# 
   447  0004                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  0007                     	;# 
   451  0008                     	;# 
   452  0009                     	;# 
   453  000A                     	;# 
   454  000B                     	;# 
   455  000C                     	;# 
   456  000D                     	;# 
   457  000E                     	;# 
   458  000E                     	;# 
   459  000F                     	;# 
   460  0010                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0013                     	;# 
   464  0014                     	;# 
   465  0015                     	;# 
   466  0015                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001D                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  0081                     	;# 
   479  0085                     	;# 
   480  0086                     	;# 
   481  0087                     	;# 
   482  0088                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0094                     	;# 
   491  0098                     	;# 
   492  0099                     	;# 
   493  009C                     	;# 
   494  009D                     	;# 
   495  009E                     	;# 
   496  009F                     	;# 
   497  010C                     	;# 
   498  010D                     	;# 
   499  010E                     	;# 
   500  010F                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  000E                     	;# 
   519  000F                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0013                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001D                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  0081                     	;# 
   539  0085                     	;# 
   540  0086                     	;# 
   541  0087                     	;# 
   542  0088                     	;# 
   543  0089                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0094                     	;# 
   551  0098                     	;# 
   552  0099                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0088                     	;# 
   603  0089                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  009F                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  018C                     	;# 
   622  018D                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  000E                     	;# 
   639  000F                     	;# 
   640  0010                     	;# 
   641  0011                     	;# 
   642  0012                     	;# 
   643  0013                     	;# 
   644  0014                     	;# 
   645  0015                     	;# 
   646  0015                     	;# 
   647  0016                     	;# 
   648  0017                     	;# 
   649  0018                     	;# 
   650  0019                     	;# 
   651  001A                     	;# 
   652  001B                     	;# 
   653  001B                     	;# 
   654  001C                     	;# 
   655  001D                     	;# 
   656  001E                     	;# 
   657  001F                     	;# 
   658  0081                     	;# 
   659  0085                     	;# 
   660  0086                     	;# 
   661  0087                     	;# 
   662  0088                     	;# 
   663  0089                     	;# 
   664  008C                     	;# 
   665  008D                     	;# 
   666  008E                     	;# 
   667  0091                     	;# 
   668  0092                     	;# 
   669  0093                     	;# 
   670  0094                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009C                     	;# 
   674  009D                     	;# 
   675  009E                     	;# 
   676  009F                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010F                     	;# 
   681  018C                     	;# 
   682  018D                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000D                     	;# 
   697  000E                     	;# 
   698  000E                     	;# 
   699  000F                     	;# 
   700  0010                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0013                     	;# 
   704  0014                     	;# 
   705  0015                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  001D                     	;# 
   716  001E                     	;# 
   717  001F                     	;# 
   718  0081                     	;# 
   719  0085                     	;# 
   720  0086                     	;# 
   721  0087                     	;# 
   722  0088                     	;# 
   723  0089                     	;# 
   724  008C                     	;# 
   725  008D                     	;# 
   726  008E                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0093                     	;# 
   730  0094                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009C                     	;# 
   734  009D                     	;# 
   735  009E                     	;# 
   736  009F                     	;# 
   737  010C                     	;# 
   738  010D                     	;# 
   739  010E                     	;# 
   740  010F                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  0000                     	;# 
   744  0001                     	;# 
   745  0002                     	;# 
   746  0003                     	;# 
   747  0004                     	;# 
   748  0005                     	;# 
   749  0006                     	;# 
   750  0007                     	;# 
   751  0008                     	;# 
   752  0009                     	;# 
   753  000A                     	;# 
   754  000B                     	;# 
   755  000C                     	;# 
   756  000D                     	;# 
   757  000E                     	;# 
   758  000E                     	;# 
   759  000F                     	;# 
   760  0010                     	;# 
   761  0011                     	;# 
   762  0012                     	;# 
   763  0013                     	;# 
   764  0014                     	;# 
   765  0015                     	;# 
   766  0015                     	;# 
   767  0016                     	;# 
   768  0017                     	;# 
   769  0018                     	;# 
   770  0019                     	;# 
   771  001A                     	;# 
   772  001B                     	;# 
   773  001B                     	;# 
   774  001C                     	;# 
   775  001D                     	;# 
   776  001E                     	;# 
   777  001F                     	;# 
   778  0081                     	;# 
   779  0085                     	;# 
   780  0086                     	;# 
   781  0087                     	;# 
   782  0088                     	;# 
   783  0089                     	;# 
   784  008C                     	;# 
   785  008D                     	;# 
   786  008E                     	;# 
   787  0091                     	;# 
   788  0092                     	;# 
   789  0093                     	;# 
   790  0094                     	;# 
   791  0098                     	;# 
   792  0099                     	;# 
   793  009C                     	;# 
   794  009D                     	;# 
   795  009E                     	;# 
   796  009F                     	;# 
   797  010C                     	;# 
   798  010D                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  0000                     	;# 
   804  0001                     	;# 
   805  0002                     	;# 
   806  0003                     	;# 
   807  0004                     	;# 
   808  0005                     	;# 
   809  0006                     	;# 
   810  0007                     	;# 
   811  0008                     	;# 
   812  0009                     	;# 
   813  000A                     	;# 
   814  000B                     	;# 
   815  000C                     	;# 
   816  000D                     	;# 
   817  000E                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0014                     	;# 
   825  0015                     	;# 
   826  0015                     	;# 
   827  0016                     	;# 
   828  0017                     	;# 
   829  0018                     	;# 
   830  0019                     	;# 
   831  001A                     	;# 
   832  001B                     	;# 
   833  001B                     	;# 
   834  001C                     	;# 
   835  001D                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  0081                     	;# 
   839  0085                     	;# 
   840  0086                     	;# 
   841  0087                     	;# 
   842  0088                     	;# 
   843  0089                     	;# 
   844  008C                     	;# 
   845  008D                     	;# 
   846  008E                     	;# 
   847  0091                     	;# 
   848  0092                     	;# 
   849  0093                     	;# 
   850  0094                     	;# 
   851  0098                     	;# 
   852  0099                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  009F                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  018C                     	;# 
   862  018D                     	;# 
   863  0000                     	;# 
   864  0001                     	;# 
   865  0002                     	;# 
   866  0003                     	;# 
   867  0004                     	;# 
   868  0005                     	;# 
   869  0006                     	;# 
   870  0007                     	;# 
   871  0008                     	;# 
   872  0009                     	;# 
   873  000A                     	;# 
   874  000B                     	;# 
   875  000C                     	;# 
   876  000D                     	;# 
   877  000E                     	;# 
   878  000E                     	;# 
   879  000F                     	;# 
   880  0010                     	;# 
   881  0011                     	;# 
   882  0012                     	;# 
   883  0013                     	;# 
   884  0014                     	;# 
   885  0015                     	;# 
   886  0015                     	;# 
   887  0016                     	;# 
   888  0017                     	;# 
   889  0018                     	;# 
   890  0019                     	;# 
   891  001A                     	;# 
   892  001B                     	;# 
   893  001B                     	;# 
   894  001C                     	;# 
   895  001D                     	;# 
   896  001E                     	;# 
   897  001F                     	;# 
   898  0081                     	;# 
   899  0085                     	;# 
   900  0086                     	;# 
   901  0087                     	;# 
   902  0088                     	;# 
   903  0089                     	;# 
   904  008C                     	;# 
   905  008D                     	;# 
   906  008E                     	;# 
   907  0091                     	;# 
   908  0092                     	;# 
   909  0093                     	;# 
   910  0094                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  009F                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  010E                     	;# 
   920  010F                     	;# 
   921  018C                     	;# 
   922  018D                     	;# 
   923                           
   924                           	psect	strings
   925  060C                     __pstrings:
   926  060C                     stringtab:
   927  060C                     __stringtab:
   928  060C                     stringcode:	
   929                           ;	String table - string pointers are 1 byte each
   930                           
   931  060C                     stringdir:
   932  060C  3006               	movlw	high stringdir
   933  060D  008A               	movwf	10
   934  060E  0804               	movf	4,w
   935  060F  0A84               	incf	4,f
   936  0610  0782               	addwf	2,f
   937  0611                     __stringbase:
   938  0611  3400               	retlw	0
   939  0612                     __end_of__stringtab:
   940  0612                     _Tasks:
   941  0612  3401               	retlw	1
   942  0613  3400               	retlw	0
   943  0614  3407               	retlw	low (fp__Scheduler_Task1-i1fpbase)
   944  0615  3414               	retlw	20
   945  0616  3400               	retlw	0
   946  0617  340A               	retlw	low (fp__Scheduler_Task2-i1fpbase)
   947  0618  34E8               	retlw	232
   948  0619  3403               	retlw	3
   949  061A  3404               	retlw	low (fp__Scheduler_Task3-i1fpbase)
   950  061B                     __end_of_Tasks:
   951  061B                     _Interrupt_CbStruct:
   952  061B  340D               	retlw	low (fp__Timer0_CB-i1fpbase)
   953  061C  3401               	retlw	low (fp__EXTI_SettingButton_CB-i1fpbase)
   954  061D                     __end_of_Interrupt_CbStruct:
   955  0008                     _PORTD	set	8
   956  0005                     _PORTA	set	5
   957  0006                     _PORTB	set	6
   958  000B                     _INTCONbits	set	11
   959  0001                     _TMR0	set	1
   960  005A                     _TMR0IF	set	90
   961  0088                     _TRISD	set	136
   962  0085                     _TRISA	set	133
   963  0086                     _TRISB	set	134
   964  0081                     _OPTION_REGbits	set	129
   965  040E                     _INTEDG	set	1038
   966                           
   967                           	psect	cinit
   968  0015                     start_initialization:	
   969                           ; #config settings
   970                           
   971  0015                     __initialization:
   972                           
   973                           ; Clear objects allocated to COMMON
   974  0015  01FD               	clrf	__pbssCOMMON& (0+127)
   975                           
   976                           ; Clear objects allocated to BANK0
   977  0016  1383               	bcf	3,7	;select IRP bank0
   978  0017  3020               	movlw	low __pbssBANK0
   979  0018  0084               	movwf	4
   980  0019  303D               	movlw	low (__pbssBANK0+29)
   981  001A  120A  118A  2646  120A  118A  	fcall	clear_ram0
   982  001F                     end_of_initialization:	
   983                           ;End of C runtime variable initialization code
   984                           
   985  001F                     __end_of__initialization:
   986  001F  0183               	clrf	3
   987  0020  120A  118A  2CBB   	ljmp	_main	;jump to C main() function
   988                           
   989                           	psect	bssCOMMON
   990  007D                     __pbssCOMMON:
   991  007D                     _ButtonsFlag:
   992  007D                     	ds	1
   993                           
   994                           	psect	bssBANK0
   995  0020                     __pbssBANK0:
   996  0020                     _Tick:
   997  0020                     	ds	4
   998  0024                     _Clock:
   999  0024                     	ds	3
  1000  0027                     Display_Blink@Counter:
  1001  0027                     	ds	2
  1002  0029                     _Digit4:
  1003  0029                     	ds	1
  1004  002A                     _Digit3:
  1005  002A                     	ds	1
  1006  002B                     _Digit2:
  1007  002B                     	ds	1
  1008  002C                     _Digit1:
  1009  002C                     	ds	1
  1010  002D                     Clock_Normal@counter:
  1011  002D                     	ds	1
  1012  002E                     _Enable_Hours:
  1013  002E                     	ds	1
  1014  002F                     _Enable_Minutes:
  1015  002F                     	ds	1
  1016  0030                     _DigitSelector:
  1017  0030                     	ds	1
  1018  0031                     Buttons_Update@Debounce_Counter:
  1019  0031                     	ds	1
  1020  0032                     _Display:
  1021  0032                     	ds	1
  1022  0033                     _MODE:
  1023  0033                     	ds	1
  1024  0034                     _Debounce_DownButton:
  1025  0034                     	ds	3
  1026  0037                     _Debounce_UpButton:
  1027  0037                     	ds	3
  1028  003A                     _Task_Flag:
  1029  003A                     	ds	3
  1030                           
  1031                           	psect	clrtext
  1032  0646                     clear_ram0:	
  1033                           ;	Called with FSR containing the base address, and
  1034                           ;	W with the last address+1
  1035                           
  1036  0646  0064               	clrwdt	;clear the watchdog before getting into this loop
  1037  0647                     clrloop0:
  1038  0647  0180               	clrf	0	;clear RAM location pointed to by FSR
  1039  0648  0A84               	incf	4,f	;increment pointer
  1040  0649  0604               	xorwf	4,w	;XOR with final address
  1041  064A  1903               	btfsc	3,2	;have we reached the end yet?
  1042  064B  3400               	retlw	0	;all done for this memory range, return
  1043  064C  0604               	xorwf	4,w	;XOR again to restore value
  1044  064D  2E47               	goto	clrloop0	;do the next byte
  1045                           
  1046                           	psect	cstackCOMMON
  1047  0070                     __pcstackCOMMON:
  1048  0070                     ?_GPIO_Init:
  1049  0070                     ?_Display_Init:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ?_Clock_Init:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ?_ModeManager_Init:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?_Buttons_Init:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ?_Timer_Init:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?_Scheduler_Init:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_Timer_Start:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_Display_Normal:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ??_Display_Normal:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_Display_Blink:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ?_SSD_DigitSelector:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ?_Scheduler_Task1:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ?_Scheduler_Task2:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?_Scheduler_Task3:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ?_Clock_Update:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?_Clock_Normal:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ?_Clock_Hour_Setting:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ??_Clock_Hour_Setting:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ?_Clock_Minutes_Setting:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ??_Clock_Minutes_Setting:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_SSD_Display:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ??_SSD_Display:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ?_main:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?_Scheduler_Update:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ?_Timer0_CB:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_Buttons_Update:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ?_EXTI_SettingButton_CB:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ??_EXTI_SettingButton_CB:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_Display_Update:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_ModeManager_Update:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ??_ModeManager_Update:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_ISR:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?___bmul:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?___wmul:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?___awdiv:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0070                     ?___awmod:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0070                     ___bmul@multiplicand:	
  1158                           ; 2 bytes @ 0x0
  1159                           
  1160  0070                     Display_Blink@Times_Ms:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ___wmul@multiplier:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166  0070                     ___awdiv@divisor:	
  1167                           ; 2 bytes @ 0x0
  1168                           
  1169  0070                     ___awmod@divisor:	
  1170                           ; 2 bytes @ 0x0
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x0
  1174  0070                     	ds	1
  1175  0071                     ??___bmul:
  1176  0071                     ___bmul@product:	
  1177                           ; 1 bytes @ 0x1
  1178                           
  1179                           
  1180                           ; 1 bytes @ 0x1
  1181  0071                     	ds	1
  1182  0072                     Display_Blink@_MODE_:
  1183  0072                     SSD_Display@Number:	
  1184                           ; 1 bytes @ 0x2
  1185                           
  1186  0072                     ___bmul@multiplier:	
  1187                           ; 1 bytes @ 0x2
  1188                           
  1189  0072                     ___wmul@multiplicand:	
  1190                           ; 1 bytes @ 0x2
  1191                           
  1192  0072                     ___awdiv@dividend:	
  1193                           ; 2 bytes @ 0x2
  1194                           
  1195  0072                     ___awmod@dividend:	
  1196                           ; 2 bytes @ 0x2
  1197                           
  1198                           
  1199                           ; 2 bytes @ 0x2
  1200  0072                     	ds	1
  1201  0073                     ??_Display_Blink:
  1202  0073                     ?___llmod:	
  1203                           ; 1 bytes @ 0x3
  1204                           
  1205  0073                     ___llmod@divisor:	
  1206                           ; 4 bytes @ 0x3
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x3
  1210  0073                     	ds	1
  1211  0074                     ??___wmul:
  1212  0074                     ??___awdiv:	
  1213                           ; 1 bytes @ 0x4
  1214                           
  1215  0074                     ??___awmod:	
  1216                           ; 1 bytes @ 0x4
  1217                           
  1218  0074                     ___awdiv@counter:	
  1219                           ; 1 bytes @ 0x4
  1220                           
  1221  0074                     ___awmod@counter:	
  1222                           ; 1 bytes @ 0x4
  1223                           
  1224  0074                     ___wmul@product:	
  1225                           ; 1 bytes @ 0x4
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0x4
  1229  0074                     	ds	1
  1230  0075                     ___awdiv@sign:
  1231  0075                     ___awmod@sign:	
  1232                           ; 1 bytes @ 0x5
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x5
  1236  0075                     	ds	1
  1237  0076                     ??_Scheduler_Task2:
  1238  0076                     ??_Clock_Normal:	
  1239                           ; 1 bytes @ 0x6
  1240                           
  1241  0076                     ??_Buttons_Update:	
  1242                           ; 1 bytes @ 0x6
  1243                           
  1244  0076                     ___awdiv@quotient:	
  1245                           ; 1 bytes @ 0x6
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0x6
  1249  0076                     	ds	1
  1250  0077                     ___llmod@dividend:
  1251                           
  1252                           ; 4 bytes @ 0x7
  1253  0077                     	ds	1
  1254  0078                     ??_SSD_DigitSelector:
  1255  0078                     ??_Clock_Update:	
  1256                           ; 1 bytes @ 0x8
  1257                           
  1258                           
  1259                           ; 1 bytes @ 0x8
  1260  0078                     	ds	2
  1261  007A                     ??_Scheduler_Task3:
  1262  007A                     ??_Display_Update:	
  1263                           ; 1 bytes @ 0xA
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0xA
  1267  007A                     	ds	1
  1268  007B                     ??___llmod:
  1269                           
  1270                           ; 1 bytes @ 0xB
  1271  007B                     	ds	1
  1272  007C                     ??_Scheduler_Task1:
  1273  007C                     ___llmod@counter:	
  1274                           ; 1 bytes @ 0xC
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0xC
  1278  007C                     	ds	1
  1279  007D                     ??_Timer0_CB:
  1280                           
  1281                           	psect	cstackBANK0
  1282  003D                     __pcstackBANK0:	
  1283                           ; 1 bytes @ 0xD
  1284                           
  1285  003D                     ??_Scheduler_Update:
  1286                           
  1287                           ; 1 bytes @ 0x0
  1288  003D                     	ds	6
  1289  0043                     Scheduler_Update@i:
  1290                           
  1291                           ; 1 bytes @ 0x6
  1292  0043                     	ds	1
  1293  0044                     ??_ISR:
  1294                           
  1295                           ; 1 bytes @ 0x7
  1296  0044                     	ds	4
  1297  0048                     ??_GPIO_Init:
  1298  0048                     ??_Display_Init:	
  1299                           ; 1 bytes @ 0xB
  1300                           
  1301  0048                     ??_Clock_Init:	
  1302                           ; 1 bytes @ 0xB
  1303                           
  1304  0048                     ??_ModeManager_Init:	
  1305                           ; 1 bytes @ 0xB
  1306                           
  1307  0048                     ??_Timer_Init:	
  1308                           ; 1 bytes @ 0xB
  1309                           
  1310  0048                     ??_Timer_Start:	
  1311                           ; 1 bytes @ 0xB
  1312                           
  1313  0048                     ?_memset:	
  1314                           ; 1 bytes @ 0xB
  1315                           
  1316  0048                     memset@c:	
  1317                           ; 1 bytes @ 0xB
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0xB
  1321  0048                     	ds	2
  1322  004A                     memset@n:
  1323                           
  1324                           ; 2 bytes @ 0xD
  1325  004A                     	ds	2
  1326  004C                     ??_memset:
  1327  004C                     memset@p:	
  1328                           ; 1 bytes @ 0xF
  1329                           
  1330                           
  1331                           ; 1 bytes @ 0xF
  1332  004C                     	ds	1
  1333  004D                     memset@p1:
  1334                           
  1335                           ; 1 bytes @ 0x10
  1336  004D                     	ds	1
  1337  004E                     ??_Buttons_Init:
  1338  004E                     ??_Scheduler_Init:	
  1339                           ; 1 bytes @ 0x11
  1340                           
  1341  004E                     ??_main:	
  1342                           ; 1 bytes @ 0x11
  1343                           
  1344                           
  1345                           	psect	maintext
  1346  04BB                     __pmaintext:	
  1347                           ; 1 bytes @ 0x11
  1348 ;;
  1349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1350 ;;
  1351 ;; *************** function _main *****************
  1352 ;; Defined at:
  1353 ;;		line 18 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : B00/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0
  1370 ;;      Totals:         0       0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels required when called:    9
  1373 ;; This function calls:
  1374 ;;		_Buttons_Init
  1375 ;;		_Clock_Init
  1376 ;;		_Display_Init
  1377 ;;		_GPIO_Init
  1378 ;;		_ModeManager_Init
  1379 ;;		_Scheduler_Init
  1380 ;;		_Timer_Init
  1381 ;;		_Timer_Start
  1382 ;; This function is called by:
  1383 ;;		Startup code after reset
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _main
  1389  04BB                     _main:
  1390  04BB                     l2236:	
  1391                           ;incstack = 0
  1392 ;; hardware stack exceeded
  1393                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394                           
  1395                           
  1396                           ;main.c: 19:     GPIO_Init();
  1397  04BB  120A  118A  2581  120A  118A  	fcall	_GPIO_Init
  1398                           
  1399                           ;main.c: 20:     Display_Init();
  1400  04C0  120A  118A  25C6  120A  118A  	fcall	_Display_Init
  1401  04C5                     l2238:
  1402                           
  1403                           ;main.c: 21:     Clock_Init();
  1404  04C5  120A  118A  2655  120A  118A  	fcall	_Clock_Init
  1405  04CA                     l2240:
  1406                           
  1407                           ;main.c: 22:     ModeManager_Init();
  1408  04CA  120A  118A  2667  120A  118A  	fcall	_ModeManager_Init
  1409  04CF                     l2242:
  1410                           
  1411                           ;main.c: 23:     Buttons_Init();
  1412  04CF  120A  118A  2510  120A  118A  	fcall	_Buttons_Init
  1413  04D4                     l2244:
  1414                           
  1415                           ;main.c: 24:     Timer_Init();
  1416  04D4  120A  118A  262D  120A  118A  	fcall	_Timer_Init
  1417  04D9                     l2246:
  1418                           
  1419                           ;main.c: 25:     Scheduler_Init();
  1420  04D9  120A  118A  261D  120A  118A  	fcall	_Scheduler_Init
  1421  04DE                     l2248:
  1422                           
  1423                           ;main.c: 26:     Timer_Start();
  1424  04DE  120A  118A  266B  120A  118A  	fcall	_Timer_Start
  1425  04E3                     l29:	
  1426                           ;main.c: 27:     while(1);
  1427                           
  1428  04E3                     l30:
  1429  04E3  2CE3               	goto	l29
  1430  04E4  120A  118A  2812   	ljmp	start
  1431  04E7                     __end_of_main:
  1432                           
  1433                           	psect	text1
  1434  066B                     __ptext1:	
  1435 ;; *************** function _Timer_Start *****************
  1436 ;; Defined at:
  1437 ;;		line 33 in file "Timer/Timer.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		None
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    7
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _Timer_Start
  1467  066B                     _Timer_Start:
  1468  066B                     l2044:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _Timer_Start: []
  1471                           
  1472                           
  1473                           ;Timer/Timer.c: 35:     INTCONbits.TMR0IE=1;
  1474  066B  168B               	bsf	11,5	;volatile
  1475  066C                     l67:
  1476  066C  0008               	return
  1477  066D                     __end_of_Timer_Start:
  1478                           
  1479                           	psect	text2
  1480  062D                     __ptext2:	
  1481 ;; *************** function _Timer_Init *****************
  1482 ;; Defined at:
  1483 ;;		line 14 in file "Timer/Timer.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    7
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           
  1512                           ;psect for function _Timer_Init
  1513  062D                     _Timer_Init:
  1514  062D                     l2034:	
  1515                           ;incstack = 0
  1516                           ; Regs used in _Timer_Init: [wreg]
  1517                           
  1518                           
  1519                           ;Timer/Timer.c: 16:     OPTION_REGbits.T0CS=0;
  1520  062D  1683               	bsf	3,5	;RP0=1, select bank1
  1521  062E  1303               	bcf	3,6	;RP1=0, select bank1
  1522  062F  1281               	bcf	1,5	;volatile
  1523                           
  1524                           ;Timer/Timer.c: 17:     OPTION_REGbits.PSA=0;
  1525  0630  1181               	bcf	1,3	;volatile
  1526                           
  1527                           ;Timer/Timer.c: 19:     OPTION_REGbits.PS0=0;
  1528  0631  1001               	bcf	1,0	;volatile
  1529                           
  1530                           ;Timer/Timer.c: 20:     OPTION_REGbits.PS1=0;
  1531  0632  1081               	bcf	1,1	;volatile
  1532                           
  1533                           ;Timer/Timer.c: 21:     OPTION_REGbits.PS2=1;
  1534  0633  1501               	bsf	1,2	;volatile
  1535  0634                     l2036:
  1536                           
  1537                           ;Timer/Timer.c: 23:     TMR0=100;
  1538  0634  3064               	movlw	100
  1539  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0637  0081               	movwf	1	;volatile
  1542  0638                     l2038:
  1543                           
  1544                           ;Timer/Timer.c: 24:     INTCONbits.GIE=1;
  1545  0638  178B               	bsf	11,7	;volatile
  1546  0639                     l2040:
  1547                           
  1548                           ;Timer/Timer.c: 25:     INTCONbits.PEIE=1;
  1549  0639  170B               	bsf	11,6	;volatile
  1550  063A                     l64:
  1551  063A  0008               	return
  1552  063B                     __end_of_Timer_Init:
  1553                           
  1554                           	psect	text3
  1555  061D                     __ptext3:	
  1556 ;; *************** function _Scheduler_Init *****************
  1557 ;; Defined at:
  1558 ;;		line 11 in file "Scheduler/Scheduler.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0
  1575 ;;      Totals:         0       0       0       0       0
  1576 ;;Total ram usage:        0 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    8
  1579 ;; This function calls:
  1580 ;;		_memset
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _Scheduler_Init
  1588  061D                     _Scheduler_Init:
  1589  061D                     l2230:	
  1590                           ;incstack = 0
  1591 ;; hardware stack exceeded
  1592                           ; Regs used in _Scheduler_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1593                           
  1594                           
  1595                           ;Scheduler/Scheduler.c: 13:     memset(Task_Flag,0,sizeof(Task_Flag));
  1596  061D  3000               	movlw	0
  1597  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1598  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0620  00C8               	movwf	memset@c
  1600  0621  00C9               	movwf	memset@c+1
  1601  0622  3003               	movlw	3
  1602  0623  00CA               	movwf	memset@n
  1603  0624  3000               	movlw	0
  1604  0625  00CB               	movwf	memset@n+1
  1605  0626  303A               	movlw	(low (_Task_Flag| 0))& (0+255)
  1606  0627  120A  118A  25A4  120A  118A  	fcall	_memset
  1607  062C                     l43:
  1608  062C  0008               	return
  1609  062D                     __end_of_Scheduler_Init:
  1610                           
  1611                           	psect	text4
  1612  0667                     __ptext4:	
  1613 ;; *************** function _ModeManager_Init *****************
  1614 ;; Defined at:
  1615 ;;		line 11 in file "ModeManger/ModeManager.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    7
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _ModeManager_Init
  1645  0667                     _ModeManager_Init:
  1646  0667                     l2024:	
  1647                           ;incstack = 0
  1648                           ; Regs used in _ModeManager_Init: [status,2]
  1649                           
  1650                           
  1651                           ;ModeManger/ModeManager.c: 13:   MODE=Normal_Mode;
  1652  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0669  01B3               	clrf	_MODE
  1655  066A                     l219:
  1656  066A  0008               	return
  1657  066B                     __end_of_ModeManager_Init:
  1658                           
  1659                           	psect	text5
  1660  0581                     __ptext5:	
  1661 ;; *************** function _GPIO_Init *****************
  1662 ;; Defined at:
  1663 ;;		line 9 in file "gpio/gpio.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, btemp+1
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0
  1680 ;;      Totals:         0       0       0       0       0
  1681 ;;Total ram usage:        0 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    7
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _GPIO_Init
  1693  0581                     _GPIO_Init:
  1694  0581                     l1992:	
  1695                           ;incstack = 0
  1696                           ; Regs used in _GPIO_Init: [wreg+status,2+status,0+btemp+1]
  1697                           
  1698  0581                     l109:	
  1699                           ;gpio/gpio.c: 11:     (1==0)? ((TRISB&=~(1<<2))) :((TRISB|=(1<<2)));
  1700                           
  1701  0581  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0582  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0583  1506               	bsf	6,2	;volatile
  1704  0584                     l113:
  1705  0584  1486               	bsf	6,1	;volatile
  1706  0585                     l117:
  1707  0585  1406               	bsf	6,0	;volatile
  1708  0586                     l2000:
  1709  0586  30FB               	movlw	251
  1710  0587  00FF               	movwf	btemp+1
  1711  0588  087F               	movf	btemp+1,w
  1712  0589  0585               	andwf	5,f	;volatile
  1713  058A                     l2002:
  1714  058A  30F7               	movlw	247
  1715  058B  00FF               	movwf	btemp+1
  1716  058C  087F               	movf	btemp+1,w
  1717  058D  0585               	andwf	5,f	;volatile
  1718  058E                     l2004:
  1719  058E  30EF               	movlw	239
  1720  058F  00FF               	movwf	btemp+1
  1721  0590  087F               	movf	btemp+1,w
  1722  0591  0585               	andwf	5,f	;volatile
  1723  0592                     l2006:
  1724  0592  30DF               	movlw	223
  1725  0593  00FF               	movwf	btemp+1
  1726  0594  087F               	movf	btemp+1,w
  1727  0595  0585               	andwf	5,f	;volatile
  1728  0596                     l2008:
  1729  0596  307F               	movlw	127
  1730  0597  00FF               	movwf	btemp+1
  1731  0598  087F               	movf	btemp+1,w
  1732  0599  0588               	andwf	8,f	;volatile
  1733  059A                     l2010:
  1734  059A  0188               	clrf	8	;volatile
  1735  059B                     l2014:
  1736  059B  30EF               	movlw	239
  1737  059C  00FF               	movwf	btemp+1
  1738  059D  087F               	movf	btemp+1,w
  1739  059E  0586               	andwf	6,f	;volatile
  1740  059F                     l2016:
  1741  059F  30F7               	movlw	247
  1742  05A0  00FF               	movwf	btemp+1
  1743  05A1  087F               	movf	btemp+1,w
  1744  05A2  0586               	andwf	6,f	;volatile
  1745  05A3                     l152:
  1746  05A3  0008               	return
  1747  05A4                     __end_of_GPIO_Init:
  1748                           
  1749                           	psect	text6
  1750  05C6                     __ptext6:	
  1751 ;; *************** function _Display_Init *****************
  1752 ;; Defined at:
  1753 ;;		line 18 in file "Display/Display.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, btemp+1
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    7
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _Display_Init
  1783  05C6                     _Display_Init:
  1784  05C6                     l2018:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _Display_Init: [wreg+status,2+status,0+btemp+1]
  1787                           
  1788                           
  1789                           ;Display/Display.c: 20:     Enable_Minutes=1;
  1790  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1791  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1792  05C8  01AF               	clrf	_Enable_Minutes
  1793  05C9  0AAF               	incf	_Enable_Minutes,f
  1794                           
  1795                           ;Display/Display.c: 21:     Enable_Hours=1;
  1796  05CA  01AE               	clrf	_Enable_Hours
  1797  05CB  0AAE               	incf	_Enable_Hours,f
  1798  05CC                     l2020:
  1799                           
  1800                           ;Display/Display.c: 22:     (PORTA&=~(1<<2));
  1801  05CC  30FB               	movlw	251
  1802  05CD  00FF               	movwf	btemp+1
  1803  05CE  087F               	movf	btemp+1,w
  1804  05CF  0585               	andwf	5,f	;volatile
  1805                           
  1806                           ;Display/Display.c: 23:     (PORTA&=~(1<<3));
  1807  05D0  30F7               	movlw	247
  1808  05D1  00FF               	movwf	btemp+1
  1809  05D2  087F               	movf	btemp+1,w
  1810  05D3  0585               	andwf	5,f	;volatile
  1811                           
  1812                           ;Display/Display.c: 24:     (PORTA&=~(1<<4));
  1813  05D4  30EF               	movlw	239
  1814  05D5  00FF               	movwf	btemp+1
  1815  05D6  087F               	movf	btemp+1,w
  1816  05D7  0585               	andwf	5,f	;volatile
  1817                           
  1818                           ;Display/Display.c: 25:     (PORTA&=~(1<<5));
  1819  05D8  30DF               	movlw	223
  1820  05D9  00FF               	movwf	btemp+1
  1821  05DA  087F               	movf	btemp+1,w
  1822  05DB  0585               	andwf	5,f	;volatile
  1823                           
  1824                           ;Display/Display.c: 26:     (PORTD&=~(1<<7));
  1825  05DC  307F               	movlw	127
  1826  05DD  00FF               	movwf	btemp+1
  1827  05DE  087F               	movf	btemp+1,w
  1828  05DF  0588               	andwf	8,f	;volatile
  1829  05E0                     l177:
  1830  05E0  0008               	return
  1831  05E1                     __end_of_Display_Init:
  1832                           
  1833                           	psect	text7
  1834  0655                     __ptext7:	
  1835 ;; *************** function _Clock_Init *****************
  1836 ;; Defined at:
  1837 ;;		line 13 in file "Clock/Clock.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		status,2
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    7
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _Clock_Init
  1867  0655                     _Clock_Init:
  1868  0655                     l2022:	
  1869                           ;incstack = 0
  1870                           ; Regs used in _Clock_Init: [status,2]
  1871                           
  1872                           
  1873                           ;Clock/Clock.c: 15:     Clock.Second=0;
  1874  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0657  01A4               	clrf	_Clock
  1877                           
  1878                           ;Clock/Clock.c: 16:     Clock.Minutes=0;
  1879  0658  01A5               	clrf	_Clock+1
  1880                           
  1881                           ;Clock/Clock.c: 17:     Clock.Hours=0;
  1882  0659  01A6               	clrf	_Clock+2
  1883  065A                     l293:
  1884  065A  0008               	return
  1885  065B                     __end_of_Clock_Init:
  1886                           
  1887                           	psect	text8
  1888  0510                     __ptext8:	
  1889 ;; *************** function _Buttons_Init *****************
  1890 ;; Defined at:
  1891 ;;		line 16 in file "Buttons/Buttons.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    8
  1912 ;; This function calls:
  1913 ;;		_memset
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _Buttons_Init
  1921  0510                     _Buttons_Init:
  1922  0510                     l2222:	
  1923                           ;incstack = 0
  1924 ;; hardware stack exceeded
  1925                           ; Regs used in _Buttons_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1926                           
  1927                           
  1928                           ;Buttons/Buttons.c: 18:     memset(Debounce_UpButton,1,sizeof(Debounce_UpButton));
  1929  0510  3001               	movlw	1
  1930  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0513  00C8               	movwf	memset@c
  1933  0514  3000               	movlw	0
  1934  0515  00C9               	movwf	memset@c+1
  1935  0516  3003               	movlw	3
  1936  0517  00CA               	movwf	memset@n
  1937  0518  3000               	movlw	0
  1938  0519  00CB               	movwf	memset@n+1
  1939  051A  3037               	movlw	(low (_Debounce_UpButton| 0))& (0+255)
  1940  051B  120A  118A  25A4  120A  118A  	fcall	_memset
  1941                           
  1942                           ;Buttons/Buttons.c: 19:     memset(Debounce_DownButton,1,sizeof(Debounce_DownButton));
  1943  0520  3001               	movlw	1
  1944  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0523  00C8               	movwf	memset@c
  1947  0524  3000               	movlw	0
  1948  0525  00C9               	movwf	memset@c+1
  1949  0526  3003               	movlw	3
  1950  0527  00CA               	movwf	memset@n
  1951  0528  3000               	movlw	0
  1952  0529  00CB               	movwf	memset@n+1
  1953  052A  3034               	movlw	(low (_Debounce_DownButton| 0))& (0+255)
  1954  052B  120A  118A  25A4  120A  118A  	fcall	_memset
  1955  0530                     l2224:
  1956                           
  1957                           ;Buttons/Buttons.c: 21:     INTEDG=1;
  1958  0530  1683               	bsf	3,5	;RP0=1, select bank1
  1959  0531  1303               	bcf	3,6	;RP1=0, select bank1
  1960  0532  1701               	bsf	1,6	;volatile
  1961  0533                     l2226:
  1962                           
  1963                           ;Buttons/Buttons.c: 22:     INTCONbits.INTE=1;
  1964  0533  160B               	bsf	11,4	;volatile
  1965  0534                     l2228:
  1966                           
  1967                           ;Buttons/Buttons.c: 23:     INTCONbits.INTF=0;
  1968  0534  108B               	bcf	11,1	;volatile
  1969  0535                     l89:
  1970  0535  0008               	return
  1971  0536                     __end_of_Buttons_Init:
  1972                           
  1973                           	psect	text9
  1974  05A4                     __ptext9:	
  1975 ;; *************** function _memset *****************
  1976 ;; Defined at:
  1977 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\memset.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  p1              1    wreg     PTR void 
  1980 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1981 ;;  c               2   11[BANK0 ] int 
  1982 ;;  n               2   13[BANK0 ] unsigned int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  p1              1   16[BANK0 ] PTR void 
  1985 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1986 ;;  p               1   15[BANK0 ] PTR unsigned char 
  1987 ;;		 -> Debounce_DownButton(3), Debounce_UpButton(3), Task_Flag(3), 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      PTR void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         0       4       0       0       0
  1998 ;;      Locals:         0       2       0       0       0
  1999 ;;      Temps:          0       0       0       0       0
  2000 ;;      Totals:         0       6       0       0       0
  2001 ;;Total ram usage:        6 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    7
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_Scheduler_Init
  2008 ;;		_Buttons_Init
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _memset
  2014  05A4                     _memset:
  2015                           
  2016                           ;incstack = 0
  2017 ;; hardware stack exceeded
  2018                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  2019                           ;memset@p1 stored from wreg
  2020  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2021  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2022  05A6  00CD               	movwf	memset@p1
  2023  05A7                     l2200:
  2024  05A7  084D               	movf	memset@p1,w
  2025  05A8  00FF               	movwf	btemp+1
  2026  05A9  087F               	movf	btemp+1,w
  2027  05AA  00CC               	movwf	memset@p
  2028  05AB  2DB7               	goto	l2206
  2029  05AC                     l2202:
  2030  05AC  0848               	movf	memset@c,w
  2031  05AD  00FF               	movwf	btemp+1
  2032  05AE  084C               	movf	memset@p,w
  2033  05AF  0084               	movwf	4
  2034  05B0  087F               	movf	btemp+1,w
  2035  05B1  1383               	bcf	3,7	;select IRP bank0
  2036  05B2  0080               	movwf	0
  2037  05B3                     l2204:
  2038  05B3  3001               	movlw	1
  2039  05B4  00FF               	movwf	btemp+1
  2040  05B5  087F               	movf	btemp+1,w
  2041  05B6  07CC               	addwf	memset@p,f
  2042  05B7                     l2206:
  2043  05B7  3001               	movlw	1
  2044  05B8  02CA               	subwf	memset@n,f
  2045  05B9  3000               	movlw	0
  2046  05BA  1C03               	skipc
  2047  05BB  03CB               	decf	memset@n+1,f
  2048  05BC  02CB               	subwf	memset@n+1,f
  2049  05BD  0A4A               	incf	memset@n,w
  2050  05BE  1D03               	skipz
  2051  05BF  2DC4               	goto	u1341
  2052  05C0  0A4B               	incf	memset@n+1,w
  2053  05C1  1D03               	btfss	3,2
  2054  05C2  2DC4               	goto	u1341
  2055  05C3  2DC5               	goto	u1340
  2056  05C4                     u1341:
  2057  05C4  2DAC               	goto	l2202
  2058  05C5                     u1340:
  2059  05C5                     l924:
  2060  05C5  0008               	return
  2061  05C6                     __end_of_memset:
  2062                           
  2063                           	psect	text10
  2064  045A                     __ptext10:	
  2065 ;; *************** function _ISR *****************
  2066 ;; Defined at:
  2067 ;;		line 10 in file "Interrupt/Interrupt.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0
  2083 ;;      Temps:          0       4       0       0       0
  2084 ;;      Totals:         0       4       0       0       0
  2085 ;;Total ram usage:        4 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    6
  2088 ;; This function calls:
  2089 ;;		_EXTI_SettingButton_CB
  2090 ;;		_Timer0_CB
  2091 ;; This function is called by:
  2092 ;;		Interrupt level 1
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _ISR
  2098  045A                     _ISR:
  2099  045A                     i1l2772:
  2100                           
  2101                           ;Interrupt/Interrupt.c: 12:     if(INTCONbits.TMR0IF)
  2102  045A  1D0B               	btfss	11,2	;volatile
  2103  045B  2C5D               	goto	u200_21
  2104  045C  2C5E               	goto	u200_20
  2105  045D                     u200_21:
  2106  045D  2C6D               	goto	i1l2780
  2107  045E                     u200_20:
  2108  045E                     i1l2774:
  2109                           
  2110                           ;Interrupt/Interrupt.c: 13:     {;Interrupt/Interrupt.c: 15:       TMR0 = 100;
  2111  045E  3064               	movlw	100
  2112  045F  0081               	movwf	1	;volatile
  2113  0460                     i1l2776:
  2114                           
  2115                           ;Interrupt/Interrupt.c: 16:       TMR0IF=0;
  2116  0460  110B               	bcf	11,2	;volatile
  2117  0461                     i1l2778:
  2118                           
  2119                           ;Interrupt/Interrupt.c: 17:       Interrupt_CbStruct.Timer_CB();
  2120  0461  300A               	movlw	low (_Interrupt_CbStruct-__stringbase)
  2121  0462  0084               	movwf	4
  2122  0463  120A  118A  260C  120A  118A  	fcall	stringdir
  2123  0468  120A  118A  2024  120A  118A  	fcall	i1fptable
  2124  046D                     i1l2780:
  2125                           
  2126                           ;Interrupt/Interrupt.c: 20:     if(INTCONbits.INTF)
  2127  046D  1C8B               	btfss	11,1	;volatile
  2128  046E  2C70               	goto	u201_21
  2129  046F  2C71               	goto	u201_20
  2130  0470                     u201_21:
  2131  0470  2C7E               	goto	i1l245
  2132  0471                     u201_20:
  2133  0471                     i1l2782:
  2134                           
  2135                           ;Interrupt/Interrupt.c: 21:     {;Interrupt/Interrupt.c: 22:       INTCONbits.INTF=0;
  2136  0471  108B               	bcf	11,1	;volatile
  2137  0472                     i1l2784:
  2138                           
  2139                           ;Interrupt/Interrupt.c: 23:       Interrupt_CbStruct.EXTI_CB();
  2140  0472  300B               	movlw	low (((_Interrupt_CbStruct+1)-__stringbase)| (0+32768))
  2141  0473  0084               	movwf	4
  2142  0474  120A  118A  260C  120A  118A  	fcall	stringdir
  2143  0479  120A  118A  2024  120A  118A  	fcall	i1fptable
  2144  047E                     i1l245:
  2145  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2146  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0480  0847               	movf	??_ISR+3,w
  2148  0481  00FF               	movwf	btemp+1
  2149  0482  0846               	movf	??_ISR+2,w
  2150  0483  008A               	movwf	10
  2151  0484  0845               	movf	??_ISR+1,w
  2152  0485  0084               	movwf	4
  2153  0486  0E44               	swapf	??_ISR^0,w
  2154  0487  0083               	movwf	3
  2155  0488  0EFE               	swapf	btemp,f
  2156  0489  0E7E               	swapf	btemp,w
  2157  048A  0009               	retfie
  2158  048B                     __end_of_ISR:
  2159                           
  2160                           	psect	intentry
  2161  0004                     __pintentry:	
  2162                           ;incstack = 0
  2163 ;; hardware stack exceeded
  2164                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2165                           
  2166  0004                     interrupt_function:
  2167  007E                     saved_w	set	btemp
  2168  0004  00FE               	movwf	btemp
  2169  0005  0E03               	swapf	3,w
  2170  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0008  00C4               	movwf	??_ISR
  2173  0009  0804               	movf	4,w
  2174  000A  00C5               	movwf	??_ISR+1
  2175  000B  080A               	movf	10,w
  2176  000C  00C6               	movwf	??_ISR+2
  2177  000D  087F               	movf	btemp+1,w
  2178  000E  00C7               	movwf	??_ISR+3
  2179  000F  120A  118A  2C5A   	ljmp	_ISR
  2180                           
  2181                           	psect	text11
  2182  05E1                     __ptext11:	
  2183 ;; *************** function _Timer0_CB *****************
  2184 ;; Defined at:
  2185 ;;		line 38 in file "Timer/Timer.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    5
  2206 ;; This function calls:
  2207 ;;		_Scheduler_Update
  2208 ;; This function is called by:
  2209 ;;		_ISR
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _Timer0_CB
  2215  05E1                     _Timer0_CB:
  2216  05E1                     i1l2768:	
  2217                           ;incstack = 0
  2218 ;; hardware stack exceeded
  2219                           ; Regs used in _Timer0_CB: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2220                           
  2221                           
  2222                           ;Timer/Timer.c: 40:    Tick++;
  2223  05E1  3001               	movlw	1
  2224  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2225  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2226  05E4  07A0               	addwf	_Tick,f
  2227  05E5  3000               	movlw	0
  2228  05E6  1803               	skipnc
  2229  05E7  3001               	movlw	1
  2230  05E8  07A1               	addwf	_Tick+1,f
  2231  05E9  3000               	movlw	0
  2232  05EA  1803               	skipnc
  2233  05EB  3001               	movlw	1
  2234  05EC  07A2               	addwf	_Tick+2,f
  2235  05ED  3000               	movlw	0
  2236  05EE  1803               	skipnc
  2237  05EF  3001               	movlw	1
  2238  05F0  07A3               	addwf	_Tick+3,f
  2239  05F1                     i1l2770:
  2240                           
  2241                           ;Timer/Timer.c: 42:    Scheduler_Update();
  2242  05F1  120A  118A  217F  120A  118A  	fcall	_Scheduler_Update
  2243  05F6                     i1l70:
  2244  05F6  0008               	return
  2245  05F7                     __end_of_Timer0_CB:
  2246                           
  2247                           	psect	text12
  2248  017F                     __ptext12:	
  2249 ;; *************** function _Scheduler_Update *****************
  2250 ;; Defined at:
  2251 ;;		line 16 in file "Scheduler/Scheduler.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  i               1    6[BANK0 ] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         0       1       0       0       0
  2267 ;;      Temps:          0       6       0       0       0
  2268 ;;      Totals:         0       7       0       0       0
  2269 ;;Total ram usage:        7 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    4
  2272 ;; This function calls:
  2273 ;;		_Scheduler_Task1
  2274 ;;		_Scheduler_Task2
  2275 ;;		_Scheduler_Task3
  2276 ;;		___bmul
  2277 ;;		___llmod
  2278 ;; This function is called by:
  2279 ;;		_Timer0_CB
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _Scheduler_Update
  2285  017F                     _Scheduler_Update:
  2286  017F                     i1l2754:	
  2287                           ;incstack = 0
  2288 ;; hardware stack exceeded
  2289                           ; Regs used in _Scheduler_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2290                           
  2291                           
  2292                           ;Scheduler/Scheduler.c: 19:        for(uint8_t i=0 ;i<(3UL);i++)
  2293  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0180  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0181  01C3               	clrf	Scheduler_Update@i
  2296  0182                     i1l2760:
  2297                           
  2298                           ;Scheduler/Scheduler.c: 20:        {;Scheduler/Scheduler.c: 22:            if((Tick%(Tas
      +                          ks[i].Task_Peroid/(1UL))) ? 0:1)
  2299  0182  3003               	movlw	3
  2300  0183  00FF               	movwf	btemp+1
  2301  0184  087F               	movf	btemp+1,w
  2302  0185  00F0               	movwf	___bmul@multiplicand
  2303  0186  0843               	movf	Scheduler_Update@i,w
  2304  0187  120A  118A  25F7  120A  118A  	fcall	___bmul
  2305  018C  3E01               	addlw	low ((_Tasks-__stringbase)| (0+32768))
  2306  018D  0084               	movwf	4
  2307  018E  120A  118A  260C  120A  118A  	fcall	stringdir
  2308  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0195  00BD               	movwf	??_Scheduler_Update
  2311  0196  120A  118A  260C  120A  118A  	fcall	stringdir
  2312  019B  00BE               	movwf	??_Scheduler_Update+1
  2313  019C  083D               	movf	??_Scheduler_Update,w
  2314  019D  00BF               	movwf	??_Scheduler_Update+2
  2315  019E  083E               	movf	??_Scheduler_Update+1,w
  2316  019F  00C0               	movwf	??_Scheduler_Update+3
  2317  01A0  01C1               	clrf	??_Scheduler_Update+4
  2318  01A1  01C2               	clrf	??_Scheduler_Update+5
  2319  01A2  0842               	movf	??_Scheduler_Update+5,w
  2320  01A3  00F6               	movwf	___llmod@divisor+3
  2321  01A4  0841               	movf	??_Scheduler_Update+4,w
  2322  01A5  00F5               	movwf	___llmod@divisor+2
  2323  01A6  0840               	movf	??_Scheduler_Update+3,w
  2324  01A7  00F4               	movwf	___llmod@divisor+1
  2325  01A8  083F               	movf	??_Scheduler_Update+2,w
  2326  01A9  00F3               	movwf	___llmod@divisor
  2327  01AA  0823               	movf	_Tick+3,w
  2328  01AB  00FA               	movwf	___llmod@dividend+3
  2329  01AC  0822               	movf	_Tick+2,w
  2330  01AD  00F9               	movwf	___llmod@dividend+2
  2331  01AE  0821               	movf	_Tick+1,w
  2332  01AF  00F8               	movwf	___llmod@dividend+1
  2333  01B0  0820               	movf	_Tick,w
  2334  01B1  00F7               	movwf	___llmod@dividend
  2335  01B2  120A  118A  22F8  120A  118A  	fcall	___llmod
  2336  01B7  0876               	movf	?___llmod+3,w
  2337  01B8  0475               	iorwf	?___llmod+2,w
  2338  01B9  0474               	iorwf	?___llmod+1,w
  2339  01BA  0473               	iorwf	?___llmod,w
  2340  01BB  1D03               	skipz
  2341  01BC  29BE               	goto	u198_21
  2342  01BD  29BF               	goto	u198_20
  2343  01BE                     u198_21:
  2344  01BE  29D7               	goto	i1l2764
  2345  01BF                     u198_20:
  2346  01BF                     i1l2762:
  2347                           
  2348                           ;Scheduler/Scheduler.c: 23:             {;Scheduler/Scheduler.c: 24:               Tasks
      +                          [i].Task();
  2349  01BF  3003               	movlw	3
  2350  01C0  00FF               	movwf	btemp+1
  2351  01C1  087F               	movf	btemp+1,w
  2352  01C2  00F0               	movwf	___bmul@multiplicand
  2353  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2354  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2355  01C5  0843               	movf	Scheduler_Update@i,w
  2356  01C6  120A  118A  25F7  120A  118A  	fcall	___bmul
  2357  01CB  3E03               	addlw	low (((_Tasks-__stringbase)| (0+32768)+2))
  2358  01CC  0084               	movwf	4
  2359  01CD  120A  118A  260C  120A  118A  	fcall	stringdir
  2360  01D2  120A  118A  2024  120A  118A  	fcall	i1fptable
  2361  01D7                     i1l2764:
  2362                           
  2363                           ;Scheduler/Scheduler.c: 27:        }
  2364  01D7  3001               	movlw	1
  2365  01D8  00FF               	movwf	btemp+1
  2366  01D9  087F               	movf	btemp+1,w
  2367  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2368  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  2369  01DC  07C3               	addwf	Scheduler_Update@i,f
  2370  01DD                     i1l2766:
  2371  01DD  3003               	movlw	3
  2372  01DE  0243               	subwf	Scheduler_Update@i,w
  2373  01DF  1C03               	skipc
  2374  01E0  29E2               	goto	u199_21
  2375  01E1  29E3               	goto	u199_20
  2376  01E2                     u199_21:
  2377  01E2  2982               	goto	i1l2760
  2378  01E3                     u199_20:
  2379  01E3                     i1l49:
  2380  01E3  0008               	return
  2381  01E4                     __end_of_Scheduler_Update:
  2382                           
  2383                           	psect	text13
  2384  02F8                     __ptext13:	
  2385 ;; *************** function ___llmod *****************
  2386 ;; Defined at:
  2387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  divisor         4    3[COMMON] unsigned long 
  2390 ;;  dividend        4    7[COMMON] unsigned long 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  counter         1   12[COMMON] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  4    3[COMMON] unsigned long 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, btemp+1
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         8       0       0       0       0
  2403 ;;      Locals:         1       0       0       0       0
  2404 ;;      Temps:          1       0       0       0       0
  2405 ;;      Totals:        10       0       0       0       0
  2406 ;;Total ram usage:       10 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_Scheduler_Update
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function ___llmod
  2417  02F8                     ___llmod:
  2418  02F8                     i1l2178:	
  2419                           ;incstack = 0
  2420                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  2421                           
  2422  02F8  0876               	movf	___llmod@divisor+3,w
  2423  02F9  0475               	iorwf	___llmod@divisor+2,w
  2424  02FA  0474               	iorwf	___llmod@divisor+1,w
  2425  02FB  0473               	iorwf	___llmod@divisor,w
  2426  02FC  1903               	skipnz
  2427  02FD  2AFF               	goto	u128_21
  2428  02FE  2B00               	goto	u128_20
  2429  02FF                     u128_21:
  2430  02FF  2B43               	goto	i1l2196
  2431  0300                     u128_20:
  2432  0300                     i1l2180:
  2433  0300  01FC               	clrf	___llmod@counter
  2434  0301  0AFC               	incf	___llmod@counter,f
  2435  0302  2B10               	goto	i1l2186
  2436  0303                     i1l2182:
  2437  0303  3001               	movlw	1
  2438  0304  00FB               	movwf	??___llmod
  2439  0305                     u129_25:
  2440  0305  1003               	clrc
  2441  0306  0DF3               	rlf	___llmod@divisor,f
  2442  0307  0DF4               	rlf	___llmod@divisor+1,f
  2443  0308  0DF5               	rlf	___llmod@divisor+2,f
  2444  0309  0DF6               	rlf	___llmod@divisor+3,f
  2445  030A  0BFB               	decfsz	??___llmod,f
  2446  030B  2B05               	goto	u129_25
  2447  030C                     i1l2184:
  2448  030C  3001               	movlw	1
  2449  030D  00FF               	movwf	btemp+1
  2450  030E  087F               	movf	btemp+1,w
  2451  030F  07FC               	addwf	___llmod@counter,f
  2452  0310                     i1l2186:
  2453  0310  1FF6               	btfss	___llmod@divisor+3,7
  2454  0311  2B13               	goto	u130_21
  2455  0312  2B14               	goto	u130_20
  2456  0313                     u130_21:
  2457  0313  2B03               	goto	i1l2182
  2458  0314                     u130_20:
  2459  0314                     i1l2188:
  2460  0314  0876               	movf	___llmod@divisor+3,w
  2461  0315  027A               	subwf	___llmod@dividend+3,w
  2462  0316  1D03               	skipz
  2463  0317  2B22               	goto	u131_25
  2464  0318  0875               	movf	___llmod@divisor+2,w
  2465  0319  0279               	subwf	___llmod@dividend+2,w
  2466  031A  1D03               	skipz
  2467  031B  2B22               	goto	u131_25
  2468  031C  0874               	movf	___llmod@divisor+1,w
  2469  031D  0278               	subwf	___llmod@dividend+1,w
  2470  031E  1D03               	skipz
  2471  031F  2B22               	goto	u131_25
  2472  0320  0873               	movf	___llmod@divisor,w
  2473  0321  0277               	subwf	___llmod@dividend,w
  2474  0322                     u131_25:
  2475  0322  1C03               	skipc
  2476  0323  2B25               	goto	u131_21
  2477  0324  2B26               	goto	u131_20
  2478  0325                     u131_21:
  2479  0325  2B34               	goto	i1l2192
  2480  0326                     u131_20:
  2481  0326                     i1l2190:
  2482  0326  0873               	movf	___llmod@divisor,w
  2483  0327  02F7               	subwf	___llmod@dividend,f
  2484  0328  0874               	movf	___llmod@divisor+1,w
  2485  0329  1C03               	skipc
  2486  032A  0F74               	incfsz	___llmod@divisor+1,w
  2487  032B  02F8               	subwf	___llmod@dividend+1,f
  2488  032C  0875               	movf	___llmod@divisor+2,w
  2489  032D  1C03               	skipc
  2490  032E  0F75               	incfsz	___llmod@divisor+2,w
  2491  032F  02F9               	subwf	___llmod@dividend+2,f
  2492  0330  0876               	movf	___llmod@divisor+3,w
  2493  0331  1C03               	skipc
  2494  0332  0F76               	incfsz	___llmod@divisor+3,w
  2495  0333  02FA               	subwf	___llmod@dividend+3,f
  2496  0334                     i1l2192:
  2497  0334  3001               	movlw	1
  2498  0335                     u132_25:
  2499  0335  1003               	clrc
  2500  0336  0CF6               	rrf	___llmod@divisor+3,f
  2501  0337  0CF5               	rrf	___llmod@divisor+2,f
  2502  0338  0CF4               	rrf	___llmod@divisor+1,f
  2503  0339  0CF3               	rrf	___llmod@divisor,f
  2504  033A  3EFF               	addlw	-1
  2505  033B  1D03               	skipz
  2506  033C  2B35               	goto	u132_25
  2507  033D                     i1l2194:
  2508  033D  3001               	movlw	1
  2509  033E  02FC               	subwf	___llmod@counter,f
  2510  033F  1D03               	btfss	3,2
  2511  0340  2B42               	goto	u133_21
  2512  0341  2B43               	goto	u133_20
  2513  0342                     u133_21:
  2514  0342  2B14               	goto	i1l2188
  2515  0343                     u133_20:
  2516  0343                     i1l2196:
  2517  0343  087A               	movf	___llmod@dividend+3,w
  2518  0344  00F6               	movwf	?___llmod+3
  2519  0345  0879               	movf	___llmod@dividend+2,w
  2520  0346  00F5               	movwf	?___llmod+2
  2521  0347  0878               	movf	___llmod@dividend+1,w
  2522  0348  00F4               	movwf	?___llmod+1
  2523  0349  0877               	movf	___llmod@dividend,w
  2524  034A  00F3               	movwf	?___llmod
  2525  034B                     i1l692:
  2526  034B  0008               	return
  2527  034C                     __end_of___llmod:
  2528                           
  2529                           	psect	text14
  2530  05F7                     __ptext14:	
  2531 ;; *************** function ___bmul *****************
  2532 ;; Defined at:
  2533 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  multiplier      1    wreg     unsigned char 
  2536 ;;  multiplicand    1    0[COMMON] unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  multiplier      1    2[COMMON] unsigned char 
  2539 ;;  product         1    1[COMMON] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, btemp+1
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         1       0       0       0       0
  2550 ;;      Locals:         2       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0
  2552 ;;      Totals:         3       0       0       0       0
  2553 ;;Total ram usage:        3 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_Scheduler_Update
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function ___bmul
  2564  05F7                     ___bmul:
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2568                           ;___bmul@multiplier stored from wreg
  2569  05F7  00F2               	movwf	___bmul@multiplier
  2570  05F8                     i1l2738:
  2571  05F8  01F1               	clrf	___bmul@product
  2572  05F9                     i1l2740:
  2573  05F9  1C72               	btfss	___bmul@multiplier,0
  2574  05FA  2DFC               	goto	u196_21
  2575  05FB  2DFD               	goto	u196_20
  2576  05FC                     u196_21:
  2577  05FC  2E01               	goto	i1l2744
  2578  05FD                     u196_20:
  2579  05FD                     i1l2742:
  2580  05FD  0870               	movf	___bmul@multiplicand,w
  2581  05FE  00FF               	movwf	btemp+1
  2582  05FF  087F               	movf	btemp+1,w
  2583  0600  07F1               	addwf	___bmul@product,f
  2584  0601                     i1l2744:
  2585  0601  1003               	clrc
  2586  0602  0DF0               	rlf	___bmul@multiplicand,f
  2587  0603                     i1l2746:
  2588  0603  1003               	clrc
  2589  0604  0CF2               	rrf	___bmul@multiplier,f
  2590  0605                     i1l2748:
  2591  0605  0872               	movf	___bmul@multiplier,w
  2592  0606  1D03               	btfss	3,2
  2593  0607  2E09               	goto	u197_21
  2594  0608  2E0A               	goto	u197_20
  2595  0609                     u197_21:
  2596  0609  2DF9               	goto	i1l2740
  2597  060A                     u197_20:
  2598  060A                     i1l2750:
  2599  060A  0871               	movf	___bmul@product,w
  2600  060B                     i1l496:
  2601  060B  0008               	return
  2602  060C                     __end_of___bmul:
  2603                           
  2604                           	psect	text15
  2605  063B                     __ptext15:	
  2606 ;; *************** function _Scheduler_Task2 *****************
  2607 ;; Defined at:
  2608 ;;		line 24 in file "Scheduler/Task.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2622 ;;      Params:         0       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0
  2625 ;;      Totals:         0       0       0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    2
  2629 ;; This function calls:
  2630 ;;		_Buttons_Update
  2631 ;;		_ModeManager_Update
  2632 ;; This function is called by:
  2633 ;;		_Scheduler_Update
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _Scheduler_Task2
  2639  063B                     _Scheduler_Task2:
  2640  063B                     i1l2734:	
  2641                           ;incstack = 0
  2642                           ; Regs used in _Scheduler_Task2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2643                           
  2644                           
  2645                           ;Scheduler/Task.c: 27:   Buttons_Update();
  2646  063B  120A  118A  21E4  120A  118A  	fcall	_Buttons_Update
  2647                           
  2648                           ;Scheduler/Task.c: 28:   ModeManager_Update();
  2649  0640  120A  118A  2536  120A  118A  	fcall	_ModeManager_Update
  2650  0645                     i1l275:
  2651  0645  0008               	return
  2652  0646                     __end_of_Scheduler_Task2:
  2653                           
  2654                           	psect	text16
  2655  065B                     __ptext16:	
  2656 ;; *************** function _Scheduler_Task1 *****************
  2657 ;; Defined at:
  2658 ;;		line 17 in file "Scheduler/Task.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_Display_Update
  2681 ;; This function is called by:
  2682 ;;		_Scheduler_Update
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _Scheduler_Task1
  2688  065B                     _Scheduler_Task1:
  2689  065B                     i1l2732:	
  2690                           ;incstack = 0
  2691 ;; hardware stack exceeded
  2692                           ; Regs used in _Scheduler_Task1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2693                           
  2694                           
  2695                           ;Scheduler/Task.c: 20:   Display_Update();
  2696  065B  120A  118A  23E0  120A  118A  	fcall	_Display_Update
  2697  0660                     i1l272:
  2698  0660  0008               	return
  2699  0661                     __end_of_Scheduler_Task1:
  2700                           
  2701                           	psect	text17
  2702  0661                     __ptext17:	
  2703 ;; *************** function _Scheduler_Task3 *****************
  2704 ;; Defined at:
  2705 ;;		line 32 in file "Scheduler/Task.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2719 ;;      Params:         0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:    3
  2726 ;; This function calls:
  2727 ;;		_Clock_Update
  2728 ;; This function is called by:
  2729 ;;		_Scheduler_Update
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function _Scheduler_Task3
  2735  0661                     _Scheduler_Task3:
  2736  0661                     i1l2736:	
  2737                           ;incstack = 0
  2738 ;; hardware stack exceeded
  2739                           ; Regs used in _Scheduler_Task3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2740                           
  2741                           
  2742                           ;Scheduler/Task.c: 34:     Clock_Update();
  2743  0661  120A  118A  24E7  120A  118A  	fcall	_Clock_Update
  2744  0666                     i1l278:
  2745  0666  0008               	return
  2746  0667                     __end_of_Scheduler_Task3:
  2747                           
  2748                           	psect	text18
  2749  04E7                     __ptext18:	
  2750 ;; *************** function _Clock_Update *****************
  2751 ;; Defined at:
  2752 ;;		line 21 in file "Clock/Clock.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          2       0       0       0       0
  2769 ;;      Totals:         2       0       0       0       0
  2770 ;;Total ram usage:        2 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    2
  2773 ;; This function calls:
  2774 ;;		_Clock_Hour_Setting
  2775 ;;		_Clock_Minutes_Setting
  2776 ;;		_Clock_Normal
  2777 ;; This function is called by:
  2778 ;;		_Scheduler_Task3
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _Clock_Update
  2784  04E7                     _Clock_Update:
  2785  04E7                     i1l2716:	
  2786                           ;incstack = 0
  2787 ;; hardware stack exceeded
  2788                           ; Regs used in _Clock_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2789                           
  2790                           
  2791                           ;Clock/Clock.c: 23:     switch(MODE)
  2792  04E7  2CFA               	goto	i1l2726
  2793  04E8                     i1l2718:
  2794                           
  2795                           ;Clock/Clock.c: 26:                               Clock_Normal();
  2796  04E8  120A  118A  239A  120A  118A  	fcall	_Clock_Normal
  2797                           
  2798                           ;Clock/Clock.c: 27:                               break;
  2799  04ED  2D0F               	goto	i1l301
  2800  04EE                     i1l2720:
  2801                           
  2802                           ;Clock/Clock.c: 30:                               Clock_Hour_Setting();
  2803  04EE  120A  118A  248B  120A  118A  	fcall	_Clock_Hour_Setting
  2804                           
  2805                           ;Clock/Clock.c: 31:                               break;
  2806  04F3  2D0F               	goto	i1l301
  2807  04F4                     i1l2722:
  2808                           
  2809                           ;Clock/Clock.c: 34:                               Clock_Minutes_Setting();
  2810  04F4  120A  118A  2424  120A  118A  	fcall	_Clock_Minutes_Setting
  2811                           
  2812                           ;Clock/Clock.c: 35:                               break;
  2813  04F9  2D0F               	goto	i1l301
  2814  04FA                     i1l2726:
  2815  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2816  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2817  04FC  0833               	movf	_MODE,w
  2818  04FD  00F8               	movwf	??_Clock_Update
  2819  04FE  01F9               	clrf	??_Clock_Update+1
  2820                           
  2821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2822                           ; Switch size 1, requested type "simple"
  2823                           ; Number of cases is 1, Range of values is 0 to 0
  2824                           ; switch strategies available:
  2825                           ; Name         Instructions Cycles
  2826                           ; simple_byte            4     3 (average)
  2827                           ; direct_byte           11     8 (fixed)
  2828                           ; jumptable            260     6 (fixed)
  2829                           ;	Chosen strategy is simple_byte
  2830  04FF  0879               	movf	??_Clock_Update+1,w
  2831  0500  3A00               	xorlw	0	; case 0
  2832  0501  1903               	skipnz
  2833  0502  2D04               	goto	i1l2886
  2834  0503  2D0F               	goto	i1l301
  2835  0504                     i1l2886:
  2836                           
  2837                           ; Switch size 1, requested type "simple"
  2838                           ; Number of cases is 3, Range of values is 0 to 2
  2839                           ; switch strategies available:
  2840                           ; Name         Instructions Cycles
  2841                           ; simple_byte           10     6 (average)
  2842                           ; direct_byte           17     8 (fixed)
  2843                           ; jumptable            260     6 (fixed)
  2844                           ;	Chosen strategy is simple_byte
  2845  0504  0878               	movf	??_Clock_Update,w
  2846  0505  3A00               	xorlw	0	; case 0
  2847  0506  1903               	skipnz
  2848  0507  2CE8               	goto	i1l2718
  2849  0508  3A01               	xorlw	1	; case 1
  2850  0509  1903               	skipnz
  2851  050A  2CEE               	goto	i1l2720
  2852  050B  3A03               	xorlw	3	; case 2
  2853  050C  1903               	skipnz
  2854  050D  2CF4               	goto	i1l2722
  2855  050E  2D0F               	goto	i1l301
  2856  050F                     i1l301:
  2857  050F  0008               	return
  2858  0510                     __end_of_Clock_Update:
  2859                           
  2860                           	psect	text19
  2861  039A                     __ptext19:	
  2862 ;; *************** function _Clock_Normal *****************
  2863 ;; Defined at:
  2864 ;;		line 41 in file "Clock/Clock.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2878 ;;      Params:         0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0
  2880 ;;      Temps:          2       0       0       0       0
  2881 ;;      Totals:         2       0       0       0       0
  2882 ;;Total ram usage:        2 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    1
  2885 ;; This function calls:
  2886 ;;		___wmul
  2887 ;; This function is called by:
  2888 ;;		_Clock_Update
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _Clock_Normal
  2894  039A                     _Clock_Normal:
  2895  039A                     i1l2570:	
  2896                           ;incstack = 0
  2897 ;; hardware stack exceeded
  2898                           ; Regs used in _Clock_Normal: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2899                           
  2900                           
  2901                           ;Clock/Clock.c: 43:     static uint8_t counter=0;;Clock/Clock.c: 44:     counter++;
  2902  039A  3001               	movlw	1
  2903  039B  00FF               	movwf	btemp+1
  2904  039C  087F               	movf	btemp+1,w
  2905  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2906  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2907  039F  07AD               	addwf	Clock_Normal@counter,f
  2908  03A0                     i1l2572:
  2909                           
  2910                           ;Clock/Clock.c: 45:     if(counter*1000==1000)
  2911  03A0  082D               	movf	Clock_Normal@counter,w
  2912  03A1  00F6               	movwf	??_Clock_Normal
  2913  03A2  01F7               	clrf	??_Clock_Normal+1
  2914  03A3  0876               	movf	??_Clock_Normal,w
  2915  03A4  00F0               	movwf	___wmul@multiplier
  2916  03A5  0877               	movf	??_Clock_Normal+1,w
  2917  03A6  00F1               	movwf	___wmul@multiplier+1
  2918  03A7  30E8               	movlw	232
  2919  03A8  00F2               	movwf	___wmul@multiplicand
  2920  03A9  3003               	movlw	3
  2921  03AA  00F3               	movwf	___wmul@multiplicand+1
  2922  03AB  120A  118A  255C  120A  118A  	fcall	___wmul
  2923  03B0  30E8               	movlw	232
  2924  03B1  0670               	xorwf	?___wmul,w
  2925  03B2  3003               	movlw	3
  2926  03B3  1903               	skipnz
  2927  03B4  0671               	xorwf	?___wmul+1,w
  2928  03B5  1D03               	btfss	3,2
  2929  03B6  2BB8               	goto	u173_21
  2930  03B7  2BB9               	goto	u173_20
  2931  03B8                     u173_21:
  2932  03B8  2BBC               	goto	i1l2576
  2933  03B9                     u173_20:
  2934  03B9                     i1l2574:
  2935                           
  2936                           ;Clock/Clock.c: 46:     {;Clock/Clock.c: 48:       counter=0;
  2937  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2938  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2939  03BB  01AD               	clrf	Clock_Normal@counter
  2940  03BC                     i1l2576:
  2941                           
  2942                           ;Clock/Clock.c: 51:      Clock.Second++;
  2943  03BC  3001               	movlw	1
  2944  03BD  00FF               	movwf	btemp+1
  2945  03BE  087F               	movf	btemp+1,w
  2946  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2947  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2948  03C1  07A4               	addwf	_Clock,f
  2949  03C2                     i1l2578:
  2950                           
  2951                           ;Clock/Clock.c: 52:     if(Clock.Second==60)
  2952  03C2  303C               	movlw	60
  2953  03C3  0624               	xorwf	_Clock,w
  2954  03C4  1D03               	btfss	3,2
  2955  03C5  2BC7               	goto	u174_21
  2956  03C6  2BC8               	goto	u174_20
  2957  03C7                     u174_21:
  2958  03C7  2BCD               	goto	i1l2584
  2959  03C8                     u174_20:
  2960  03C8                     i1l2580:
  2961                           
  2962                           ;Clock/Clock.c: 53:     {;Clock/Clock.c: 54:       Clock.Minutes++;
  2963  03C8  3001               	movlw	1
  2964  03C9  00FF               	movwf	btemp+1
  2965  03CA  087F               	movf	btemp+1,w
  2966  03CB  07A5               	addwf	_Clock+1,f
  2967  03CC                     i1l2582:
  2968                           
  2969                           ;Clock/Clock.c: 55:       Clock.Second=0;
  2970  03CC  01A4               	clrf	_Clock
  2971  03CD                     i1l2584:
  2972                           
  2973                           ;Clock/Clock.c: 58:     if(Clock.Minutes==60)
  2974  03CD  303C               	movlw	60
  2975  03CE  0625               	xorwf	_Clock+1,w
  2976  03CF  1D03               	btfss	3,2
  2977  03D0  2BD2               	goto	u175_21
  2978  03D1  2BD3               	goto	u175_20
  2979  03D2                     u175_21:
  2980  03D2  2BD8               	goto	i1l2590
  2981  03D3                     u175_20:
  2982  03D3                     i1l2586:
  2983                           
  2984                           ;Clock/Clock.c: 59:     {;Clock/Clock.c: 60:       Clock.Hours++;
  2985  03D3  3001               	movlw	1
  2986  03D4  00FF               	movwf	btemp+1
  2987  03D5  087F               	movf	btemp+1,w
  2988  03D6  07A6               	addwf	_Clock+2,f
  2989  03D7                     i1l2588:
  2990                           
  2991                           ;Clock/Clock.c: 61:       Clock.Minutes=0;
  2992  03D7  01A5               	clrf	_Clock+1
  2993  03D8                     i1l2590:
  2994                           
  2995                           ;Clock/Clock.c: 63:     if(Clock.Hours==24)
  2996  03D8  3018               	movlw	24
  2997  03D9  0626               	xorwf	_Clock+2,w
  2998  03DA  1D03               	btfss	3,2
  2999  03DB  2BDD               	goto	u176_21
  3000  03DC  2BDE               	goto	u176_20
  3001  03DD                     u176_21:
  3002  03DD  2BDF               	goto	i1l310
  3003  03DE                     u176_20:
  3004  03DE                     i1l2592:
  3005                           
  3006                           ;Clock/Clock.c: 64:     {;Clock/Clock.c: 65:       Clock.Hours=0;
  3007  03DE  01A6               	clrf	_Clock+2
  3008  03DF                     i1l310:
  3009  03DF  0008               	return
  3010  03E0                     __end_of_Clock_Normal:
  3011                           
  3012                           	psect	text20
  3013  055C                     __ptext20:	
  3014 ;; *************** function ___wmul *****************
  3015 ;; Defined at:
  3016 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  multiplier      2    0[COMMON] unsigned int 
  3019 ;;  multiplicand    2    2[COMMON] unsigned int 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  product         2    4[COMMON] unsigned int 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    0[COMMON] unsigned int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         4       0       0       0       0
  3032 ;;      Locals:         2       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0
  3034 ;;      Totals:         6       0       0       0       0
  3035 ;;Total ram usage:        6 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_Clock_Normal
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function ___wmul
  3046  055C                     ___wmul:
  3047  055C                     i1l2394:	
  3048                           ;incstack = 0
  3049 ;; hardware stack exceeded
  3050                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3051                           
  3052  055C  01F4               	clrf	___wmul@product
  3053  055D  01F5               	clrf	___wmul@product+1
  3054  055E                     i1l2396:
  3055  055E  1C70               	btfss	___wmul@multiplier,0
  3056  055F  2D61               	goto	u139_21
  3057  0560  2D62               	goto	u139_20
  3058  0561                     u139_21:
  3059  0561  2D68               	goto	i1l470
  3060  0562                     u139_20:
  3061  0562                     i1l2398:
  3062  0562  0872               	movf	___wmul@multiplicand,w
  3063  0563  07F4               	addwf	___wmul@product,f
  3064  0564  1803               	skipnc
  3065  0565  0AF5               	incf	___wmul@product+1,f
  3066  0566  0873               	movf	___wmul@multiplicand+1,w
  3067  0567  07F5               	addwf	___wmul@product+1,f
  3068  0568                     i1l470:
  3069  0568  3001               	movlw	1
  3070  0569                     u140_25:
  3071  0569  1003               	clrc
  3072  056A  0DF2               	rlf	___wmul@multiplicand,f
  3073  056B  0DF3               	rlf	___wmul@multiplicand+1,f
  3074  056C  3EFF               	addlw	-1
  3075  056D  1D03               	skipz
  3076  056E  2D69               	goto	u140_25
  3077  056F                     i1l2400:
  3078  056F  3001               	movlw	1
  3079  0570                     u141_25:
  3080  0570  1003               	clrc
  3081  0571  0CF1               	rrf	___wmul@multiplier+1,f
  3082  0572  0CF0               	rrf	___wmul@multiplier,f
  3083  0573  3EFF               	addlw	-1
  3084  0574  1D03               	skipz
  3085  0575  2D70               	goto	u141_25
  3086  0576                     i1l2402:
  3087  0576  0870               	movf	___wmul@multiplier,w
  3088  0577  0471               	iorwf	___wmul@multiplier+1,w
  3089  0578  1D03               	btfss	3,2
  3090  0579  2D7B               	goto	u142_21
  3091  057A  2D7C               	goto	u142_20
  3092  057B                     u142_21:
  3093  057B  2D5E               	goto	i1l2396
  3094  057C                     u142_20:
  3095  057C                     i1l2404:
  3096  057C  0875               	movf	___wmul@product+1,w
  3097  057D  00F1               	movwf	?___wmul+1
  3098  057E  0874               	movf	___wmul@product,w
  3099  057F  00F0               	movwf	?___wmul
  3100  0580                     i1l472:
  3101  0580  0008               	return
  3102  0581                     __end_of___wmul:
  3103                           
  3104                           	psect	text21
  3105  0424                     __ptext21:	
  3106 ;; *************** function _Clock_Minutes_Setting *****************
  3107 ;; Defined at:
  3108 ;;		line 102 in file "Clock/Clock.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, btemp+1
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_Clock_Update
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _Clock_Minutes_Setting
  3137  0424                     _Clock_Minutes_Setting:
  3138  0424                     i1l2616:	
  3139                           ;incstack = 0
  3140                           ; Regs used in _Clock_Minutes_Setting: [wreg+status,2+status,0+btemp+1]
  3141                           
  3142                           
  3143                           ;Clock/Clock.c: 104:   if(ButtonsFlag.UpButton_Flag&&!ButtonsFlag.DownButton_Flag)
  3144  0424  1C7D               	btfss	_ButtonsFlag,0
  3145  0425  2C27               	goto	u183_21
  3146  0426  2C28               	goto	u183_20
  3147  0427                     u183_21:
  3148  0427  2C40               	goto	i1l323
  3149  0428                     u183_20:
  3150  0428                     i1l2618:
  3151  0428  18FD               	btfsc	_ButtonsFlag,1
  3152  0429  2C2B               	goto	u184_21
  3153  042A  2C2C               	goto	u184_20
  3154  042B                     u184_21:
  3155  042B  2C40               	goto	i1l323
  3156  042C                     u184_20:
  3157  042C                     i1l2620:
  3158                           
  3159                           ;Clock/Clock.c: 105:     {;Clock/Clock.c: 106:         if(Clock.Minutes==59)
  3160  042C  303B               	movlw	59
  3161  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3162  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3163  042F  0625               	xorwf	_Clock+1,w
  3164  0430  1D03               	btfss	3,2
  3165  0431  2C33               	goto	u185_21
  3166  0432  2C34               	goto	u185_20
  3167  0433                     u185_21:
  3168  0433  2C3A               	goto	i1l2626
  3169  0434                     u185_20:
  3170  0434                     i1l2622:
  3171                           
  3172                           ;Clock/Clock.c: 107:         {;Clock/Clock.c: 108:             Clock.Hours++;
  3173  0434  3001               	movlw	1
  3174  0435  00FF               	movwf	btemp+1
  3175  0436  087F               	movf	btemp+1,w
  3176  0437  07A6               	addwf	_Clock+2,f
  3177  0438                     i1l2624:
  3178                           
  3179                           ;Clock/Clock.c: 109:             Clock.Minutes=0;
  3180  0438  01A5               	clrf	_Clock+1
  3181                           
  3182                           ;Clock/Clock.c: 110:         }
  3183  0439  2C3E               	goto	i1l2628
  3184  043A                     i1l2626:
  3185                           
  3186                           ;Clock/Clock.c: 112:         {;Clock/Clock.c: 113:             Clock.Minutes++;
  3187  043A  3001               	movlw	1
  3188  043B  00FF               	movwf	btemp+1
  3189  043C  087F               	movf	btemp+1,w
  3190  043D  07A5               	addwf	_Clock+1,f
  3191  043E                     i1l2628:
  3192                           
  3193                           ;Clock/Clock.c: 115:         ButtonsFlag.UpButton_Flag=0;
  3194  043E  107D               	bcf	_ButtonsFlag,0
  3195                           
  3196                           ;Clock/Clock.c: 116:     }
  3197  043F  2C59               	goto	i1l330
  3198  0440                     i1l323:	
  3199                           ;Clock/Clock.c: 117:     else if(ButtonsFlag.DownButton_Flag&&!ButtonsFlag.UpButton_Flag
      +                          )
  3200                           
  3201  0440  1CFD               	btfss	_ButtonsFlag,1
  3202  0441  2C43               	goto	u186_21
  3203  0442  2C44               	goto	u186_20
  3204  0443                     u186_21:
  3205  0443  2C59               	goto	i1l330
  3206  0444                     u186_20:
  3207  0444                     i1l2630:
  3208  0444  187D               	btfsc	_ButtonsFlag,0
  3209  0445  2C47               	goto	u187_21
  3210  0446  2C48               	goto	u187_20
  3211  0447                     u187_21:
  3212  0447  2C59               	goto	i1l330
  3213  0448                     u187_20:
  3214  0448                     i1l2632:
  3215                           
  3216                           ;Clock/Clock.c: 118:     {;Clock/Clock.c: 119:         if(Clock.Minutes==0)
  3217  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3219  044A  0825               	movf	_Clock+1,w
  3220  044B  1D03               	btfss	3,2
  3221  044C  2C4E               	goto	u188_21
  3222  044D  2C4F               	goto	u188_20
  3223  044E                     u188_21:
  3224  044E  2C56               	goto	i1l2638
  3225  044F                     u188_20:
  3226  044F                     i1l2634:
  3227                           
  3228                           ;Clock/Clock.c: 120:         {;Clock/Clock.c: 121:             Clock.Hours--;
  3229  044F  3001               	movlw	1
  3230  0450  02A6               	subwf	_Clock+2,f
  3231  0451                     i1l2636:
  3232                           
  3233                           ;Clock/Clock.c: 122:             Clock.Minutes=59;
  3234  0451  303B               	movlw	59
  3235  0452  00FF               	movwf	btemp+1
  3236  0453  087F               	movf	btemp+1,w
  3237  0454  00A5               	movwf	_Clock+1
  3238                           
  3239                           ;Clock/Clock.c: 123:         }
  3240  0455  2C58               	goto	i1l2640
  3241  0456                     i1l2638:
  3242                           
  3243                           ;Clock/Clock.c: 125:         {;Clock/Clock.c: 126:             Clock.Minutes--;
  3244  0456  3001               	movlw	1
  3245  0457  02A5               	subwf	_Clock+1,f
  3246  0458                     i1l2640:
  3247                           
  3248                           ;Clock/Clock.c: 128:         ButtonsFlag.DownButton_Flag=0;
  3249  0458  10FD               	bcf	_ButtonsFlag,1
  3250  0459                     i1l330:
  3251  0459  0008               	return
  3252  045A                     __end_of_Clock_Minutes_Setting:
  3253                           
  3254                           	psect	text22
  3255  048B                     __ptext22:	
  3256 ;; *************** function _Clock_Hour_Setting *****************
  3257 ;; Defined at:
  3258 ;;		line 71 in file "Clock/Clock.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0, btemp+1
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3272 ;;      Params:         0       0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0
  3274 ;;      Temps:          0       0       0       0       0
  3275 ;;      Totals:         0       0       0       0       0
  3276 ;;Total ram usage:        0 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_Clock_Update
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _Clock_Hour_Setting
  3287  048B                     _Clock_Hour_Setting:
  3288  048B                     i1l2594:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _Clock_Hour_Setting: [wreg+status,2+status,0+btemp+1]
  3291                           
  3292                           
  3293                           ;Clock/Clock.c: 73:     if(ButtonsFlag.UpButton_Flag&&!ButtonsFlag.DownButton_Flag)
  3294  048B  1C7D               	btfss	_ButtonsFlag,0
  3295  048C  2C8E               	goto	u177_21
  3296  048D  2C8F               	goto	u177_20
  3297  048E                     u177_21:
  3298  048E  2CA3               	goto	i1l313
  3299  048F                     u177_20:
  3300  048F                     i1l2596:
  3301  048F  18FD               	btfsc	_ButtonsFlag,1
  3302  0490  2C92               	goto	u178_21
  3303  0491  2C93               	goto	u178_20
  3304  0492                     u178_21:
  3305  0492  2CA3               	goto	i1l313
  3306  0493                     u178_20:
  3307  0493                     i1l2598:
  3308                           
  3309                           ;Clock/Clock.c: 74:     {;Clock/Clock.c: 75:         if(Clock.Hours==23)
  3310  0493  3017               	movlw	23
  3311  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0496  0626               	xorwf	_Clock+2,w
  3314  0497  1D03               	btfss	3,2
  3315  0498  2C9A               	goto	u179_21
  3316  0499  2C9B               	goto	u179_20
  3317  049A                     u179_21:
  3318  049A  2C9D               	goto	i1l2602
  3319  049B                     u179_20:
  3320  049B                     i1l2600:
  3321                           
  3322                           ;Clock/Clock.c: 76:         {;Clock/Clock.c: 77:             Clock.Hours=0;
  3323  049B  01A6               	clrf	_Clock+2
  3324                           
  3325                           ;Clock/Clock.c: 78:         }
  3326  049C  2CA1               	goto	i1l2604
  3327  049D                     i1l2602:
  3328                           
  3329                           ;Clock/Clock.c: 80:         {;Clock/Clock.c: 81:             Clock.Hours++;
  3330  049D  3001               	movlw	1
  3331  049E  00FF               	movwf	btemp+1
  3332  049F  087F               	movf	btemp+1,w
  3333  04A0  07A6               	addwf	_Clock+2,f
  3334  04A1                     i1l2604:
  3335                           
  3336                           ;Clock/Clock.c: 83:         ButtonsFlag.UpButton_Flag=0;
  3337  04A1  107D               	bcf	_ButtonsFlag,0
  3338                           
  3339                           ;Clock/Clock.c: 84:     }
  3340  04A2  2CBA               	goto	i1l320
  3341  04A3                     i1l313:	
  3342                           ;Clock/Clock.c: 85:     else if(ButtonsFlag.DownButton_Flag&&!ButtonsFlag.UpButton_Flag)
  3343                           
  3344  04A3  1CFD               	btfss	_ButtonsFlag,1
  3345  04A4  2CA6               	goto	u180_21
  3346  04A5  2CA7               	goto	u180_20
  3347  04A6                     u180_21:
  3348  04A6  2CBA               	goto	i1l320
  3349  04A7                     u180_20:
  3350  04A7                     i1l2606:
  3351  04A7  187D               	btfsc	_ButtonsFlag,0
  3352  04A8  2CAA               	goto	u181_21
  3353  04A9  2CAB               	goto	u181_20
  3354  04AA                     u181_21:
  3355  04AA  2CBA               	goto	i1l320
  3356  04AB                     u181_20:
  3357  04AB                     i1l2608:
  3358                           
  3359                           ;Clock/Clock.c: 86:     {;Clock/Clock.c: 87:          if(Clock.Hours==0)
  3360  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  3361  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  3362  04AD  0826               	movf	_Clock+2,w
  3363  04AE  1D03               	btfss	3,2
  3364  04AF  2CB1               	goto	u182_21
  3365  04B0  2CB2               	goto	u182_20
  3366  04B1                     u182_21:
  3367  04B1  2CB7               	goto	i1l2612
  3368  04B2                     u182_20:
  3369  04B2                     i1l2610:
  3370                           
  3371                           ;Clock/Clock.c: 88:         {;Clock/Clock.c: 89:             Clock.Hours=23;
  3372  04B2  3017               	movlw	23
  3373  04B3  00FF               	movwf	btemp+1
  3374  04B4  087F               	movf	btemp+1,w
  3375  04B5  00A6               	movwf	_Clock+2
  3376                           
  3377                           ;Clock/Clock.c: 90:         }
  3378  04B6  2CB9               	goto	i1l2614
  3379  04B7                     i1l2612:
  3380                           
  3381                           ;Clock/Clock.c: 92:         {;Clock/Clock.c: 93:          Clock.Hours--;
  3382  04B7  3001               	movlw	1
  3383  04B8  02A6               	subwf	_Clock+2,f
  3384  04B9                     i1l2614:
  3385                           
  3386                           ;Clock/Clock.c: 95:         ButtonsFlag.DownButton_Flag=0;
  3387  04B9  10FD               	bcf	_ButtonsFlag,1
  3388  04BA                     i1l320:
  3389  04BA  0008               	return
  3390  04BB                     __end_of_Clock_Hour_Setting:
  3391                           
  3392                           	psect	text23
  3393  0536                     __ptext23:	
  3394 ;; *************** function _ModeManager_Update *****************
  3395 ;; Defined at:
  3396 ;;		line 17 in file "ModeManger/ModeManager.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3410 ;;      Params:         0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0
  3412 ;;      Temps:          2       0       0       0       0
  3413 ;;      Totals:         2       0       0       0       0
  3414 ;;Total ram usage:        2 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_Scheduler_Task2
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _ModeManager_Update
  3425  0536                     _ModeManager_Update:
  3426  0536                     i1l2700:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _ModeManager_Update: [wreg-fsr0h+status,2+status,0+btemp+1]
  3429                           
  3430                           
  3431                           ;ModeManger/ModeManager.c: 20:     if(ButtonsFlag.SettingButton_Flag)
  3432  0536  1D7D               	btfss	_ButtonsFlag,2
  3433  0537  2D39               	goto	u195_21
  3434  0538  2D3A               	goto	u195_20
  3435  0539                     u195_21:
  3436  0539  2D5B               	goto	i1l228
  3437  053A                     u195_20:
  3438  053A  2D45               	goto	i1l2710
  3439  053B                     i1l224:	
  3440                           ;ModeManger/ModeManager.c: 24:         {;ModeManger/ModeManager.c: 25:             case 
      +                          Normal_Mode:
  3441                           
  3442                           
  3443                           ;ModeManger/ModeManager.c: 26:                          MODE=Hours_Mode;
  3444  053B  01B3               	clrf	_MODE
  3445  053C  0AB3               	incf	_MODE,f
  3446                           
  3447                           ;ModeManger/ModeManager.c: 27:                          break;
  3448  053D  2D5A               	goto	i1l225
  3449  053E                     i1l2704:
  3450                           
  3451                           ;ModeManger/ModeManager.c: 30:                          MODE=Minutes_Mode;
  3452  053E  3002               	movlw	2
  3453  053F  00FF               	movwf	btemp+1
  3454  0540  087F               	movf	btemp+1,w
  3455  0541  00B3               	movwf	_MODE
  3456                           
  3457                           ;ModeManger/ModeManager.c: 31:                          break;
  3458  0542  2D5A               	goto	i1l225
  3459  0543                     i1l2706:
  3460                           
  3461                           ;ModeManger/ModeManager.c: 34:                          MODE=Normal_Mode;
  3462  0543  01B3               	clrf	_MODE
  3463                           
  3464                           ;ModeManger/ModeManager.c: 35:                          break;
  3465  0544  2D5A               	goto	i1l225
  3466  0545                     i1l2710:
  3467  0545  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0546  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0547  0833               	movf	_MODE,w
  3470  0548  00F0               	movwf	??_ModeManager_Update
  3471  0549  01F1               	clrf	??_ModeManager_Update+1
  3472                           
  3473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3474                           ; Switch size 1, requested type "simple"
  3475                           ; Number of cases is 1, Range of values is 0 to 0
  3476                           ; switch strategies available:
  3477                           ; Name         Instructions Cycles
  3478                           ; simple_byte            4     3 (average)
  3479                           ; direct_byte           11     8 (fixed)
  3480                           ; jumptable            260     6 (fixed)
  3481                           ;	Chosen strategy is simple_byte
  3482  054A  0871               	movf	??_ModeManager_Update+1,w
  3483  054B  3A00               	xorlw	0	; case 0
  3484  054C  1903               	skipnz
  3485  054D  2D4F               	goto	i1l2888
  3486  054E  2D5A               	goto	i1l225
  3487  054F                     i1l2888:
  3488                           
  3489                           ; Switch size 1, requested type "simple"
  3490                           ; Number of cases is 3, Range of values is 0 to 2
  3491                           ; switch strategies available:
  3492                           ; Name         Instructions Cycles
  3493                           ; simple_byte           10     6 (average)
  3494                           ; direct_byte           17     8 (fixed)
  3495                           ; jumptable            260     6 (fixed)
  3496                           ;	Chosen strategy is simple_byte
  3497  054F  0870               	movf	??_ModeManager_Update,w
  3498  0550  3A00               	xorlw	0	; case 0
  3499  0551  1903               	skipnz
  3500  0552  2D3B               	goto	i1l224
  3501  0553  3A01               	xorlw	1	; case 1
  3502  0554  1903               	skipnz
  3503  0555  2D3E               	goto	i1l2704
  3504  0556  3A03               	xorlw	3	; case 2
  3505  0557  1903               	skipnz
  3506  0558  2D43               	goto	i1l2706
  3507  0559  2D5A               	goto	i1l225
  3508  055A                     i1l225:
  3509                           
  3510                           ;ModeManger/ModeManager.c: 37:         ButtonsFlag.SettingButton_Flag=0;
  3511  055A  117D               	bcf	_ButtonsFlag,2
  3512  055B                     i1l228:
  3513  055B  0008               	return
  3514  055C                     __end_of_ModeManager_Update:
  3515                           
  3516                           	psect	text24
  3517  01E4                     __ptext24:	
  3518 ;; *************** function _Buttons_Update *****************
  3519 ;; Defined at:
  3520 ;;		line 27 in file "Buttons/Buttons.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    1
  3541 ;; This function calls:
  3542 ;;		___awmod
  3543 ;; This function is called by:
  3544 ;;		_Scheduler_Task2
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _Buttons_Update
  3550  01E4                     _Buttons_Update:
  3551  01E4                     i1l2642:	
  3552                           ;incstack = 0
  3553                           ; Regs used in _Buttons_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3554                           
  3555                           
  3556                           ;Buttons/Buttons.c: 29:     static uint8_t Debounce_Counter=0;;Buttons/Buttons.c: 30:   
      +                            Debounce_UpButton[Debounce_Counter]=(PORTB&(1<<2));
  3557  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3558  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3559  01E6  0806               	movf	6,w	;volatile
  3560  01E7  3904               	andlw	4
  3561  01E8  00FF               	movwf	btemp+1
  3562  01E9  0831               	movf	Buttons_Update@Debounce_Counter,w
  3563  01EA  3E37               	addlw	(low (_Debounce_UpButton| 0))& (0+255)
  3564  01EB  0084               	movwf	4
  3565  01EC  087F               	movf	btemp+1,w
  3566  01ED  1383               	bcf	3,7	;select IRP bank0
  3567  01EE  0080               	movwf	0
  3568                           
  3569                           ;Buttons/Buttons.c: 31:     Debounce_DownButton[Debounce_Counter]=(PORTB&(1<<1));
  3570  01EF  0806               	movf	6,w	;volatile
  3571  01F0  3902               	andlw	2
  3572  01F1  00FF               	movwf	btemp+1
  3573  01F2  0831               	movf	Buttons_Update@Debounce_Counter,w
  3574  01F3  3E34               	addlw	(low (_Debounce_DownButton| 0))& (0+255)
  3575  01F4  0084               	movwf	4
  3576  01F5  087F               	movf	btemp+1,w
  3577  01F6  0080               	movwf	0
  3578  01F7                     i1l2644:
  3579                           
  3580                           ;Buttons/Buttons.c: 33:     Debounce_Counter=(Debounce_Counter+1)%3;
  3581  01F7  3003               	movlw	3
  3582  01F8  00F0               	movwf	___awmod@divisor
  3583  01F9  3000               	movlw	0
  3584  01FA  00F1               	movwf	___awmod@divisor+1
  3585  01FB  0831               	movf	Buttons_Update@Debounce_Counter,w
  3586  01FC  3E01               	addlw	1
  3587  01FD  00F2               	movwf	___awmod@dividend
  3588  01FE  3000               	movlw	0
  3589  01FF  1803               	skipnc
  3590  0200  3001               	movlw	1
  3591  0201  00F3               	movwf	___awmod@dividend+1
  3592  0202  120A  118A  229F  120A  118A  	fcall	___awmod
  3593  0207  0870               	movf	?___awmod,w
  3594  0208  00FF               	movwf	btemp+1
  3595  0209  087F               	movf	btemp+1,w
  3596  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3597  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3598  020C  00B1               	movwf	Buttons_Update@Debounce_Counter
  3599  020D                     i1l2646:
  3600                           
  3601                           ;Buttons/Buttons.c: 34:     if(Debounce_UpButton[0]==0 &&Debounce_UpButton[1]==0 &&Debou
      +                          nce_UpButton[2]==0 )
  3602  020D  0837               	movf	_Debounce_UpButton,w
  3603  020E  1D03               	btfss	3,2
  3604  020F  2A11               	goto	u189_21
  3605  0210  2A12               	goto	u189_20
  3606  0211                     u189_21:
  3607  0211  2A27               	goto	i1l2662
  3608  0212                     u189_20:
  3609  0212                     i1l2648:
  3610  0212  0838               	movf	_Debounce_UpButton+1,w
  3611  0213  1D03               	btfss	3,2
  3612  0214  2A16               	goto	u190_21
  3613  0215  2A17               	goto	u190_20
  3614  0216                     u190_21:
  3615  0216  2A27               	goto	i1l2662
  3616  0217                     u190_20:
  3617  0217                     i1l2650:
  3618  0217  0839               	movf	_Debounce_UpButton+2,w
  3619  0218  1D03               	btfss	3,2
  3620  0219  2A1B               	goto	u191_21
  3621  021A  2A1C               	goto	u191_20
  3622  021B                     u191_21:
  3623  021B  2A27               	goto	i1l2662
  3624  021C                     u191_20:
  3625  021C                     i1l2652:
  3626                           
  3627                           ;Buttons/Buttons.c: 35:     {;Buttons/Buttons.c: 36:         ButtonsFlag.UpButton_Flag=1
      +                          ;
  3628  021C  147D               	bsf	_ButtonsFlag,0
  3629  021D                     i1l2654:
  3630                           
  3631                           ;Buttons/Buttons.c: 37:          (PORTB^=(1<<3));
  3632  021D  3008               	movlw	8
  3633  021E  00FF               	movwf	btemp+1
  3634  021F  087F               	movf	btemp+1,w
  3635  0220  0686               	xorwf	6,f	;volatile
  3636  0221                     i1l2656:
  3637                           
  3638                           ;Buttons/Buttons.c: 38:         Debounce_UpButton[0]=1 ;Debounce_UpButton[1]=1 ;Debounce
      +                          _UpButton[2]=1 ;
  3639  0221  01B7               	clrf	_Debounce_UpButton
  3640  0222  0AB7               	incf	_Debounce_UpButton,f
  3641  0223                     i1l2658:
  3642  0223  01B8               	clrf	_Debounce_UpButton+1
  3643  0224  0AB8               	incf	_Debounce_UpButton+1,f
  3644  0225                     i1l2660:
  3645  0225  01B9               	clrf	_Debounce_UpButton+2
  3646  0226  0AB9               	incf	_Debounce_UpButton+2,f
  3647  0227                     i1l2662:
  3648                           
  3649                           ;Buttons/Buttons.c: 41:     if(Debounce_DownButton[0]==0 &&Debounce_DownButton[1]==0 &&D
      +                          ebounce_DownButton[2]==0 )
  3650  0227  0834               	movf	_Debounce_DownButton,w
  3651  0228  1D03               	btfss	3,2
  3652  0229  2A2B               	goto	u192_21
  3653  022A  2A2C               	goto	u192_20
  3654  022B                     u192_21:
  3655  022B  2A41               	goto	i1l96
  3656  022C                     u192_20:
  3657  022C                     i1l2664:
  3658  022C  0835               	movf	_Debounce_DownButton+1,w
  3659  022D  1D03               	btfss	3,2
  3660  022E  2A30               	goto	u193_21
  3661  022F  2A31               	goto	u193_20
  3662  0230                     u193_21:
  3663  0230  2A41               	goto	i1l96
  3664  0231                     u193_20:
  3665  0231                     i1l2666:
  3666  0231  0836               	movf	_Debounce_DownButton+2,w
  3667  0232  1D03               	btfss	3,2
  3668  0233  2A35               	goto	u194_21
  3669  0234  2A36               	goto	u194_20
  3670  0235                     u194_21:
  3671  0235  2A41               	goto	i1l96
  3672  0236                     u194_20:
  3673  0236                     i1l2668:
  3674                           
  3675                           ;Buttons/Buttons.c: 42:     {;Buttons/Buttons.c: 43:         ButtonsFlag.DownButton_Flag
      +                          =1;
  3676  0236  14FD               	bsf	_ButtonsFlag,1
  3677  0237                     i1l2670:
  3678                           
  3679                           ;Buttons/Buttons.c: 44:          (PORTB^=(1<<3));
  3680  0237  3008               	movlw	8
  3681  0238  00FF               	movwf	btemp+1
  3682  0239  087F               	movf	btemp+1,w
  3683  023A  0686               	xorwf	6,f	;volatile
  3684  023B                     i1l2672:
  3685                           
  3686                           ;Buttons/Buttons.c: 45:         Debounce_DownButton[0]=1 ;Debounce_DownButton[1]=1 ;Debo
      +                          unce_DownButton[2]=1 ;
  3687  023B  01B4               	clrf	_Debounce_DownButton
  3688  023C  0AB4               	incf	_Debounce_DownButton,f
  3689  023D                     i1l2674:
  3690  023D  01B5               	clrf	_Debounce_DownButton+1
  3691  023E  0AB5               	incf	_Debounce_DownButton+1,f
  3692  023F                     i1l2676:
  3693  023F  01B6               	clrf	_Debounce_DownButton+2
  3694  0240  0AB6               	incf	_Debounce_DownButton+2,f
  3695  0241                     i1l96:
  3696  0241  0008               	return
  3697  0242                     __end_of_Buttons_Update:
  3698                           
  3699                           	psect	text25
  3700  03E0                     __ptext25:	
  3701 ;; *************** function _Display_Update *****************
  3702 ;; Defined at:
  3703 ;;		line 29 in file "Display/Display.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0
  3719 ;;      Temps:          2       0       0       0       0
  3720 ;;      Totals:         2       0       0       0       0
  3721 ;;Total ram usage:        2 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    2
  3724 ;; This function calls:
  3725 ;;		_Display_Blink
  3726 ;;		_Display_Normal
  3727 ;;		_SSD_DigitSelector
  3728 ;; This function is called by:
  3729 ;;		_Scheduler_Task1
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _Display_Update
  3735  03E0                     _Display_Update:
  3736  03E0                     i1l2678:	
  3737                           ;incstack = 0
  3738 ;; hardware stack exceeded
  3739                           ; Regs used in _Display_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3740                           
  3741                           
  3742                           ;Display/Display.c: 31:    switch(MODE)
  3743  03E0  2C09               	goto	i1l2692
  3744  03E1                     i1l2680:
  3745                           
  3746                           ;Display/Display.c: 34:                               Display_Normal();
  3747  03E1  120A  118A  264E  120A  118A  	fcall	_Display_Normal
  3748                           
  3749                           ;Display/Display.c: 35:                               break;
  3750  03E6  2C1E               	goto	i1l2694
  3751  03E7                     i1l2682:
  3752                           
  3753                           ;Display/Display.c: 38:                               Display_Blink(500,Hours_Mode);
  3754  03E7  30F4               	movlw	244
  3755  03E8  00F0               	movwf	Display_Blink@Times_Ms
  3756  03E9  3001               	movlw	1
  3757  03EA  00F1               	movwf	Display_Blink@Times_Ms+1
  3758  03EB  01F2               	clrf	Display_Blink@_MODE_
  3759  03EC  0AF2               	incf	Display_Blink@_MODE_,f
  3760  03ED  120A  118A  234C  120A  118A  	fcall	_Display_Blink
  3761  03F2                     i1l2684:
  3762                           
  3763                           ;Display/Display.c: 39:                               Enable_Minutes=1;
  3764  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3765  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3766  03F4  01AF               	clrf	_Enable_Minutes
  3767  03F5  0AAF               	incf	_Enable_Minutes,f
  3768                           
  3769                           ;Display/Display.c: 41:                               break;
  3770  03F6  2C1E               	goto	i1l2694
  3771  03F7                     i1l2686:
  3772                           
  3773                           ;Display/Display.c: 44:                               Display_Blink(500,Minutes_Mode);
  3774  03F7  30F4               	movlw	244
  3775  03F8  00F0               	movwf	Display_Blink@Times_Ms
  3776  03F9  3001               	movlw	1
  3777  03FA  00F1               	movwf	Display_Blink@Times_Ms+1
  3778  03FB  3002               	movlw	2
  3779  03FC  00FF               	movwf	btemp+1
  3780  03FD  087F               	movf	btemp+1,w
  3781  03FE  00F2               	movwf	Display_Blink@_MODE_
  3782  03FF  120A  118A  234C  120A  118A  	fcall	_Display_Blink
  3783  0404                     i1l2688:
  3784                           
  3785                           ;Display/Display.c: 45:                               Enable_Hours=1;
  3786  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0406  01AE               	clrf	_Enable_Hours
  3789  0407  0AAE               	incf	_Enable_Hours,f
  3790                           
  3791                           ;Display/Display.c: 46:                               break;
  3792  0408  2C1E               	goto	i1l2694
  3793  0409                     i1l2692:
  3794  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3795  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3796  040B  0833               	movf	_MODE,w
  3797  040C  00FA               	movwf	??_Display_Update
  3798  040D  01FB               	clrf	??_Display_Update+1
  3799                           
  3800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3801                           ; Switch size 1, requested type "simple"
  3802                           ; Number of cases is 1, Range of values is 0 to 0
  3803                           ; switch strategies available:
  3804                           ; Name         Instructions Cycles
  3805                           ; simple_byte            4     3 (average)
  3806                           ; direct_byte           11     8 (fixed)
  3807                           ; jumptable            260     6 (fixed)
  3808                           ;	Chosen strategy is simple_byte
  3809  040E  087B               	movf	??_Display_Update+1,w
  3810  040F  3A00               	xorlw	0	; case 0
  3811  0410  1903               	skipnz
  3812  0411  2C13               	goto	i1l2890
  3813  0412  2C1E               	goto	i1l2694
  3814  0413                     i1l2890:
  3815                           
  3816                           ; Switch size 1, requested type "simple"
  3817                           ; Number of cases is 3, Range of values is 0 to 2
  3818                           ; switch strategies available:
  3819                           ; Name         Instructions Cycles
  3820                           ; simple_byte           10     6 (average)
  3821                           ; direct_byte           17     8 (fixed)
  3822                           ; jumptable            260     6 (fixed)
  3823                           ;	Chosen strategy is simple_byte
  3824  0413  087A               	movf	??_Display_Update,w
  3825  0414  3A00               	xorlw	0	; case 0
  3826  0415  1903               	skipnz
  3827  0416  2BE1               	goto	i1l2680
  3828  0417  3A01               	xorlw	1	; case 1
  3829  0418  1903               	skipnz
  3830  0419  2BE7               	goto	i1l2682
  3831  041A  3A03               	xorlw	3	; case 2
  3832  041B  1903               	skipnz
  3833  041C  2BF7               	goto	i1l2686
  3834  041D  2C1E               	goto	i1l2694
  3835  041E                     i1l2694:
  3836                           
  3837                           ;Display/Display.c: 48:     SSD_DigitSelector();
  3838  041E  120A  118A  2039  120A  118A  	fcall	_SSD_DigitSelector
  3839  0423                     i1l185:
  3840  0423  0008               	return
  3841  0424                     __end_of_Display_Update:
  3842                           
  3843                           	psect	text26
  3844  0039                     __ptext26:	
  3845 ;; *************** function _SSD_DigitSelector *****************
  3846 ;; Defined at:
  3847 ;;		line 25 in file "SSD/SSD.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0
  3863 ;;      Temps:          2       0       0       0       0
  3864 ;;      Totals:         2       0       0       0       0
  3865 ;;Total ram usage:        2 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    1
  3868 ;; This function calls:
  3869 ;;		_SSD_Display
  3870 ;;		___awdiv
  3871 ;;		___awmod
  3872 ;; This function is called by:
  3873 ;;		_Display_Update
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _SSD_DigitSelector
  3879  0039                     _SSD_DigitSelector:
  3880  0039                     i1l2524:	
  3881                           ;incstack = 0
  3882 ;; hardware stack exceeded
  3883                           ; Regs used in _SSD_DigitSelector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3884                           
  3885                           
  3886                           ;SSD/SSD.c: 28:  Digit1=Clock.Hours/10;
  3887  0039  300A               	movlw	10
  3888  003A  00F0               	movwf	___awdiv@divisor
  3889  003B  3000               	movlw	0
  3890  003C  00F1               	movwf	___awdiv@divisor+1
  3891  003D  1283               	bcf	3,5	;RP0=0, select bank0
  3892  003E  1303               	bcf	3,6	;RP1=0, select bank0
  3893  003F  0826               	movf	_Clock+2,w
  3894  0040  00F8               	movwf	??_SSD_DigitSelector
  3895  0041  01F9               	clrf	??_SSD_DigitSelector+1
  3896  0042  0878               	movf	??_SSD_DigitSelector,w
  3897  0043  00F2               	movwf	___awdiv@dividend
  3898  0044  0879               	movf	??_SSD_DigitSelector+1,w
  3899  0045  00F3               	movwf	___awdiv@dividend+1
  3900  0046  120A  118A  2118  120A  118A  	fcall	___awdiv
  3901  004B  0870               	movf	?___awdiv,w
  3902  004C  00FF               	movwf	btemp+1
  3903  004D  087F               	movf	btemp+1,w
  3904  004E  1283               	bcf	3,5	;RP0=0, select bank0
  3905  004F  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0050  00AC               	movwf	_Digit1
  3907                           
  3908                           ;SSD/SSD.c: 29:  Digit2=Clock.Hours%10;
  3909  0051  300A               	movlw	10
  3910  0052  00F0               	movwf	___awmod@divisor
  3911  0053  3000               	movlw	0
  3912  0054  00F1               	movwf	___awmod@divisor+1
  3913  0055  0826               	movf	_Clock+2,w
  3914  0056  00F8               	movwf	??_SSD_DigitSelector
  3915  0057  01F9               	clrf	??_SSD_DigitSelector+1
  3916  0058  0878               	movf	??_SSD_DigitSelector,w
  3917  0059  00F2               	movwf	___awmod@dividend
  3918  005A  0879               	movf	??_SSD_DigitSelector+1,w
  3919  005B  00F3               	movwf	___awmod@dividend+1
  3920  005C  120A  118A  229F  120A  118A  	fcall	___awmod
  3921  0061  0870               	movf	?___awmod,w
  3922  0062  00FF               	movwf	btemp+1
  3923  0063  087F               	movf	btemp+1,w
  3924  0064  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0065  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0066  00AB               	movwf	_Digit2
  3927                           
  3928                           ;SSD/SSD.c: 30:  Digit3=Clock.Minutes/10;
  3929  0067  300A               	movlw	10
  3930  0068  00F0               	movwf	___awdiv@divisor
  3931  0069  3000               	movlw	0
  3932  006A  00F1               	movwf	___awdiv@divisor+1
  3933  006B  0825               	movf	_Clock+1,w
  3934  006C  00F8               	movwf	??_SSD_DigitSelector
  3935  006D  01F9               	clrf	??_SSD_DigitSelector+1
  3936  006E  0878               	movf	??_SSD_DigitSelector,w
  3937  006F  00F2               	movwf	___awdiv@dividend
  3938  0070  0879               	movf	??_SSD_DigitSelector+1,w
  3939  0071  00F3               	movwf	___awdiv@dividend+1
  3940  0072  120A  118A  2118  120A  118A  	fcall	___awdiv
  3941  0077  0870               	movf	?___awdiv,w
  3942  0078  00FF               	movwf	btemp+1
  3943  0079  087F               	movf	btemp+1,w
  3944  007A  1283               	bcf	3,5	;RP0=0, select bank0
  3945  007B  1303               	bcf	3,6	;RP1=0, select bank0
  3946  007C  00AA               	movwf	_Digit3
  3947                           
  3948                           ;SSD/SSD.c: 31:  Digit4=Clock.Minutes%10;
  3949  007D  300A               	movlw	10
  3950  007E  00F0               	movwf	___awmod@divisor
  3951  007F  3000               	movlw	0
  3952  0080  00F1               	movwf	___awmod@divisor+1
  3953  0081  0825               	movf	_Clock+1,w
  3954  0082  00F8               	movwf	??_SSD_DigitSelector
  3955  0083  01F9               	clrf	??_SSD_DigitSelector+1
  3956  0084  0878               	movf	??_SSD_DigitSelector,w
  3957  0085  00F2               	movwf	___awmod@dividend
  3958  0086  0879               	movf	??_SSD_DigitSelector+1,w
  3959  0087  00F3               	movwf	___awmod@dividend+1
  3960  0088  120A  118A  229F  120A  118A  	fcall	___awmod
  3961  008D  0870               	movf	?___awmod,w
  3962  008E  00FF               	movwf	btemp+1
  3963  008F  087F               	movf	btemp+1,w
  3964  0090  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0091  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0092  00A9               	movwf	_Digit4
  3967                           
  3968                           ;SSD/SSD.c: 35:       switch(DigitSelector)
  3969  0093  28F9               	goto	i1l2562
  3970  0094                     i1l2526:
  3971                           
  3972                           ;SSD/SSD.c: 38:                         if(Enable_Hours==1)
  3973  0094  032E               	decf	_Enable_Hours,w
  3974  0095  1D03               	btfss	3,2
  3975  0096  2898               	goto	u169_21
  3976  0097  2899               	goto	u169_20
  3977  0098                     u169_21:
  3978  0098  289A               	goto	i1l2530
  3979  0099                     u169_20:
  3980  0099                     i1l2528:
  3981                           
  3982                           ;SSD/SSD.c: 39:                         {;SSD/SSD.c: 40:                             (PO
      +                          RTA|=(1<<2));
  3983  0099  1505               	bsf	5,2	;volatile
  3984  009A                     i1l2530:
  3985                           
  3986                           ;SSD/SSD.c: 42:                         (PORTA&=~(1<<3));
  3987  009A  30F7               	movlw	247
  3988  009B  00FF               	movwf	btemp+1
  3989  009C  087F               	movf	btemp+1,w
  3990  009D  0585               	andwf	5,f	;volatile
  3991                           
  3992                           ;SSD/SSD.c: 43:                         (PORTA&=~(1<<4));
  3993  009E  30EF               	movlw	239
  3994  009F  00FF               	movwf	btemp+1
  3995  00A0  087F               	movf	btemp+1,w
  3996  00A1  0585               	andwf	5,f	;volatile
  3997                           
  3998                           ;SSD/SSD.c: 44:                         (PORTA&=~(1<<5));
  3999  00A2  30DF               	movlw	223
  4000  00A3  00FF               	movwf	btemp+1
  4001  00A4  087F               	movf	btemp+1,w
  4002  00A5  0585               	andwf	5,f	;volatile
  4003  00A6                     i1l2532:
  4004                           
  4005                           ;SSD/SSD.c: 45:                         SSD_Display(Digit1);
  4006  00A6  082C               	movf	_Digit1,w
  4007  00A7  120A  118A  2242  120A  118A  	fcall	_SSD_Display
  4008                           
  4009                           ;SSD/SSD.c: 46:                         break;
  4010  00AC  290F               	goto	i1l2564
  4011  00AD                     i1l2534:
  4012                           
  4013                           ;SSD/SSD.c: 49:                         if(Enable_Hours==1)
  4014  00AD  032E               	decf	_Enable_Hours,w
  4015  00AE  1D03               	btfss	3,2
  4016  00AF  28B1               	goto	u170_21
  4017  00B0  28B2               	goto	u170_20
  4018  00B1                     u170_21:
  4019  00B1  28B3               	goto	i1l2538
  4020  00B2                     u170_20:
  4021  00B2                     i1l2536:
  4022                           
  4023                           ;SSD/SSD.c: 50:                         {;SSD/SSD.c: 51:                             (PO
      +                          RTA|=(1<<3));
  4024  00B2  1585               	bsf	5,3	;volatile
  4025  00B3                     i1l2538:
  4026                           
  4027                           ;SSD/SSD.c: 53:                         (PORTA&=~(1<<2));
  4028  00B3  30FB               	movlw	251
  4029  00B4  00FF               	movwf	btemp+1
  4030  00B5  087F               	movf	btemp+1,w
  4031  00B6  0585               	andwf	5,f	;volatile
  4032                           
  4033                           ;SSD/SSD.c: 54:                         (PORTA&=~(1<<4));
  4034  00B7  30EF               	movlw	239
  4035  00B8  00FF               	movwf	btemp+1
  4036  00B9  087F               	movf	btemp+1,w
  4037  00BA  0585               	andwf	5,f	;volatile
  4038                           
  4039                           ;SSD/SSD.c: 55:                         (PORTA&=~(1<<5));
  4040  00BB  30DF               	movlw	223
  4041  00BC  00FF               	movwf	btemp+1
  4042  00BD  087F               	movf	btemp+1,w
  4043  00BE  0585               	andwf	5,f	;volatile
  4044  00BF                     i1l2540:
  4045                           
  4046                           ;SSD/SSD.c: 57:                         (PORTD|=(1<<7));
  4047  00BF  1788               	bsf	8,7	;volatile
  4048  00C0                     i1l2542:
  4049                           
  4050                           ;SSD/SSD.c: 58:                         SSD_Display(Digit2);
  4051  00C0  082B               	movf	_Digit2,w
  4052  00C1  120A  118A  2242  120A  118A  	fcall	_SSD_Display
  4053                           
  4054                           ;SSD/SSD.c: 59:                         break;
  4055  00C6  290F               	goto	i1l2564
  4056  00C7                     i1l2544:
  4057                           
  4058                           ;SSD/SSD.c: 61:                         if(Enable_Minutes==1)
  4059  00C7  032F               	decf	_Enable_Minutes,w
  4060  00C8  1D03               	btfss	3,2
  4061  00C9  28CB               	goto	u171_21
  4062  00CA  28CC               	goto	u171_20
  4063  00CB                     u171_21:
  4064  00CB  28CD               	goto	i1l2548
  4065  00CC                     u171_20:
  4066  00CC                     i1l2546:
  4067                           
  4068                           ;SSD/SSD.c: 62:                         {;SSD/SSD.c: 63:                             (PO
      +                          RTA|=(1<<4));
  4069  00CC  1605               	bsf	5,4	;volatile
  4070  00CD                     i1l2548:
  4071                           
  4072                           ;SSD/SSD.c: 65:                         (PORTA&=~(1<<2));
  4073  00CD  30FB               	movlw	251
  4074  00CE  00FF               	movwf	btemp+1
  4075  00CF  087F               	movf	btemp+1,w
  4076  00D0  0585               	andwf	5,f	;volatile
  4077                           
  4078                           ;SSD/SSD.c: 66:                         (PORTA&=~(1<<3));
  4079  00D1  30F7               	movlw	247
  4080  00D2  00FF               	movwf	btemp+1
  4081  00D3  087F               	movf	btemp+1,w
  4082  00D4  0585               	andwf	5,f	;volatile
  4083                           
  4084                           ;SSD/SSD.c: 67:                         (PORTA&=~(1<<5));
  4085  00D5  30DF               	movlw	223
  4086  00D6  00FF               	movwf	btemp+1
  4087  00D7  087F               	movf	btemp+1,w
  4088  00D8  0585               	andwf	5,f	;volatile
  4089  00D9                     i1l2550:
  4090                           
  4091                           ;SSD/SSD.c: 68:                         SSD_Display(Digit3);
  4092  00D9  082A               	movf	_Digit3,w
  4093  00DA  120A  118A  2242  120A  118A  	fcall	_SSD_Display
  4094                           
  4095                           ;SSD/SSD.c: 69:                         break;
  4096  00DF  290F               	goto	i1l2564
  4097  00E0                     i1l2552:
  4098                           
  4099                           ;SSD/SSD.c: 71:                         if(Enable_Minutes==1)
  4100  00E0  032F               	decf	_Enable_Minutes,w
  4101  00E1  1D03               	btfss	3,2
  4102  00E2  28E4               	goto	u172_21
  4103  00E3  28E5               	goto	u172_20
  4104  00E4                     u172_21:
  4105  00E4  28E6               	goto	i1l2556
  4106  00E5                     u172_20:
  4107  00E5                     i1l2554:
  4108                           
  4109                           ;SSD/SSD.c: 72:                         {;SSD/SSD.c: 73:                             (PO
      +                          RTA|=(1<<5));
  4110  00E5  1685               	bsf	5,5	;volatile
  4111  00E6                     i1l2556:
  4112                           
  4113                           ;SSD/SSD.c: 75:                         (PORTA&=~(1<<2));
  4114  00E6  30FB               	movlw	251
  4115  00E7  00FF               	movwf	btemp+1
  4116  00E8  087F               	movf	btemp+1,w
  4117  00E9  0585               	andwf	5,f	;volatile
  4118                           
  4119                           ;SSD/SSD.c: 76:                         (PORTA&=~(1<<3));
  4120  00EA  30F7               	movlw	247
  4121  00EB  00FF               	movwf	btemp+1
  4122  00EC  087F               	movf	btemp+1,w
  4123  00ED  0585               	andwf	5,f	;volatile
  4124                           
  4125                           ;SSD/SSD.c: 77:                         (PORTA&=~(1<<4));
  4126  00EE  30EF               	movlw	239
  4127  00EF  00FF               	movwf	btemp+1
  4128  00F0  087F               	movf	btemp+1,w
  4129  00F1  0585               	andwf	5,f	;volatile
  4130  00F2                     i1l2558:
  4131                           
  4132                           ;SSD/SSD.c: 78:                         SSD_Display(Digit4);
  4133  00F2  0829               	movf	_Digit4,w
  4134  00F3  120A  118A  2242  120A  118A  	fcall	_SSD_Display
  4135                           
  4136                           ;SSD/SSD.c: 79:                         break;
  4137  00F8  290F               	goto	i1l2564
  4138  00F9                     i1l2562:
  4139  00F9  0830               	movf	_DigitSelector,w
  4140  00FA  00F8               	movwf	??_SSD_DigitSelector
  4141  00FB  01F9               	clrf	??_SSD_DigitSelector+1
  4142                           
  4143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4144                           ; Switch size 1, requested type "simple"
  4145                           ; Number of cases is 1, Range of values is 0 to 0
  4146                           ; switch strategies available:
  4147                           ; Name         Instructions Cycles
  4148                           ; simple_byte            4     3 (average)
  4149                           ; direct_byte           11     8 (fixed)
  4150                           ; jumptable            260     6 (fixed)
  4151                           ;	Chosen strategy is simple_byte
  4152  00FC  0879               	movf	??_SSD_DigitSelector+1,w
  4153  00FD  3A00               	xorlw	0	; case 0
  4154  00FE  1903               	skipnz
  4155  00FF  2901               	goto	i1l2892
  4156  0100  290F               	goto	i1l2564
  4157  0101                     i1l2892:
  4158                           
  4159                           ; Switch size 1, requested type "simple"
  4160                           ; Number of cases is 4, Range of values is 0 to 3
  4161                           ; switch strategies available:
  4162                           ; Name         Instructions Cycles
  4163                           ; simple_byte           13     7 (average)
  4164                           ; direct_byte           20     8 (fixed)
  4165                           ; jumptable            260     6 (fixed)
  4166                           ;	Chosen strategy is simple_byte
  4167  0101  0878               	movf	??_SSD_DigitSelector,w
  4168  0102  3A00               	xorlw	0	; case 0
  4169  0103  1903               	skipnz
  4170  0104  2894               	goto	i1l2526
  4171  0105  3A01               	xorlw	1	; case 1
  4172  0106  1903               	skipnz
  4173  0107  28AD               	goto	i1l2534
  4174  0108  3A03               	xorlw	3	; case 2
  4175  0109  1903               	skipnz
  4176  010A  28C7               	goto	i1l2544
  4177  010B  3A01               	xorlw	1	; case 3
  4178  010C  1903               	skipnz
  4179  010D  28E0               	goto	i1l2552
  4180  010E  290F               	goto	i1l2564
  4181  010F                     i1l2564:
  4182                           
  4183                           ;SSD/SSD.c: 81:        DigitSelector=(DigitSelector+1)%4;
  4184  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0111  0830               	movf	_DigitSelector,w
  4187  0112  3E01               	addlw	1
  4188  0113  3903               	andlw	3
  4189  0114  00FF               	movwf	btemp+1
  4190  0115  087F               	movf	btemp+1,w
  4191  0116  00B0               	movwf	_DigitSelector
  4192  0117                     i1l369:
  4193  0117  0008               	return
  4194  0118                     __end_of_SSD_DigitSelector:
  4195                           
  4196                           	psect	text27
  4197  029F                     __ptext27:	
  4198 ;; *************** function ___awmod *****************
  4199 ;; Defined at:
  4200 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  divisor         2    0[COMMON] int 
  4203 ;;  dividend        2    2[COMMON] int 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  sign            1    5[COMMON] unsigned char 
  4206 ;;  counter         1    4[COMMON] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    0[COMMON] int 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, btemp+1
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         4       0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0
  4219 ;;      Totals:         6       0       0       0       0
  4220 ;;Total ram usage:        6 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_Buttons_Update
  4226 ;;		_SSD_DigitSelector
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           
  4231                           ;psect for function ___awmod
  4232  029F                     ___awmod:
  4233  029F                     i1l2452:	
  4234                           ;incstack = 0
  4235                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4236                           
  4237  029F  01F5               	clrf	___awmod@sign
  4238  02A0                     i1l2454:
  4239  02A0  1FF3               	btfss	___awmod@dividend+1,7
  4240  02A1  2AA3               	goto	u153_21
  4241  02A2  2AA4               	goto	u153_20
  4242  02A3                     u153_21:
  4243  02A3  2AAB               	goto	i1l2460
  4244  02A4                     u153_20:
  4245  02A4                     i1l2456:
  4246  02A4  09F2               	comf	___awmod@dividend,f
  4247  02A5  09F3               	comf	___awmod@dividend+1,f
  4248  02A6  0AF2               	incf	___awmod@dividend,f
  4249  02A7  1903               	skipnz
  4250  02A8  0AF3               	incf	___awmod@dividend+1,f
  4251  02A9                     i1l2458:
  4252  02A9  01F5               	clrf	___awmod@sign
  4253  02AA  0AF5               	incf	___awmod@sign,f
  4254  02AB                     i1l2460:
  4255  02AB  1FF1               	btfss	___awmod@divisor+1,7
  4256  02AC  2AAE               	goto	u154_21
  4257  02AD  2AAF               	goto	u154_20
  4258  02AE                     u154_21:
  4259  02AE  2AB4               	goto	i1l2464
  4260  02AF                     u154_20:
  4261  02AF                     i1l2462:
  4262  02AF  09F0               	comf	___awmod@divisor,f
  4263  02B0  09F1               	comf	___awmod@divisor+1,f
  4264  02B1  0AF0               	incf	___awmod@divisor,f
  4265  02B2  1903               	skipnz
  4266  02B3  0AF1               	incf	___awmod@divisor+1,f
  4267  02B4                     i1l2464:
  4268  02B4  0870               	movf	___awmod@divisor,w
  4269  02B5  0471               	iorwf	___awmod@divisor+1,w
  4270  02B6  1903               	btfsc	3,2
  4271  02B7  2AB9               	goto	u155_21
  4272  02B8  2ABA               	goto	u155_20
  4273  02B9                     u155_21:
  4274  02B9  2AE9               	goto	i1l2482
  4275  02BA                     u155_20:
  4276  02BA                     i1l2466:
  4277  02BA  01F4               	clrf	___awmod@counter
  4278  02BB  0AF4               	incf	___awmod@counter,f
  4279  02BC  2AC8               	goto	i1l2472
  4280  02BD                     i1l2468:
  4281  02BD  3001               	movlw	1
  4282  02BE                     u156_25:
  4283  02BE  1003               	clrc
  4284  02BF  0DF0               	rlf	___awmod@divisor,f
  4285  02C0  0DF1               	rlf	___awmod@divisor+1,f
  4286  02C1  3EFF               	addlw	-1
  4287  02C2  1D03               	skipz
  4288  02C3  2ABE               	goto	u156_25
  4289  02C4                     i1l2470:
  4290  02C4  3001               	movlw	1
  4291  02C5  00FF               	movwf	btemp+1
  4292  02C6  087F               	movf	btemp+1,w
  4293  02C7  07F4               	addwf	___awmod@counter,f
  4294  02C8                     i1l2472:
  4295  02C8  1FF1               	btfss	___awmod@divisor+1,7
  4296  02C9  2ACB               	goto	u157_21
  4297  02CA  2ACC               	goto	u157_20
  4298  02CB                     u157_21:
  4299  02CB  2ABD               	goto	i1l2468
  4300  02CC                     u157_20:
  4301  02CC                     i1l2474:
  4302  02CC  0871               	movf	___awmod@divisor+1,w
  4303  02CD  0273               	subwf	___awmod@dividend+1,w
  4304  02CE  1D03               	skipz
  4305  02CF  2AD2               	goto	u158_25
  4306  02D0  0870               	movf	___awmod@divisor,w
  4307  02D1  0272               	subwf	___awmod@dividend,w
  4308  02D2                     u158_25:
  4309  02D2  1C03               	skipc
  4310  02D3  2AD5               	goto	u158_21
  4311  02D4  2AD6               	goto	u158_20
  4312  02D5                     u158_21:
  4313  02D5  2ADC               	goto	i1l2478
  4314  02D6                     u158_20:
  4315  02D6                     i1l2476:
  4316  02D6  0870               	movf	___awmod@divisor,w
  4317  02D7  02F2               	subwf	___awmod@dividend,f
  4318  02D8  0871               	movf	___awmod@divisor+1,w
  4319  02D9  1C03               	skipc
  4320  02DA  03F3               	decf	___awmod@dividend+1,f
  4321  02DB  02F3               	subwf	___awmod@dividend+1,f
  4322  02DC                     i1l2478:
  4323  02DC  3001               	movlw	1
  4324  02DD                     u159_25:
  4325  02DD  1003               	clrc
  4326  02DE  0CF1               	rrf	___awmod@divisor+1,f
  4327  02DF  0CF0               	rrf	___awmod@divisor,f
  4328  02E0  3EFF               	addlw	-1
  4329  02E1  1D03               	skipz
  4330  02E2  2ADD               	goto	u159_25
  4331  02E3                     i1l2480:
  4332  02E3  3001               	movlw	1
  4333  02E4  02F4               	subwf	___awmod@counter,f
  4334  02E5  1D03               	btfss	3,2
  4335  02E6  2AE8               	goto	u160_21
  4336  02E7  2AE9               	goto	u160_20
  4337  02E8                     u160_21:
  4338  02E8  2ACC               	goto	i1l2474
  4339  02E9                     u160_20:
  4340  02E9                     i1l2482:
  4341  02E9  0875               	movf	___awmod@sign,w
  4342  02EA  1903               	btfsc	3,2
  4343  02EB  2AED               	goto	u161_21
  4344  02EC  2AEE               	goto	u161_20
  4345  02ED                     u161_21:
  4346  02ED  2AF3               	goto	i1l2486
  4347  02EE                     u161_20:
  4348  02EE                     i1l2484:
  4349  02EE  09F2               	comf	___awmod@dividend,f
  4350  02EF  09F3               	comf	___awmod@dividend+1,f
  4351  02F0  0AF2               	incf	___awmod@dividend,f
  4352  02F1  1903               	skipnz
  4353  02F2  0AF3               	incf	___awmod@dividend+1,f
  4354  02F3                     i1l2486:
  4355  02F3  0873               	movf	___awmod@dividend+1,w
  4356  02F4  00F1               	movwf	?___awmod+1
  4357  02F5  0872               	movf	___awmod@dividend,w
  4358  02F6  00F0               	movwf	?___awmod
  4359  02F7                     i1l636:
  4360  02F7  0008               	return
  4361  02F8                     __end_of___awmod:
  4362                           
  4363                           	psect	text28
  4364  0118                     __ptext28:	
  4365 ;; *************** function ___awdiv *****************
  4366 ;; Defined at:
  4367 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  divisor         2    0[COMMON] int 
  4370 ;;  dividend        2    2[COMMON] int 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  quotient        2    6[COMMON] int 
  4373 ;;  sign            1    5[COMMON] unsigned char 
  4374 ;;  counter         1    4[COMMON] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  2    0[COMMON] int 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0, btemp+1
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4384 ;;      Params:         4       0       0       0       0
  4385 ;;      Locals:         4       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0
  4387 ;;      Totals:         8       0       0       0       0
  4388 ;;Total ram usage:        8 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_SSD_DigitSelector
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function ___awdiv
  4399  0118                     ___awdiv:
  4400  0118                     i1l2408:	
  4401                           ;incstack = 0
  4402 ;; hardware stack exceeded
  4403                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4404                           
  4405  0118  01F5               	clrf	___awdiv@sign
  4406  0119                     i1l2410:
  4407  0119  1FF1               	btfss	___awdiv@divisor+1,7
  4408  011A  291C               	goto	u143_21
  4409  011B  291D               	goto	u143_20
  4410  011C                     u143_21:
  4411  011C  2924               	goto	i1l2416
  4412  011D                     u143_20:
  4413  011D                     i1l2412:
  4414  011D  09F0               	comf	___awdiv@divisor,f
  4415  011E  09F1               	comf	___awdiv@divisor+1,f
  4416  011F  0AF0               	incf	___awdiv@divisor,f
  4417  0120  1903               	skipnz
  4418  0121  0AF1               	incf	___awdiv@divisor+1,f
  4419  0122                     i1l2414:
  4420  0122  01F5               	clrf	___awdiv@sign
  4421  0123  0AF5               	incf	___awdiv@sign,f
  4422  0124                     i1l2416:
  4423  0124  1FF3               	btfss	___awdiv@dividend+1,7
  4424  0125  2927               	goto	u144_21
  4425  0126  2928               	goto	u144_20
  4426  0127                     u144_21:
  4427  0127  2931               	goto	i1l2422
  4428  0128                     u144_20:
  4429  0128                     i1l2418:
  4430  0128  09F2               	comf	___awdiv@dividend,f
  4431  0129  09F3               	comf	___awdiv@dividend+1,f
  4432  012A  0AF2               	incf	___awdiv@dividend,f
  4433  012B  1903               	skipnz
  4434  012C  0AF3               	incf	___awdiv@dividend+1,f
  4435  012D                     i1l2420:
  4436  012D  3001               	movlw	1
  4437  012E  00FF               	movwf	btemp+1
  4438  012F  087F               	movf	btemp+1,w
  4439  0130  06F5               	xorwf	___awdiv@sign,f
  4440  0131                     i1l2422:
  4441  0131  01F6               	clrf	___awdiv@quotient
  4442  0132  01F7               	clrf	___awdiv@quotient+1
  4443  0133                     i1l2424:
  4444  0133  0870               	movf	___awdiv@divisor,w
  4445  0134  0471               	iorwf	___awdiv@divisor+1,w
  4446  0135  1903               	btfsc	3,2
  4447  0136  2938               	goto	u145_21
  4448  0137  2939               	goto	u145_20
  4449  0138                     u145_21:
  4450  0138  2970               	goto	i1l2444
  4451  0139                     u145_20:
  4452  0139                     i1l2426:
  4453  0139  01F4               	clrf	___awdiv@counter
  4454  013A  0AF4               	incf	___awdiv@counter,f
  4455  013B  2947               	goto	i1l2432
  4456  013C                     i1l2428:
  4457  013C  3001               	movlw	1
  4458  013D                     u146_25:
  4459  013D  1003               	clrc
  4460  013E  0DF0               	rlf	___awdiv@divisor,f
  4461  013F  0DF1               	rlf	___awdiv@divisor+1,f
  4462  0140  3EFF               	addlw	-1
  4463  0141  1D03               	skipz
  4464  0142  293D               	goto	u146_25
  4465  0143                     i1l2430:
  4466  0143  3001               	movlw	1
  4467  0144  00FF               	movwf	btemp+1
  4468  0145  087F               	movf	btemp+1,w
  4469  0146  07F4               	addwf	___awdiv@counter,f
  4470  0147                     i1l2432:
  4471  0147  1FF1               	btfss	___awdiv@divisor+1,7
  4472  0148  294A               	goto	u147_21
  4473  0149  294B               	goto	u147_20
  4474  014A                     u147_21:
  4475  014A  293C               	goto	i1l2428
  4476  014B                     u147_20:
  4477  014B                     i1l2434:
  4478  014B  3001               	movlw	1
  4479  014C                     u148_25:
  4480  014C  1003               	clrc
  4481  014D  0DF6               	rlf	___awdiv@quotient,f
  4482  014E  0DF7               	rlf	___awdiv@quotient+1,f
  4483  014F  3EFF               	addlw	-1
  4484  0150  1D03               	skipz
  4485  0151  294C               	goto	u148_25
  4486  0152  0871               	movf	___awdiv@divisor+1,w
  4487  0153  0273               	subwf	___awdiv@dividend+1,w
  4488  0154  1D03               	skipz
  4489  0155  2958               	goto	u149_25
  4490  0156  0870               	movf	___awdiv@divisor,w
  4491  0157  0272               	subwf	___awdiv@dividend,w
  4492  0158                     u149_25:
  4493  0158  1C03               	skipc
  4494  0159  295B               	goto	u149_21
  4495  015A  295C               	goto	u149_20
  4496  015B                     u149_21:
  4497  015B  2963               	goto	i1l2440
  4498  015C                     u149_20:
  4499  015C                     i1l2436:
  4500  015C  0870               	movf	___awdiv@divisor,w
  4501  015D  02F2               	subwf	___awdiv@dividend,f
  4502  015E  0871               	movf	___awdiv@divisor+1,w
  4503  015F  1C03               	skipc
  4504  0160  03F3               	decf	___awdiv@dividend+1,f
  4505  0161  02F3               	subwf	___awdiv@dividend+1,f
  4506  0162                     i1l2438:
  4507  0162  1476               	bsf	___awdiv@quotient,0
  4508  0163                     i1l2440:
  4509  0163  3001               	movlw	1
  4510  0164                     u150_25:
  4511  0164  1003               	clrc
  4512  0165  0CF1               	rrf	___awdiv@divisor+1,f
  4513  0166  0CF0               	rrf	___awdiv@divisor,f
  4514  0167  3EFF               	addlw	-1
  4515  0168  1D03               	skipz
  4516  0169  2964               	goto	u150_25
  4517  016A                     i1l2442:
  4518  016A  3001               	movlw	1
  4519  016B  02F4               	subwf	___awdiv@counter,f
  4520  016C  1D03               	btfss	3,2
  4521  016D  296F               	goto	u151_21
  4522  016E  2970               	goto	u151_20
  4523  016F                     u151_21:
  4524  016F  294B               	goto	i1l2434
  4525  0170                     u151_20:
  4526  0170                     i1l2444:
  4527  0170  0875               	movf	___awdiv@sign,w
  4528  0171  1903               	btfsc	3,2
  4529  0172  2974               	goto	u152_21
  4530  0173  2975               	goto	u152_20
  4531  0174                     u152_21:
  4532  0174  297A               	goto	i1l2448
  4533  0175                     u152_20:
  4534  0175                     i1l2446:
  4535  0175  09F6               	comf	___awdiv@quotient,f
  4536  0176  09F7               	comf	___awdiv@quotient+1,f
  4537  0177  0AF6               	incf	___awdiv@quotient,f
  4538  0178  1903               	skipnz
  4539  0179  0AF7               	incf	___awdiv@quotient+1,f
  4540  017A                     i1l2448:
  4541  017A  0877               	movf	___awdiv@quotient+1,w
  4542  017B  00F1               	movwf	?___awdiv+1
  4543  017C  0876               	movf	___awdiv@quotient,w
  4544  017D  00F0               	movwf	?___awdiv
  4545  017E                     i1l623:
  4546  017E  0008               	return
  4547  017F                     __end_of___awdiv:
  4548                           
  4549                           	psect	text29
  4550  0242                     __ptext29:	
  4551 ;; *************** function _SSD_Display *****************
  4552 ;; Defined at:
  4553 ;;		line 90 in file "SSD/SSD.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  Number          1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  Number          1    2[COMMON] unsigned char 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4567 ;;      Params:         0       0       0       0       0
  4568 ;;      Locals:         1       0       0       0       0
  4569 ;;      Temps:          2       0       0       0       0
  4570 ;;      Totals:         3       0       0       0       0
  4571 ;;Total ram usage:        3 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_SSD_DigitSelector
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _SSD_Display
  4582  0242                     _SSD_Display:
  4583                           
  4584                           ;incstack = 0
  4585 ;; hardware stack exceeded
  4586                           ; Regs used in _SSD_Display: [wreg-fsr0h+status,2+status,0]
  4587                           ;SSD_Display@Number stored from wreg
  4588  0242  00F2               	movwf	SSD_Display@Number
  4589  0243                     i1l2364:
  4590                           
  4591                           ;SSD/SSD.c: 90: void SSD_Display(uint8_t Number);SSD/SSD.c: 91: {;SSD/SSD.c: 93:    swit
      +                          ch(Number)
  4592  0243  2A76               	goto	i1l2388
  4593  0244                     i1l2366:
  4594                           
  4595                           ;SSD/SSD.c: 96:         PORTD=0b0111111;
  4596  0244  303F               	movlw	63
  4597  0245  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0246  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0247  0088               	movwf	8	;volatile
  4600                           
  4601                           ;SSD/SSD.c: 97:         break;
  4602  0248  2A9E               	goto	i1l384
  4603  0249                     i1l2368:
  4604                           
  4605                           ;SSD/SSD.c: 100:         PORTD=0b0000110;
  4606  0249  3006               	movlw	6
  4607  024A  1283               	bcf	3,5	;RP0=0, select bank0
  4608  024B  1303               	bcf	3,6	;RP1=0, select bank0
  4609  024C  0088               	movwf	8	;volatile
  4610                           
  4611                           ;SSD/SSD.c: 101:         break;
  4612  024D  2A9E               	goto	i1l384
  4613  024E                     i1l2370:
  4614                           
  4615                           ;SSD/SSD.c: 104:         PORTD=0b1011011;
  4616  024E  305B               	movlw	91
  4617  024F  1283               	bcf	3,5	;RP0=0, select bank0
  4618  0250  1303               	bcf	3,6	;RP1=0, select bank0
  4619  0251  0088               	movwf	8	;volatile
  4620                           
  4621                           ;SSD/SSD.c: 105:         break;
  4622  0252  2A9E               	goto	i1l384
  4623  0253                     i1l2372:
  4624                           
  4625                           ;SSD/SSD.c: 108:         PORTD=0b1001111;
  4626  0253  304F               	movlw	79
  4627  0254  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0255  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0256  0088               	movwf	8	;volatile
  4630                           
  4631                           ;SSD/SSD.c: 109:         break;
  4632  0257  2A9E               	goto	i1l384
  4633  0258                     i1l2374:
  4634                           
  4635                           ;SSD/SSD.c: 112:         PORTD=0b1100110;
  4636  0258  3066               	movlw	102
  4637  0259  1283               	bcf	3,5	;RP0=0, select bank0
  4638  025A  1303               	bcf	3,6	;RP1=0, select bank0
  4639  025B  0088               	movwf	8	;volatile
  4640                           
  4641                           ;SSD/SSD.c: 113:         break;
  4642  025C  2A9E               	goto	i1l384
  4643  025D                     i1l2376:
  4644                           
  4645                           ;SSD/SSD.c: 116:         PORTD=0b1101101;
  4646  025D  306D               	movlw	109
  4647  025E  1283               	bcf	3,5	;RP0=0, select bank0
  4648  025F  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0260  0088               	movwf	8	;volatile
  4650                           
  4651                           ;SSD/SSD.c: 117:         break;
  4652  0261  2A9E               	goto	i1l384
  4653  0262                     i1l2378:
  4654                           
  4655                           ;SSD/SSD.c: 120:         PORTD=0b1111101;
  4656  0262  307D               	movlw	125
  4657  0263  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0264  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0265  0088               	movwf	8	;volatile
  4660                           
  4661                           ;SSD/SSD.c: 121:         break;
  4662  0266  2A9E               	goto	i1l384
  4663  0267                     i1l2380:
  4664                           
  4665                           ;SSD/SSD.c: 124:         PORTD=0b0000111;
  4666  0267  3007               	movlw	7
  4667  0268  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0269  1303               	bcf	3,6	;RP1=0, select bank0
  4669  026A  0088               	movwf	8	;volatile
  4670                           
  4671                           ;SSD/SSD.c: 125:         break;
  4672  026B  2A9E               	goto	i1l384
  4673  026C                     i1l2382:
  4674                           
  4675                           ;SSD/SSD.c: 128:         PORTD=0b1111111;
  4676  026C  307F               	movlw	127
  4677  026D  1283               	bcf	3,5	;RP0=0, select bank0
  4678  026E  1303               	bcf	3,6	;RP1=0, select bank0
  4679  026F  0088               	movwf	8	;volatile
  4680                           
  4681                           ;SSD/SSD.c: 129:         break;
  4682  0270  2A9E               	goto	i1l384
  4683  0271                     i1l2384:
  4684                           
  4685                           ;SSD/SSD.c: 132:         PORTD=0b1101111;
  4686  0271  306F               	movlw	111
  4687  0272  1283               	bcf	3,5	;RP0=0, select bank0
  4688  0273  1303               	bcf	3,6	;RP1=0, select bank0
  4689  0274  0088               	movwf	8	;volatile
  4690                           
  4691                           ;SSD/SSD.c: 133:         break;
  4692  0275  2A9E               	goto	i1l384
  4693  0276                     i1l2388:
  4694  0276  0872               	movf	SSD_Display@Number,w
  4695  0277  00F0               	movwf	??_SSD_Display
  4696  0278  01F1               	clrf	??_SSD_Display+1
  4697                           
  4698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4699                           ; Switch size 1, requested type "simple"
  4700                           ; Number of cases is 1, Range of values is 0 to 0
  4701                           ; switch strategies available:
  4702                           ; Name         Instructions Cycles
  4703                           ; simple_byte            4     3 (average)
  4704                           ; direct_byte           11     8 (fixed)
  4705                           ; jumptable            260     6 (fixed)
  4706                           ;	Chosen strategy is simple_byte
  4707  0279  0871               	movf	??_SSD_Display+1,w
  4708  027A  3A00               	xorlw	0	; case 0
  4709  027B  1903               	skipnz
  4710  027C  2A7E               	goto	i1l2894
  4711  027D  2A9E               	goto	i1l384
  4712  027E                     i1l2894:
  4713                           
  4714                           ; Switch size 1, requested type "simple"
  4715                           ; Number of cases is 10, Range of values is 0 to 9
  4716                           ; switch strategies available:
  4717                           ; Name         Instructions Cycles
  4718                           ; simple_byte           31    16 (average)
  4719                           ; direct_byte           38     8 (fixed)
  4720                           ; jumptable            260     6 (fixed)
  4721                           ;	Chosen strategy is simple_byte
  4722  027E  0870               	movf	??_SSD_Display,w
  4723  027F  3A00               	xorlw	0	; case 0
  4724  0280  1903               	skipnz
  4725  0281  2A44               	goto	i1l2366
  4726  0282  3A01               	xorlw	1	; case 1
  4727  0283  1903               	skipnz
  4728  0284  2A49               	goto	i1l2368
  4729  0285  3A03               	xorlw	3	; case 2
  4730  0286  1903               	skipnz
  4731  0287  2A4E               	goto	i1l2370
  4732  0288  3A01               	xorlw	1	; case 3
  4733  0289  1903               	skipnz
  4734  028A  2A53               	goto	i1l2372
  4735  028B  3A07               	xorlw	7	; case 4
  4736  028C  1903               	skipnz
  4737  028D  2A58               	goto	i1l2374
  4738  028E  3A01               	xorlw	1	; case 5
  4739  028F  1903               	skipnz
  4740  0290  2A5D               	goto	i1l2376
  4741  0291  3A03               	xorlw	3	; case 6
  4742  0292  1903               	skipnz
  4743  0293  2A62               	goto	i1l2378
  4744  0294  3A01               	xorlw	1	; case 7
  4745  0295  1903               	skipnz
  4746  0296  2A67               	goto	i1l2380
  4747  0297  3A0F               	xorlw	15	; case 8
  4748  0298  1903               	skipnz
  4749  0299  2A6C               	goto	i1l2382
  4750  029A  3A01               	xorlw	1	; case 9
  4751  029B  1903               	skipnz
  4752  029C  2A71               	goto	i1l2384
  4753  029D  2A9E               	goto	i1l384
  4754  029E                     i1l384:
  4755  029E  0008               	return
  4756  029F                     __end_of_SSD_Display:
  4757                           
  4758                           	psect	text30
  4759  064E                     __ptext30:	
  4760 ;; *************** function _Display_Normal *****************
  4761 ;; Defined at:
  4762 ;;		line 97 in file "Display/Display.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		None
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4776 ;;      Params:         0       0       0       0       0
  4777 ;;      Locals:         0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0
  4779 ;;      Totals:         0       0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_Display_Update
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           
  4790                           ;psect for function _Display_Normal
  4791  064E                     _Display_Normal:
  4792  064E                     i1l2490:	
  4793                           ;incstack = 0
  4794                           ; Regs used in _Display_Normal: []
  4795                           
  4796                           
  4797                           ;Display/Display.c: 99:   Enable_Minutes=1;
  4798  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4799  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4800  0650  01AF               	clrf	_Enable_Minutes
  4801  0651  0AAF               	incf	_Enable_Minutes,f
  4802                           
  4803                           ;Display/Display.c: 100:   Enable_Hours=1;
  4804  0652  01AE               	clrf	_Enable_Hours
  4805  0653  0AAE               	incf	_Enable_Hours,f
  4806  0654                     i1l202:
  4807  0654  0008               	return
  4808  0655                     __end_of_Display_Normal:
  4809                           
  4810                           	psect	text31
  4811  034C                     __ptext31:	
  4812 ;; *************** function _Display_Blink *****************
  4813 ;; Defined at:
  4814 ;;		line 56 in file "Display/Display.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  Times_Ms        2    0[COMMON] unsigned int 
  4817 ;;  _MODE_          1    2[COMMON] enum E879
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0, btemp+1
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4829 ;;      Params:         3       0       0       0       0
  4830 ;;      Locals:         0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0
  4832 ;;      Totals:         3       0       0       0       0
  4833 ;;Total ram usage:        3 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_Display_Update
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           
  4843                           ;psect for function _Display_Blink
  4844  034C                     _Display_Blink:
  4845  034C                     i1l2492:	
  4846                           ;incstack = 0
  4847                           ; Regs used in _Display_Blink: [wreg+status,2+status,0+btemp+1]
  4848                           
  4849                           
  4850                           ;Display/Display.c: 56: void Display_Blink(uint16_t Times_Ms,MODE_t _MODE_);Display/Disp
      +                          lay.c: 57: {;Display/Display.c: 58:     static uint16_t Counter=0;;Display/Display.c: 60
      +                          :         if(Counter*1==Times_Ms)
  4851  034C  0871               	movf	Display_Blink@Times_Ms+1,w
  4852  034D  1283               	bcf	3,5	;RP0=0, select bank0
  4853  034E  1303               	bcf	3,6	;RP1=0, select bank0
  4854  034F  0628               	xorwf	Display_Blink@Counter+1,w
  4855  0350  1D03               	skipz
  4856  0351  2B54               	goto	u162_25
  4857  0352  0870               	movf	Display_Blink@Times_Ms,w
  4858  0353  0627               	xorwf	Display_Blink@Counter,w
  4859  0354                     u162_25:
  4860  0354  1D03               	skipz
  4861  0355  2B57               	goto	u162_21
  4862  0356  2B58               	goto	u162_20
  4863  0357                     u162_21:
  4864  0357  2B93               	goto	i1l190
  4865  0358                     u162_20:
  4866  0358                     i1l2494:
  4867                           
  4868                           ;Display/Display.c: 61:         {;Display/Display.c: 62:             if(_MODE_==Minutes_
      +                          Mode)
  4869  0358  3002               	movlw	2
  4870  0359  0672               	xorwf	Display_Blink@_MODE_,w
  4871  035A  1D03               	btfss	3,2
  4872  035B  2B5D               	goto	u163_21
  4873  035C  2B5E               	goto	u163_20
  4874  035D                     u163_21:
  4875  035D  2B74               	goto	i1l2508
  4876  035E                     u163_20:
  4877  035E                     i1l2496:
  4878                           
  4879                           ;Display/Display.c: 63:             {;Display/Display.c: 64:                 if(Enable_M
      +                          inutes==1)
  4880  035E  032F               	decf	_Enable_Minutes,w
  4881  035F  1D03               	btfss	3,2
  4882  0360  2B62               	goto	u164_21
  4883  0361  2B63               	goto	u164_20
  4884  0362                     u164_21:
  4885  0362  2B6D               	goto	i1l2504
  4886  0363                     u164_20:
  4887  0363                     i1l2498:
  4888                           
  4889                           ;Display/Display.c: 65:                 {;Display/Display.c: 66:                    Enab
      +                          le_Minutes=0;
  4890  0363  01AF               	clrf	_Enable_Minutes
  4891  0364                     i1l2500:
  4892                           
  4893                           ;Display/Display.c: 67:                    (PORTA&=~(1<<4)) ;
  4894  0364  30EF               	movlw	239
  4895  0365  00FF               	movwf	btemp+1
  4896  0366  087F               	movf	btemp+1,w
  4897  0367  0585               	andwf	5,f	;volatile
  4898  0368                     i1l2502:
  4899                           
  4900                           ;Display/Display.c: 68:                     (PORTA&=~(1<<5)) ;
  4901  0368  30DF               	movlw	223
  4902  0369  00FF               	movwf	btemp+1
  4903  036A  087F               	movf	btemp+1,w
  4904  036B  0585               	andwf	5,f	;volatile
  4905                           
  4906                           ;Display/Display.c: 69:                 }
  4907  036C  2B74               	goto	i1l2508
  4908  036D                     i1l2504:
  4909  036D  082F               	movf	_Enable_Minutes,w
  4910  036E  1D03               	btfss	3,2
  4911  036F  2B71               	goto	u165_21
  4912  0370  2B72               	goto	u165_20
  4913  0371                     u165_21:
  4914  0371  2B74               	goto	i1l2508
  4915  0372                     u165_20:
  4916  0372                     i1l2506:
  4917                           
  4918                           ;Display/Display.c: 71:                 {;Display/Display.c: 72:                    Enab
      +                          le_Minutes=1;
  4919  0372  01AF               	clrf	_Enable_Minutes
  4920  0373  0AAF               	incf	_Enable_Minutes,f
  4921  0374                     i1l2508:
  4922                           
  4923                           ;Display/Display.c: 76:             if(_MODE_==Hours_Mode)
  4924  0374  0372               	decf	Display_Blink@_MODE_,w
  4925  0375  1D03               	btfss	3,2
  4926  0376  2B78               	goto	u166_21
  4927  0377  2B79               	goto	u166_20
  4928  0378                     u166_21:
  4929  0378  2B8F               	goto	i1l2522
  4930  0379                     u166_20:
  4931  0379                     i1l2510:
  4932                           
  4933                           ;Display/Display.c: 77:             {;Display/Display.c: 78:                 if(Enable_H
      +                          ours==1)
  4934  0379  032E               	decf	_Enable_Hours,w
  4935  037A  1D03               	btfss	3,2
  4936  037B  2B7D               	goto	u167_21
  4937  037C  2B7E               	goto	u167_20
  4938  037D                     u167_21:
  4939  037D  2B88               	goto	i1l2518
  4940  037E                     u167_20:
  4941  037E                     i1l2512:
  4942                           
  4943                           ;Display/Display.c: 79:                 {;Display/Display.c: 80:                    Enab
      +                          le_Hours=0;
  4944  037E  01AE               	clrf	_Enable_Hours
  4945  037F                     i1l2514:
  4946                           
  4947                           ;Display/Display.c: 81:                    (PORTA&=~(1<<2)) ;
  4948  037F  30FB               	movlw	251
  4949  0380  00FF               	movwf	btemp+1
  4950  0381  087F               	movf	btemp+1,w
  4951  0382  0585               	andwf	5,f	;volatile
  4952  0383                     i1l2516:
  4953                           
  4954                           ;Display/Display.c: 82:                     (PORTA&=~(1<<3)) ;
  4955  0383  30F7               	movlw	247
  4956  0384  00FF               	movwf	btemp+1
  4957  0385  087F               	movf	btemp+1,w
  4958  0386  0585               	andwf	5,f	;volatile
  4959                           
  4960                           ;Display/Display.c: 83:                 }
  4961  0387  2B8F               	goto	i1l2522
  4962  0388                     i1l2518:
  4963  0388  082E               	movf	_Enable_Hours,w
  4964  0389  1D03               	btfss	3,2
  4965  038A  2B8C               	goto	u168_21
  4966  038B  2B8D               	goto	u168_20
  4967  038C                     u168_21:
  4968  038C  2B8F               	goto	i1l2522
  4969  038D                     u168_20:
  4970  038D                     i1l2520:
  4971                           
  4972                           ;Display/Display.c: 85:                 {;Display/Display.c: 86:                    Enab
      +                          le_Hours=1;
  4973  038D  01AE               	clrf	_Enable_Hours
  4974  038E  0AAE               	incf	_Enable_Hours,f
  4975  038F                     i1l2522:
  4976                           
  4977                           ;Display/Display.c: 91:             Counter=1;
  4978  038F  3001               	movlw	1
  4979  0390  00A7               	movwf	Display_Blink@Counter
  4980  0391  3000               	movlw	0
  4981  0392  00A8               	movwf	Display_Blink@Counter+1
  4982  0393                     i1l190:	
  4983                           ;Display/Display.c: 92:         }
  4984                           
  4985                           
  4986                           ;Display/Display.c: 93:         Counter++;
  4987  0393  3001               	movlw	1
  4988  0394  07A7               	addwf	Display_Blink@Counter,f
  4989  0395  1803               	skipnc
  4990  0396  0AA8               	incf	Display_Blink@Counter+1,f
  4991  0397  3000               	movlw	0
  4992  0398  07A8               	addwf	Display_Blink@Counter+1,f
  4993  0399                     i1l199:
  4994  0399  0008               	return
  4995  039A                     __end_of_Display_Blink:
  4996                           
  4997                           	psect	text32
  4998  066D                     __ptext32:	
  4999 ;; *************** function _EXTI_SettingButton_CB *****************
  5000 ;; Defined at:
  5001 ;;		line 50 in file "Buttons/Buttons.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;		None
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		None
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5015 ;;      Params:         0       0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0
  5018 ;;      Totals:         0       0       0       0       0
  5019 ;;Total ram usage:        0 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_ISR
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function _EXTI_SettingButton_CB
  5030  066D                     _EXTI_SettingButton_CB:
  5031  066D                     i1l1450:	
  5032                           ;incstack = 0
  5033                           ; Regs used in _EXTI_SettingButton_CB: []
  5034                           
  5035                           
  5036                           ;Buttons/Buttons.c: 52:     ButtonsFlag.SettingButton_Flag=1;
  5037  066D  157D               	bsf	_ButtonsFlag,2
  5038  066E                     i1l99:
  5039  066E  0008               	return
  5040  066F                     __end_of_EXTI_SettingButton_CB:
  5041  000A                     
  5042                           	psect	functab
  5043  0023                     __pfunctab:
  5044  0023                     fptable:
  5045  0023  2823               	goto	fptable	;no entries
  5046  0024                     __i1fptable:
  5047  0024                     i1fptable:
  5048  0024  00FF               	movwf	(btemp+1)& (0+127)
  5049  0025  3000               	movlw	high i1fptable
  5050  0026  008A               	movwf	10
  5051  0027  087F               	movf	(btemp+1)& (0+127),w
  5052  0028  0782               	addwf	2,f
  5053  0029                     i1fpbase:
  5054  0029  2829               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  5055  002A                     fp__EXTI_SettingButton_CB:
  5056  002A  120A  118A  2E6D   	ljmp	_EXTI_SettingButton_CB
  5057  002D                     fp__Scheduler_Task3:
  5058  002D  120A  118A  2E61   	ljmp	_Scheduler_Task3
  5059  0030                     fp__Scheduler_Task1:
  5060  0030  120A  118A  2E5B   	ljmp	_Scheduler_Task1
  5061  0033                     fp__Scheduler_Task2:
  5062  0033  120A  118A  2E3B   	ljmp	_Scheduler_Task2
  5063  0036                     fp__Timer0_CB:
  5064  0036  120A  118A  2DE1   	ljmp	_Timer0_CB
  5065  0039                     __end_of__i1fptable:
  5066  007E                     btemp	set	126	;btemp
  5067  007E                     wtemp0	set	126
  5068                           
  5069                           	psect	config
  5070                           
  5071                           ;Config register CONFIG @ 0x2007
  5072                           ;	Oscillator Selection bits
  5073                           ;	FOSC = HS, HS oscillator
  5074                           ;	Watchdog Timer Enable bit
  5075                           ;	WDTE = OFF, WDT disabled
  5076                           ;	Power-up Timer Enable bit
  5077                           ;	PWRTE = OFF, PWRT disabled
  5078                           ;	Brown-out Reset Enable bit
  5079                           ;	BOREN = OFF, BOR disabled
  5080                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5081                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5082                           ;	Data EEPROM Memory Code Protection bit
  5083                           ;	CPD = OFF, Data EEPROM code protection off
  5084                           ;	Flash Program Memory Write Enable bits
  5085                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5086                           ;	In-Circuit Debugger Mode bit
  5087                           ;	DEBUG = 0x1, unprogrammed default
  5088                           ;	Flash Program Memory Code Protection bit
  5089                           ;	CP = OFF, Code protection off
  5090  2007                     	org	8199
  5091  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     17      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Scheduler_Update$1062	const PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    memset@p1	PTR void  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 

    memset@p	PTR unsigned char  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 

    S333Interrupt_CbStruct_T$EXTI_CB	PTR FTN()void  size(1) Largest target is 1
		 -> EXTI_SettingButton_CB(), 

    Interrupt_CbStruct.EXTI_CB	PTR FTN()void  size(1) Largest target is 1
		 -> EXTI_SettingButton_CB(), 

    S333Interrupt_CbStruct_T$Timer_CB	PTR FTN()void  size(1) Largest target is 1
		 -> Timer0_CB(), 

    Interrupt_CbStruct.Timer_CB	PTR FTN()void  size(1) Largest target is 1
		 -> Timer0_CB(), 

    S94Tasks_T$Task	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    Tasks.Task	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    sp__memset	PTR void  size(1) Largest target is 3
		 -> Debounce_DownButton(BANK0[3]), Debounce_UpButton(BANK0[3]), Task_Flag(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _Scheduler_Update->___llmod
    ___llmod->___bmul
    _Scheduler_Task3->_Clock_Update
    _Clock_Update->_Clock_Normal
    _Clock_Normal->___wmul
    _Buttons_Update->___awmod
    _Scheduler_Task1->_Display_Update
    _Display_Update->_SSD_DigitSelector
    _SSD_DigitSelector->___awdiv

Critical Paths under _main in BANK0

    _Scheduler_Init->_memset
    _Buttons_Init->_memset

Critical Paths under _ISR in BANK0

    _Timer0_CB->_Scheduler_Update

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1870
                       _Buttons_Init
                         _Clock_Init
                       _Display_Init
                          _GPIO_Init
                   _ModeManager_Init
                     _Scheduler_Init
                         _Timer_Init
                        _Timer_Start
 ---------------------------------------------------------------------------------
 (1) _Timer_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Scheduler_Init                                       0     0      0     935
                             _memset
 ---------------------------------------------------------------------------------
 (1) _ModeManager_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buttons_Init                                         0     0      0     935
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     935
                                             11 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0    4174
                                              7 BANK0      4     4      0
              _EXTI_SettingButton_CB *
                          _Timer0_CB *
 ---------------------------------------------------------------------------------
 (4) _Timer0_CB                                            0     0      0    4174
                   _Scheduler_Update
 ---------------------------------------------------------------------------------
 (5) _Scheduler_Update                                     7     7      0    4174
                                              0 BANK0      7     7      0
                    _Scheduler_Task1 *
                    _Scheduler_Task2 *
                    _Scheduler_Task3 *
                             ___bmul
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8      13
                                              3 COMMON    10     2      8
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     210
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task3                                      0     0      0     536
                       _Clock_Update
 ---------------------------------------------------------------------------------
 (7) _Clock_Update                                         2     2      0     536
                                              8 COMMON     2     2      0
                 _Clock_Hour_Setting
              _Clock_Minutes_Setting
                       _Clock_Normal
 ---------------------------------------------------------------------------------
 (8) _Clock_Normal                                         2     2      0     536
                                              6 COMMON     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     536
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) _Clock_Minutes_Setting                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Clock_Hour_Setting                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task2                                      0     0      0     973
                     _Buttons_Update
                 _ModeManager_Update
 ---------------------------------------------------------------------------------
 (7) _ModeManager_Update                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Buttons_Update                                       0     0      0     973
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _Scheduler_Task1                                      0     0      0    2262
                     _Display_Update
 ---------------------------------------------------------------------------------
 (7) _Display_Update                                       2     2      0    2262
                                             10 COMMON     2     2      0
                      _Display_Blink
                     _Display_Normal
                  _SSD_DigitSelector
 ---------------------------------------------------------------------------------
 (8) _SSD_DigitSelector                                    2     2      0    1809
                                              8 COMMON     2     2      0
                        _SSD_Display
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     973
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     805
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _SSD_Display                                          3     3      0      31
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _Display_Normal                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Display_Blink                                        3     0      3     453
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (4) _EXTI_SettingButton_CB                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_Init
     _memset
   _Clock_Init
   _Display_Init
   _GPIO_Init
   _ModeManager_Init
   _Scheduler_Init
     _memset
   _Timer_Init
   _Timer_Start

 _ISR (ROOT)
   _EXTI_SettingButton_CB *
   _Timer0_CB *
     _Scheduler_Update
       _Scheduler_Task1 *
         _Display_Update
           _Display_Blink
           _Display_Normal
           _SSD_DigitSelector
             _SSD_Display
             ___awdiv
             ___awmod
       _Scheduler_Task2 *
         _Buttons_Update
           ___awmod
         _ModeManager_Update
       _Scheduler_Task3 *
         _Clock_Update
           _Clock_Hour_Setting
           _Clock_Minutes_Setting
           _Clock_Normal
             ___wmul
       ___bmul *
       ___llmod *
         ___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 22 05:50:17 2020

                             pc 0002                  ___bmul@product 0071                              l30 04E3  
                            l43 062C                              l29 04E3                              l64 063A  
                            l67 066C                              l89 0535                    ___awdiv@sign 0075  
                            fsr 0004             ___wmul@multiplicand 0072                             l113 0584  
                           l117 0585                             l109 0581                             l152 05A3  
                           l219 066A                             l177 05E0                             l293 065A  
                           l924 05C5                             _ISR 045A                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0075                            ?_ISR 0070  
                          l2000 0586                            l2010 059A                            l2002 058A  
                          l2020 05CC                            l2004 058E                            l2022 0655  
                          l2014 059B                            l2006 0592                            l2200 05A7  
                          l2016 059F                            l2008 0596                            l2024 0667  
                          l2040 0639                            l2202 05AC                            l2018 05C6  
                          l2034 062D                            l2204 05B3                            l2036 0634  
                          l2044 066B                            l2206 05B7                            l2222 0510  
                          l2230 061D                            l2038 0638                            l2224 0530  
                          l2240 04CA                            l2226 0533                            l2242 04CF  
                          l2228 0534                            l2244 04D4                            l2236 04BB  
                          l2246 04D9                            l2238 04C5          ?_Clock_Minutes_Setting 0070  
                          l2248 04DE                            l1992 0581                            u1340 05C5  
                          u1341 05C4                            _MODE 0033                            i1l70 05F6  
                          i1l49 01E3                            i1l96 0241                            i1l99 066E  
                          _TMR0 0001                            _Tick 0020                            _main 04BB  
                          btemp 007E                            start 0012              __size_of_GPIO_Init 0023  
             ___bmul@multiplier 0072                ??_Scheduler_Init 004E                           ??_ISR 0044  
                    _Clock_Init 0655            __end_of_Clock_Normal 03E0            __end_of_Clock_Update 0510  
                         ?_main 0070                 __end_of___awdiv 017F                 __end_of___awmod 02F8  
               ___awdiv@divisor 0070                 __end_of___llmod 034C                           i1l202 0654  
                         i1l301 050F                           i1l310 03DF                           i1l224 053B  
                         i1l320 04BA                           i1l225 055A                           i1l313 04A3  
                         i1l330 0459                           i1l323 0440                           i1l228 055B  
                         i1l245 047E                           i1l190 0393                           i1l272 0660  
                         i1l185 0423                           i1l275 0645                           i1l470 0568  
                         i1l278 0666                           i1l199 0399                           i1l623 017E  
                         i1l384 029E                           i1l472 0580                           i1l369 0117  
                         i1l636 02F7                           i1l496 060B                           i1l692 034B  
               ___awdiv@counter 0074                           _PORTA 0005                           _PORTB 0006  
                         _PORTD 0008                           _TRISA 0085                           _TRISB 0086  
                         _TRISD 0088                           _Clock 0024                _ModeManager_Init 0667  
                         _Tasks 0612      __end_of_ModeManager_Update 055C                           fpbase 0000  
         Display_Blink@Times_Ms 0070                   ?_Buttons_Init 0070                           pclath 000A  
                         status 0003                           wtemp0 007E         __size_of_Buttons_Update 005E  
               __initialization 0015               ??_Scheduler_Task1 007C               ??_Scheduler_Task2 0076  
             ??_Scheduler_Task3 007A                    __end_of_main 04E7  Buttons_Update@Debounce_Counter 0031  
                        ??_main 004E               __end_of_GPIO_Init 05A4            __end_of_Display_Init 05E1  
              ___llmod@dividend 0077                ___awdiv@dividend 0072                  ??_Buttons_Init 004E  
             SSD_Display@Number 0072                          i1l2400 056F                          u200_20 045E  
                        u200_21 045D                          i1l1450 066D                          i1l2410 0119  
                        i1l2402 0576                          i1l2500 0364                          i1l2420 012D  
                        i1l2412 011D                          i1l2404 057C                          i1l2180 0300  
                        i1l2510 0379                          i1l2502 0368                          i1l2430 0143  
                        i1l2422 0131                          i1l2414 0122                          i1l2190 0326  
                        i1l2182 0303                          i1l2520 038D                          i1l2512 037E  
                        i1l2504 036D                          i1l2440 0163                          i1l2432 0147  
                        i1l2424 0133                          i1l2416 0124                          i1l2408 0118  
                        i1l2600 049B                          i1l2192 0334                          i1l2184 030C  
                        u201_20 0471                          u201_21 0470                          i1l2514 037F  
                        i1l2522 038F                          i1l2506 0372                          i1l2370 024E  
                        i1l2442 016A                          i1l2434 014B                          i1l2426 0139  
                        i1l2418 0128                          i1l2530 009A                          i1l2610 04B2  
                        i1l2602 049D                          i1l2194 033D                          i1l2186 0310  
                        i1l2178 02F8                          i1l2516 0383                          i1l2508 0374  
                        i1l2380 0267                          i1l2372 0253                          i1l2364 0243  
                        i1l2436 015C                          i1l2428 013C                          i1l2444 0170  
                        i1l2460 02AB                          i1l2452 029F                          i1l2540 00BF  
                        i1l2532 00A6                          i1l2524 0039                          i1l2700 0536  
                        i1l2612 04B7                          i1l2604 04A1                          i1l2620 042C  
                        i1l2188 0314                          i1l2196 0343                          i1l2518 0388  
                        i1l2382 026C                          i1l2374 0258                          i1l2366 0244  
                        i1l2446 0175                          i1l2438 0162                          i1l2470 02C4  
                        i1l2462 02AF                          i1l2454 02A0                          i1l2550 00D9  
                        i1l2542 00C0                          i1l2534 00AD                          i1l2526 0094  
                        i1l2710 0545                          i1l2614 04B9                          i1l2606 04A7  
                        i1l2630 0444                          i1l2622 0434                          i1l2384 0271  
                        i1l2376 025D                          i1l2368 0249                          i1l2448 017A  
                        i1l2480 02E3                          i1l2472 02C8                          i1l2464 02B4  
                        i1l2456 02A4                          i1l2552 00E0                          i1l2544 00C7  
                        i1l2536 00B2                          i1l2528 0099                          i1l2704 053E  
                        i1l2608 04AB                          i1l2640 0458                          i1l2632 0448  
                        i1l2624 0438                          i1l2616 0424                          i1l2720 04EE  
                        u130_20 0314                          u130_21 0313                          i1l2490 064E  
                        i1l2378 0262                          i1l2474 02CC                          i1l2466 02BA  
                        i1l2482 02E9                          i1l2458 02A9                          i1l2554 00E5  
                        i1l2546 00CC                          i1l2538 00B3                          i1l2562 00F9  
                        i1l2650 0217                          i1l2642 01E4                          i1l2706 0543  
                        i1l2634 044F                          i1l2626 043A                          i1l2618 0428  
                        i1l2394 055C                          i1l2570 039A                          i1l2722 04F4  
                        i1l2492 034C                          i1l2388 0276                          i1l2484 02EE  
                        i1l2476 02D6                          i1l2468 02BD                          i1l2556 00E6  
                        i1l2548 00CD                          i1l2564 010F                          i1l2660 0225  
                        i1l2652 021C                          i1l2644 01F7                          i1l2636 0451  
                        i1l2628 043E                          i1l2396 055E                          i1l2580 03C8  
                        i1l2572 03A0                          i1l2716 04E7                          i1l2732 065B  
                        i1l2740 05F9                          i1l2494 0358                          i1l2486 02F3  
                        i1l2478 02DC                          i1l2558 00F2                          i1l2670 0237  
                        i1l2654 021D                          i1l2662 0227                          i1l2646 020D  
                        i1l2638 0456                          i1l2398 0562                          i1l2590 03D8  
                        i1l2582 03CC                          i1l2574 03B9                          i1l2718 04E8  
                        i1l2726 04FA                          i1l2734 063B                          i1l2750 060A  
                        i1l2742 05FD                          i1l2496 035E                          i1l2680 03E1  
                        i1l2672 023B                          i1l2664 022C                          i1l2656 0221  
                        i1l2648 0212                          i1l2592 03DE                          i1l2584 03CD  
                        i1l2576 03BC                          i1l2736 0661                          i1l2744 0601  
                        u131_20 0326                          i1l2760 0182                          u131_21 0325  
                        i1l2498 0363                          i1l2682 03E7                          i1l2674 023D  
                        i1l2666 0231                          i1l2658 0223                          i1l2594 048B  
                        i1l2586 03D3                          i1l2578 03C2                          i1l2746 0603  
                        i1l2738 05F8                          i1l2762 01BF                          i1l2754 017F  
                        i1l2770 05F1                          i1l2684 03F2                          i1l2692 0409  
                        i1l2676 023F                          i1l2668 0236                          i1l2596 048F  
                        i1l2588 03D7                          i1l2748 0605                          i1l2764 01D7  
                        i1l2780 046D                          i1l2772 045A                          u131_25 0322  
                        i1l2686 03F7                          i1l2694 041E                          i1l2678 03E0  
                        i1l2598 0493                          i1l2766 01DD                          i1l2782 0471  
                        i1l2774 045E                          i1l2688 0404                          i1l2768 05E1  
                        i1l2784 0472                          i1l2776 0460                          i1l2890 0413  
                        i1l2778 0461                          i1l2892 0101                          u140_25 0569  
                        u132_25 0335                          i1l2894 027E                          i1l2886 0504  
                        i1l2888 054F                          u133_20 0343                          u133_21 0342  
                        u141_25 0570                          u142_20 057C                          u142_21 057B  
                        _INTEDG 040E                          u150_25 0164                          u151_20 0170  
                        u143_20 011D                          u151_21 016F                          u143_21 011C  
                        u152_20 0175                          u144_20 0128                          u160_20 02E9  
                        u128_20 0300                          u152_21 0174                          u144_21 0127  
                        u160_21 02E8                          u128_21 02FF                          u145_20 0139  
                        u161_20 02EE                          u153_20 02A4                          u145_21 0138  
                        u161_21 02ED                          u153_21 02A3                          u129_25 0305  
                        u162_20 0358                          u154_20 02AF                          u170_20 00B2  
                        u162_21 0357                          u154_21 02AE                          u170_21 00B1  
                        u162_25 0354                          u146_25 013D                          u163_20 035E  
                        u147_20 014B                          u155_20 02BA                          u171_20 00CC  
                        u139_20 0562                          u163_21 035D                          u147_21 014A  
                        u155_21 02B9                          u171_21 00CB                          u139_21 0561  
                        u164_20 0363                          u172_20 00E5                          u180_20 04A7  
                        u164_21 0362                          u172_21 00E4                          u180_21 04A6  
                        u148_25 014C                          u156_25 02BE                          u165_20 0372  
                        u149_20 015C                          u157_20 02CC                          u181_20 04AB  
                        u173_20 03B9                          u165_21 0371                          u149_21 015B  
                        u157_21 02CB                          u181_21 04AA                          u173_21 03B8  
                        u149_25 0158                          u166_20 0379                          u158_20 02D6  
                        u190_20 0217                          u182_20 04B2                          u174_20 03C8  
                        u166_21 0378                          u158_21 02D5                          u190_21 0216  
                        u182_21 04B1                          u174_21 03C7                          u158_25 02D2  
                        u167_20 037E                          u191_20 021C                          u183_20 0428  
                        u175_20 03D3                          u167_21 037D                          u191_21 021B  
                        u183_21 0427                          u175_21 03D2                          u159_25 02DD  
                        u168_20 038D                          u192_20 022C                          u184_20 042C  
                        u176_20 03DE                          u168_21 038C                          u192_21 022B  
                        u184_21 042B                          u176_21 03DD                          u169_20 0099  
                        u193_20 0231                          u177_20 048F                          u185_20 0434  
                        u169_21 0098                          u193_21 0230                          u177_21 048E  
                        u185_21 0433                          u194_20 0236                          u178_20 0493  
                        u186_20 0444                          u194_21 0235                          u178_21 0492  
                        u186_21 0443                          u195_20 053A                          u179_20 049B  
                        u187_20 0448                          u195_21 0539                          u179_21 049A  
                        u187_21 0447                          u188_20 044F                          u196_20 05FD  
                        u188_21 044E                          u196_21 05FC                          u189_20 0212  
                        u197_20 060A                          u189_21 0211                          u197_21 0609  
                        u198_20 01BF                          u198_21 01BE                          u199_20 01E3  
                        u199_21 01E2                      __i1fptable 0024                          _TMR0IF 005A  
         _EXTI_SettingButton_CB 066D                          _Digit1 002C                          _Digit2 002B  
                        _Digit3 002A                          _Digit4 0029                          ___bmul 05F7  
                _Enable_Minutes 002F                          ___wmul 055C                       ??___awdiv 0074  
                     ??___awmod 0074                       ??___llmod 007B                      _Timer_Init 062D  
                   ?_Clock_Init 0070                          _memset 05A4                ___awdiv@quotient 0076  
               ___awmod@divisor 0070              __size_of_Timer0_CB 0016                 ___awmod@counter 0074  
                 ??_Timer_Start 0048                          fptable 0023                          fptotal 0000  
                        saved_w 007E         __end_of__initialization 001F             ___bmul@multiplicand 0070  
         __size_of_Clock_Normal 0046                    ?_SSD_Display 0070           __size_of_Clock_Update 0029  
           Display_Blink@_MODE_ 0072                  __pcstackCOMMON 0070               ?_Scheduler_Update 0070  
                 __end_of_Tasks 061B              ??_Scheduler_Update 003D                     _ButtonsFlag 007D  
   __size_of_Clock_Hour_Setting 0030                  _OPTION_REGbits 0081         ??_Clock_Minutes_Setting 0070  
                  _Enable_Hours 002E             __end_of_Timer_Start 066D                      __pbssBANK0 0020  
                  _Clock_Normal 039A             __size_of_Clock_Init 0006          ?_EXTI_SettingButton_CB 0070  
                  _Clock_Update 04E7               __end_of_Timer0_CB 05F7                  _Buttons_Update 01E4  
      __end_of_ModeManager_Init 066B                      __pmaintext 04BB           __end_of_Display_Blink 039A  
                       ?___bmul 0070                         ?___wmul 0070                      __pintentry 0004  
                   ?_Timer_Init 0070            __end_of_Buttons_Init 0536                         ?_memset 0048  
         __size_of_Display_Init 001B                      __stringtab 060C                 _Scheduler_Task1 065B  
               _Scheduler_Task2 063B                 _Scheduler_Task3 0661               Scheduler_Update@i 0043  
                       i1fpbase 0029                         _Display 0032          __end_of_Buttons_Update 0242  
            _ModeManager_Update 0536                    _Display_Init 05C6                 __size_of___bmul 0015  
                       ___awdiv 0118                         ___awmod 029F                 __size_of___wmul 0025  
                       ___llmod 02F8             ?_ModeManager_Update 0070                 __size_of_memset 0022  
                       __ptext1 066B                         __ptext2 062D                         __ptext3 061D  
                       __ptext4 0667                         __ptext5 0581                         __ptext6 05C6  
                       __ptext7 0655                         __ptext8 0510                         __ptext9 05A4  
       __size_of_Display_Normal 0007             __size_of__i1fptable 0015         __size_of_Display_Update 0044  
                  __size_of_ISR 0031                     _Timer_Start 066B                ___awmod@dividend 0072  
                       clrloop0 0647                       _GPIO_Init 0581            end_of_initialization 001F  
          ??_ModeManager_Update 0070             __size_of_Timer_Init 000E                         memset@c 0048  
                       memset@n 004A                         memset@p 004C                 ?_Buttons_Update 0070  
          __size_of_SSD_Display 005D                    ??_Clock_Init 0048         __size_of_Scheduler_Init 0010  
       __end_of_Scheduler_Task1 0661         __end_of_Scheduler_Task2 0646         __end_of_Scheduler_Task3 0667  
                    ?_GPIO_Init 0070              __end_of_Clock_Init 065B           __size_of_Buttons_Init 0026  
                 _DigitSelector 0030                  __end_of___bmul 060C            Display_Blink@Counter 0027  
                __end_of___wmul 0581                  __end_of_memset 05C6             start_initialization 0015  
                   __end_of_ISR 048B       __size_of_Scheduler_Update 0065             Clock_Normal@counter 002D  
       ??_EXTI_SettingButton_CB 0070  __size_of_Clock_Minutes_Setting 0036   __end_of_Clock_Minutes_Setting 045A  
                  _Buttons_Init 0510                 ___llmod@divisor 0073                 ___llmod@counter 007C  
                     _Task_Flag 003A                       _Timer0_CB 05E1               ?_ModeManager_Init 0070  
                      ??___bmul 0071                        ??___wmul 0074                    ??_Timer_Init 0048  
            ??_ModeManager_Init 0048                        ??_memset 004C      __end_of_Clock_Hour_Setting 04BB  
                _Display_Normal 064E                  _Display_Update 03E0              __end_of__i1fptable 0039  
                   __pbssCOMMON 007D                       ___latbits 0002                   __pcstackBANK0 003D  
              ?_Scheduler_Task1 0070                ?_Scheduler_Task2 0070                ?_Scheduler_Task3 0070  
                   ??_GPIO_Init 0048              __end_of_Timer_Init 063B                      ?_Timer0_CB 0070  
    __end_of_Interrupt_CbStruct 061D                       __pfunctab 0023                        ?___awdiv 0070  
                      ?___awmod 0070                        ?___llmod 0073          __end_of_Display_Normal 0655  
             _SSD_DigitSelector 0039          __end_of_Display_Update 0424                       __pstrings 060C  
            ?_SSD_DigitSelector 0070                    ?_Timer_Start 0070                  _Scheduler_Init 061D  
           ??_SSD_DigitSelector 0078          __size_of_Display_Blink 004E                ??_Buttons_Update 0076  
             interrupt_function 0004                  ___wmul@product 0074                       clear_ram0 0646  
     __end_of_SSD_DigitSelector 0118                 ?_Display_Normal 0070                 ?_Display_Update 0070  
        __end_of_Scheduler_Init 062D                     __stringbase 0611               ___wmul@multiplier 0070  
             _Debounce_UpButton 0037                _Scheduler_Update 017F                        i1fptable 0024  
                      i1fptotal 000A     __size_of_ModeManager_Update 0026                   ??_SSD_Display 0070  
                   ??_Timer0_CB 007D                   _Display_Blink 034C                __size_of___awdiv 0067  
              __size_of___awmod 0059                __size_of___llmod 0054                 ?_Scheduler_Init 0070  
            __end_of__stringtab 0612                        __ptext10 045A                        __ptext11 05E1  
                      __ptext20 055C                        __ptext12 017F                        __ptext21 0424  
                      __ptext13 02F8                        __ptext30 064E                        __ptext22 048B  
                      __ptext14 05F7                        __ptext31 034C                        __ptext23 0536  
                      __ptext15 063B                        __ptext32 066D                        __ptext24 01E4  
                      __ptext16 065B                        __ptext25 03E0                        __ptext17 0661  
                      __ptext26 0039                        __ptext18 04E7                        __ptext27 029F  
                      __ptext19 039A                        __ptext28 0118                        __ptext29 0242  
__size_of_EXTI_SettingButton_CB 0002                   ?_Clock_Normal 0070   __end_of_EXTI_SettingButton_CB 066F  
                 ?_Clock_Update 0070                   __size_of_main 002C                  ?_Display_Blink 0070  
    __size_of_SSD_DigitSelector 00DF             __end_of_SSD_Display 029F                      _INTCONbits 000B  
     __size_of_ModeManager_Init 0004            __size_of_Timer_Start 0002                        memset@p1 004D  
                  fp__Timer0_CB 0036              _Clock_Hour_Setting 048B                  ??_Clock_Normal 0076  
                ??_Clock_Update 0078                        intlevel1 0023           _Clock_Minutes_Setting 0424  
           ?_Clock_Hour_Setting 0070                       stringcode 060C                   ?_Display_Init 0070  
          ??_Clock_Hour_Setting 0070              _Interrupt_CbStruct 061B                        stringdir 060C  
                      stringtab 060C        __size_of_Scheduler_Task1 0006        __size_of_Scheduler_Task2 000B  
      __size_of_Scheduler_Task3 0006              fp__Scheduler_Task1 0030              fp__Scheduler_Task2 0033  
            fp__Scheduler_Task3 002D             _Debounce_DownButton 0034                 ??_Display_Blink 0073  
      fp__EXTI_SettingButton_CB 002A                ??_Display_Normal 0070                ??_Display_Update 007A  
                ??_Display_Init 0048                     _SSD_Display 0242        __end_of_Scheduler_Update 01E4  
